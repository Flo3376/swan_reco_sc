[
    {
        "id": "d1b71e2b.e38c8",
        "type": "tab",
        "label": "14_Modeurs_tools",
        "disabled": true,
        "info": ""
    },
    {
        "id": "93470422.a61e48",
        "type": "inject",
        "z": "d1b71e2b.e38c8",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 80,
        "wires": [
            [
                "c71f2adc.91be98"
            ]
        ]
    },
    {
        "id": "c71f2adc.91be98",
        "type": "file in",
        "z": "d1b71e2b.e38c8",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "d916851a.c3ed68"
            ]
        ]
    },
    {
        "id": "d916851a.c3ed68",
        "type": "json",
        "z": "d1b71e2b.e38c8",
        "name": "from json",
        "pretty": false,
        "x": 440,
        "y": 80,
        "wires": [
            [
                "33dfe25c.78a56e"
            ]
        ]
    },
    {
        "id": "33dfe25c.78a56e",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"14_Modeurs_tools\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            if(data[i].id===id_scan && data[i].disabled===false)\n            {\n                data[i].disabled=true\n            }\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 80,
        "wires": [
            [
                "595be767.cc8ea8"
            ]
        ]
    },
    {
        "id": "595be767.cc8ea8",
        "type": "json",
        "z": "d1b71e2b.e38c8",
        "name": "to json",
        "pretty": true,
        "x": 710,
        "y": 80,
        "wires": [
            [
                "c0aae154.9cf79"
            ]
        ]
    },
    {
        "id": "c0aae154.9cf79",
        "type": "file",
        "z": "d1b71e2b.e38c8",
        "name": "14_Modeurs_tools.json",
        "filename": "./../viseo-bot-project/data/flow/master/14_Modeurs_tools.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 890,
        "y": 80,
        "wires": []
    },
    {
        "id": "b6c68c5e.b8c6b",
        "type": "comment",
        "z": "d1b71e2b.e38c8",
        "name": "sauvegarde du flow pour exportation ou modeur (ne pas utiliser)",
        "info": "",
        "x": 270,
        "y": 40,
        "wires": []
    },
    {
        "id": "9879a7f8.a35fb8",
        "type": "comment",
        "z": "d1b71e2b.e38c8",
        "name": "Module pour faire des exportations",
        "info": "Pour le configurer il faudra:\n-ouvrir la case targeting et remplacer \"<nom>\" par le nom de l'onglet\n-ouvrir la case fichier json et remplacer \"<nom>\" par le nom de l'onglet",
        "x": 700,
        "y": 160,
        "wires": []
    },
    {
        "id": "60f344f4.c58bcc",
        "type": "inject",
        "z": "d1b71e2b.e38c8",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 200,
        "wires": [
            [
                "8c6a7573.2c8398"
            ]
        ]
    },
    {
        "id": "8c6a7573.2c8398",
        "type": "file in",
        "z": "d1b71e2b.e38c8",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 310,
        "y": 200,
        "wires": [
            [
                "28743b8a.b28484"
            ]
        ]
    },
    {
        "id": "28743b8a.b28484",
        "type": "json",
        "z": "d1b71e2b.e38c8",
        "name": "from json",
        "pretty": false,
        "x": 440,
        "y": 200,
        "wires": [
            [
                "18422f79.a024d1"
            ]
        ]
    },
    {
        "id": "18422f79.a024d1",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"<nom>\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 200,
        "wires": [
            [
                "cc11fdf8.83d02"
            ]
        ]
    },
    {
        "id": "cc11fdf8.83d02",
        "type": "json",
        "z": "d1b71e2b.e38c8",
        "name": "to json",
        "pretty": true,
        "x": 710,
        "y": 200,
        "wires": [
            [
                "4a4f233c.eee81c"
            ]
        ]
    },
    {
        "id": "4a4f233c.eee81c",
        "type": "file",
        "z": "d1b71e2b.e38c8",
        "name": "fichierjson",
        "filename": "./../viseo-bot-project/data/flow/mod/<nom>.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 840,
        "y": 200,
        "wires": []
    },
    {
        "id": "6e6bff1e.703f4",
        "type": "comment",
        "z": "d1b71e2b.e38c8",
        "name": "Surveillance de swan",
        "info": "",
        "x": 740,
        "y": 340,
        "wires": []
    },
    {
        "id": "acf0954a.42eda8",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "appelle station/base/pad/hangar",
        "func": "let accept={}\nlet reject={}\nlet search=[];\n\nsearch.push('open_hangar');\nlet find=false;\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask);\n                find=true;\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 190,
        "y": 640,
        "wires": [
            [
                "af52bf79.76cbe"
            ],
            []
        ]
    },
    {
        "id": "95865f3e.51caa",
        "type": "start-up-trigger",
        "z": "d1b71e2b.e38c8",
        "x": 140,
        "y": 440,
        "wires": [
            [
                "e4f9d9ae.10f7c8"
            ]
        ]
    },
    {
        "id": "e4f9d9ae.10f7c8",
        "type": "trigger",
        "z": "d1b71e2b.e38c8",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 420,
        "y": 440,
        "wires": [
            [
                "175a50cd.34835f"
            ]
        ]
    },
    {
        "id": "175a50cd.34835f",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\n\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 440,
        "wires": [
            [
                "11ad41c5.0bb59e"
            ]
        ]
    },
    {
        "id": "11ad41c5.0bb59e",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1070,
        "y": 440,
        "wires": [
            [
                "acf0954a.42eda8"
            ]
        ]
    },
    {
        "id": "af52bf79.76cbe",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 640,
        "wires": [
            [
                "c8a2f239.13f72",
                "ce62d25a.6cb3b"
            ]
        ]
    },
    {
        "id": "9d64edf6.91158",
        "type": "comment",
        "z": "d1b71e2b.e38c8",
        "name": "Une fois que Swan à démarrer",
        "info": "",
        "x": 140,
        "y": 400,
        "wires": []
    },
    {
        "id": "f1ee28b5.e41308",
        "type": "comment",
        "z": "d1b71e2b.e38c8",
        "name": "Toutes les 250 milliseconde",
        "info": "",
        "x": 420,
        "y": 400,
        "wires": []
    },
    {
        "id": "855a441d.3d9758",
        "type": "comment",
        "z": "d1b71e2b.e38c8",
        "name": "Elle regarde les informations qui passent",
        "info": "",
        "x": 740,
        "y": 400,
        "wires": []
    },
    {
        "id": "1d78c3d0.0a5b2c",
        "type": "comment",
        "z": "d1b71e2b.e38c8",
        "name": "elle vérifie quelle est en veille ou active",
        "info": "",
        "x": 1070,
        "y": 400,
        "wires": []
    },
    {
        "id": "402e19c1.881278",
        "type": "comment",
        "z": "d1b71e2b.e38c8",
        "name": "si elle reçois la consigne de la porte de hangar",
        "info": "",
        "x": 190,
        "y": 680,
        "wires": []
    },
    {
        "id": "d4077754.41d8c8",
        "type": "comment",
        "z": "d1b71e2b.e38c8",
        "name": "elle va supprimer l'information de la mémoire",
        "info": "",
        "x": 570,
        "y": 680,
        "wires": []
    },
    {
        "id": "c8a2f239.13f72",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "ng_sfx base",
        "func": "let sound_effect=[];\nlet track_id='base';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 640,
        "wires": [
            [
                "b345b36b.57db"
            ]
        ]
    },
    {
        "id": "ce62d25a.6cb3b",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "keybinding_auto v_atc_request",
        "func": "let keybinding=global.get('v_atc_request');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1010,
        "y": 740,
        "wires": [
            [
                "b345b36b.57db"
            ]
        ]
    },
    {
        "id": "b345b36b.57db",
        "type": "exec",
        "z": "d1b71e2b.e38c8",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1350,
        "y": 640,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "296c91c8.5dcd7e",
        "type": "comment",
        "z": "d1b71e2b.e38c8",
        "name": "Elle va préparer le son à envoyer en retour (ngx)",
        "info": "",
        "x": 1000,
        "y": 600,
        "wires": []
    },
    {
        "id": "44a054da.79335c",
        "type": "comment",
        "z": "d1b71e2b.e38c8",
        "name": "elle va préparer la touche qui sera appuyée",
        "info": "",
        "x": 1000,
        "y": 780,
        "wires": []
    },
    {
        "id": "92a4f7ff.3d6328",
        "type": "comment",
        "z": "d1b71e2b.e38c8",
        "name": "elle va executer les commandes",
        "info": "",
        "x": 1310,
        "y": 680,
        "wires": []
    },
    {
        "id": "e1ac2982.1a8bf8",
        "type": "comment",
        "z": "d1b71e2b.e38c8",
        "name": "Principe de commande unique/ commande simulée",
        "info": "",
        "x": 830,
        "y": 860,
        "wires": []
    },
    {
        "id": "416755dd.3acaac",
        "type": "comment",
        "z": "d1b71e2b.e38c8",
        "name": "Cas qui ne peut pas fonctionner",
        "info": "Si une consigne en envoyée, la première case qui la voie vas la supprimer et les autre ne pourront pas utiliser cette consigne.\n\nDans ce cas nous avons la case \"appelle station/base/pad/hangar\" qui est déjà présente.\nLe soucis n'est pas localiser à un onglet, mais tous les onglets.",
        "x": 270,
        "y": 920,
        "wires": []
    },
    {
        "id": "d799b6fb.2167f8",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "appelle station/base/pad/hangar",
        "func": "let accept={}\nlet reject={}\nlet search=[];\n\nsearch.push('open_hangar');\nlet find=false;\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask);\n                find=true;\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 970,
        "y": 1000,
        "wires": [
            [
                "c3ffe238.8e3be"
            ],
            []
        ]
    },
    {
        "id": "ff0b63ca.92bf4",
        "type": "start-up-trigger",
        "z": "d1b71e2b.e38c8",
        "x": 120,
        "y": 1000,
        "wires": [
            [
                "a9e55903.454b28"
            ]
        ]
    },
    {
        "id": "a9e55903.454b28",
        "type": "trigger",
        "z": "d1b71e2b.e38c8",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 320,
        "y": 1000,
        "wires": [
            [
                "273c22e4.7d2abe"
            ]
        ]
    },
    {
        "id": "273c22e4.7d2abe",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\n\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 1000,
        "wires": [
            [
                "f8eab2ec.6e322"
            ]
        ]
    },
    {
        "id": "f8eab2ec.6e322",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 1000,
        "wires": [
            [
                "d799b6fb.2167f8"
            ]
        ]
    },
    {
        "id": "c3ffe238.8e3be",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 1060,
        "wires": [
            [
                "856372a.e30319"
            ]
        ]
    },
    {
        "id": "856372a.e30319",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "keybinding_auto v_atc_request",
        "func": "let keybinding=global.get('v_atc_request');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 810,
        "y": 1060,
        "wires": [
            [
                "10ba1269.91546e"
            ]
        ]
    },
    {
        "id": "10ba1269.91546e",
        "type": "exec",
        "z": "d1b71e2b.e38c8",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1070,
        "y": 1060,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e858f3dd.954a1",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "appelle station/base/pad/hangar",
        "func": "let accept={}\nlet reject={}\nlet search=[];\n\nsearch.push('open_hangar');\nlet find=false;\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask);\n                find=true;\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 970,
        "y": 1240,
        "wires": [
            [
                "e09fc04f.ed68d"
            ],
            []
        ]
    },
    {
        "id": "6b98801.c48728",
        "type": "start-up-trigger",
        "z": "d1b71e2b.e38c8",
        "x": 120,
        "y": 1240,
        "wires": [
            [
                "44ff2754.f758c8"
            ]
        ]
    },
    {
        "id": "44ff2754.f758c8",
        "type": "trigger",
        "z": "d1b71e2b.e38c8",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 320,
        "y": 1240,
        "wires": [
            [
                "698388a.b6d5978"
            ]
        ]
    },
    {
        "id": "698388a.b6d5978",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\n\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 1240,
        "wires": [
            [
                "c1e09f07.4d633"
            ]
        ]
    },
    {
        "id": "c1e09f07.4d633",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 1240,
        "wires": [
            [
                "e858f3dd.954a1"
            ]
        ]
    },
    {
        "id": "e09fc04f.ed68d",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 1300,
        "wires": [
            [
                "f8e021b3.45fcd"
            ]
        ]
    },
    {
        "id": "f8e021b3.45fcd",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "ng_sfx base",
        "func": "let sound_effect=[];\nlet track_id='base';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 1300,
        "wires": [
            [
                "88ab0266.18d99"
            ]
        ]
    },
    {
        "id": "88ab0266.18d99",
        "type": "exec",
        "z": "d1b71e2b.e38c8",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1070,
        "y": 1300,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "430d7bb4.96a3c4",
        "type": "comment",
        "z": "d1b71e2b.e38c8",
        "name": "Cas qui peut fonctionner",
        "info": "Si une consigne en envoyée, la première case qui la voie vas la supprimer et les autre ne pourront pas utiliser cette consigne.\n\nDans ce cas nous avons la case \"appelle station/base/pad/hangar\" qui est déjà présente.\nLe soucis n'est pas localiser à un onglet, mais tous les onglets.",
        "x": 250,
        "y": 1380,
        "wires": []
    },
    {
        "id": "aeccbe5b.7d3bb",
        "type": "comment",
        "z": "d1b71e2b.e38c8",
        "name": "sur le même onglet, ou un autre",
        "info": "Si une consigne en envoyée, la première case qui la voie vas la supprimer et les autre ne pourront pas utiliser cette consigne.\n\nDans ce cas nous avons la case \"appelle station/base/pad/hangar\" qui est déjà présente.\nLe soucis n'est pas localiser à un onglet, mais tous les onglets.",
        "x": 790,
        "y": 1200,
        "wires": []
    },
    {
        "id": "e31df62b.002aa8",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "appelle station/base/pad/hangar",
        "func": "let accept={}\nlet reject={}\nlet search=[];\n\nsearch.push('open_hangar');\nlet find=false;\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask);\n                find=true;\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 970,
        "y": 1440,
        "wires": [
            [
                "eb0fc5a.692c938"
            ],
            []
        ]
    },
    {
        "id": "994d26e8.2d2768",
        "type": "start-up-trigger",
        "z": "d1b71e2b.e38c8",
        "x": 120,
        "y": 1440,
        "wires": [
            [
                "9bd927c3.77bad8"
            ]
        ]
    },
    {
        "id": "9bd927c3.77bad8",
        "type": "trigger",
        "z": "d1b71e2b.e38c8",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 320,
        "y": 1440,
        "wires": [
            [
                "7887c6f4.af05a8"
            ]
        ]
    },
    {
        "id": "7887c6f4.af05a8",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\n\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 1440,
        "wires": [
            [
                "5a8cc574.4a1f1c"
            ]
        ]
    },
    {
        "id": "5a8cc574.4a1f1c",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 1440,
        "wires": [
            [
                "e31df62b.002aa8"
            ]
        ]
    },
    {
        "id": "eb0fc5a.692c938",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 1500,
        "wires": [
            [
                "d1d0c74f.a1a3f8",
                "44943aef.437fa4"
            ]
        ]
    },
    {
        "id": "d1d0c74f.a1a3f8",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "keybinding_auto v_atc_request",
        "func": "let keybinding=global.get('v_atc_request');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 810,
        "y": 1500,
        "wires": [
            [
                "40378bd3.3d0d54"
            ]
        ]
    },
    {
        "id": "40378bd3.3d0d54",
        "type": "exec",
        "z": "d1b71e2b.e38c8",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1070,
        "y": 1500,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "97571d0b.bbc7b",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "ouvrir_le_hangar",
        "func": "let accept={}\nlet reject={}\nlet search=[];\n\nsearch.push('ouvrir_le_hangar');\nlet find=false;\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask);\n                find=true;\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 930,
        "y": 1740,
        "wires": [
            [
                "65fc127.24696ec"
            ],
            []
        ]
    },
    {
        "id": "b256387b.bd4c88",
        "type": "start-up-trigger",
        "z": "d1b71e2b.e38c8",
        "x": 120,
        "y": 1740,
        "wires": [
            [
                "cc8899d3.46d378"
            ]
        ]
    },
    {
        "id": "cc8899d3.46d378",
        "type": "trigger",
        "z": "d1b71e2b.e38c8",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 320,
        "y": 1740,
        "wires": [
            [
                "aff20fa2.a9309"
            ]
        ]
    },
    {
        "id": "aff20fa2.a9309",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\n\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 1740,
        "wires": [
            [
                "3ab8e0b4.49d5c"
            ]
        ]
    },
    {
        "id": "3ab8e0b4.49d5c",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 1740,
        "wires": [
            [
                "97571d0b.bbc7b"
            ]
        ]
    },
    {
        "id": "65fc127.24696ec",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 1800,
        "wires": [
            [
                "cdab1de2.ca98e"
            ]
        ]
    },
    {
        "id": "cdab1de2.ca98e",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "ng_sfx base",
        "func": "let sound_effect=[];\nlet track_id='base';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 1800,
        "wires": [
            [
                "e7f32e8a.a1079"
            ]
        ]
    },
    {
        "id": "e7f32e8a.a1079",
        "type": "exec",
        "z": "d1b71e2b.e38c8",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1070,
        "y": 1800,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "97c2283e.c2f938",
        "type": "comment",
        "z": "d1b71e2b.e38c8",
        "name": "sur le même onglet, ou un autre",
        "info": "Si une consigne en envoyée, la première case qui la voie vas la supprimer et les autre ne pourront pas utiliser cette consigne.\n\nDans ce cas nous avons la case \"appelle station/base/pad/hangar\" qui est déjà présente.\nLe soucis n'est pas localiser à un onglet, mais tous les onglets.",
        "x": 790,
        "y": 1700,
        "wires": []
    },
    {
        "id": "44943aef.437fa4",
        "type": "function",
        "z": "d1b71e2b.e38c8",
        "name": "commande simulée  ouvrir_le_hangar",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'ouvrir_le_hangar';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\n\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 1560,
        "wires": [
            []
        ]
    }
]