[
    {
        "id": "ff26b391.7439",
        "type": "tab",
        "label": "07_Communication",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2bee05d9.90245a",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "ng_sfx base",
        "func": "let sound_effect=[];\nlet track_id='base';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 240,
        "wires": [
            [
                "334cc213.2801ee"
            ]
        ]
    },
    {
        "id": "118f7da4.6794b2",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "appelle station/base/pad/hangar",
        "func": "let accept={}\nlet reject={}\nlet search=[];\n\nsearch.push('open_hangar');\nlet find=false;\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask);\n                find=true;\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 630,
        "y": 240,
        "wires": [
            [
                "edbed70b.dc70d8"
            ],
            []
        ]
    },
    {
        "id": "334cc213.2801ee",
        "type": "exec",
        "z": "ff26b391.7439",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1590,
        "y": 240,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "4b6634d3.ffcddc",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "autorisation décolage",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"take_off\")\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n\n",
        "outputs": "2",
        "noerr": 0,
        "x": 600,
        "y": 280,
        "wires": [
            [
                "bd4a71b0.9bdf1"
            ],
            []
        ]
    },
    {
        "id": "2acb80a6.97c94",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "ng_sfx clear_take_off",
        "func": "let sound_effect=[];\nlet track_id='clear_take_off';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 280,
        "wires": [
            [
                "334cc213.2801ee"
            ]
        ]
    },
    {
        "id": "b3cea493.67a618",
        "type": "start-up-trigger",
        "z": "ff26b391.7439",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "79cda2c3.75953c"
            ]
        ]
    },
    {
        "id": "79cda2c3.75953c",
        "type": "trigger",
        "z": "ff26b391.7439",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 340,
        "y": 120,
        "wires": [
            [
                "c7ccf8d.f2dcb08",
                "66662743.148b38"
            ]
        ]
    },
    {
        "id": "c7ccf8d.f2dcb08",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\n\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 240,
        "wires": [
            [
                "2bcdb6bd.cdf49a"
            ]
        ]
    },
    {
        "id": "2bcdb6bd.cdf49a",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 240,
        "wires": [
            [
                "118f7da4.6794b2",
                "4b6634d3.ffcddc",
                "33432ed2.fea8f2"
            ]
        ]
    },
    {
        "id": "6fc3317d.09dd1",
        "type": "comment",
        "z": "ff26b391.7439",
        "name": "appel station",
        "info": "\n\n",
        "x": 110,
        "y": 200,
        "wires": []
    },
    {
        "id": "edbed70b.dc70d8",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 240,
        "wires": [
            [
                "2bee05d9.90245a",
                "d426e851.6ed878"
            ]
        ]
    },
    {
        "id": "bd4a71b0.9bdf1",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 280,
        "wires": [
            [
                "2acb80a6.97c94",
                "d426e851.6ed878"
            ]
        ]
    },
    {
        "id": "79cd41ca.ac15c",
        "type": "comment",
        "z": "ff26b391.7439",
        "name": "Discord",
        "info": "\n\n",
        "x": 90,
        "y": 400,
        "wires": []
    },
    {
        "id": "327e3340.c11ecc",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "envoie mon discord",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"my_discord\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n           if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 590,
        "y": 480,
        "wires": [
            [
                "a0321f73.675f5"
            ],
            []
        ]
    },
    {
        "id": "7719e679.de48c8",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "envoie invite",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"corpo_discord\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n           if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 570,
        "y": 440,
        "wires": [
            [
                "f1d81939.8d61a8"
            ],
            []
        ]
    },
    {
        "id": "29740ed8.fe7e52",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 480,
        "wires": [
            [
                "f007e95c.e45598"
            ]
        ]
    },
    {
        "id": "f007e95c.e45598",
        "type": "exec",
        "z": "ff26b391.7439",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1590,
        "y": 480,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "120de197.eac73e",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "keybinding_send_text",
        "func": "msg.payload=global.get('a_k_send_path')+\" \"+global.get('my_discord')\n\nreturn msg\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1260,
        "y": 440,
        "wires": [
            [
                "f007e95c.e45598"
            ]
        ]
    },
    {
        "id": "4725334b.176fcc",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "keybinding_send_text",
        "func": "msg.payload=global.get('a_k_send_path')+\" \"+global.get('my_id_discord')\n\nreturn msg\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1260,
        "y": 520,
        "wires": [
            [
                "f007e95c.e45598"
            ]
        ]
    },
    {
        "id": "66662743.148b38",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 440,
        "wires": [
            [
                "850e7148.195ff"
            ]
        ]
    },
    {
        "id": "850e7148.195ff",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 440,
        "wires": [
            [
                "7719e679.de48c8",
                "327e3340.c11ecc"
            ]
        ]
    },
    {
        "id": "f1d81939.8d61a8",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 440,
        "wires": [
            [
                "120de197.eac73e",
                "29740ed8.fe7e52"
            ]
        ]
    },
    {
        "id": "a0321f73.675f5",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 480,
        "wires": [
            [
                "4725334b.176fcc",
                "29740ed8.fe7e52"
            ]
        ]
    },
    {
        "id": "d426e851.6ed878",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "keybinding_auto v_atc_request",
        "func": "let keybinding=global.get('v_atc_request');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1290,
        "y": 360,
        "wires": [
            [
                "334cc213.2801ee"
            ]
        ]
    },
    {
        "id": "33432ed2.fea8f2",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "autorisation atterissage",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"landing\")\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n\n",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 320,
        "wires": [
            [
                "36f738b3.84ace8"
            ],
            []
        ]
    },
    {
        "id": "36f738b3.84ace8",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 320,
        "wires": [
            [
                "d426e851.6ed878",
                "d71ce4c9.131178"
            ]
        ]
    },
    {
        "id": "d71ce4c9.131178",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "ng_sfx clear_landing",
        "func": "let sound_effect=[];\nlet track_id='clear_landing';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nconsole.log(\"taille de la banque\")\nconsole.log(sound_effect.length)\nconsole.log(sound_effect)\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 320,
        "wires": [
            [
                "334cc213.2801ee"
            ]
        ]
    },
    {
        "id": "b9b2d63e.037f98",
        "type": "inject",
        "z": "ff26b391.7439",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 60,
        "wires": [
            [
                "53c82312.29087c"
            ]
        ]
    },
    {
        "id": "53c82312.29087c",
        "type": "file in",
        "z": "ff26b391.7439",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 310,
        "y": 60,
        "wires": [
            [
                "c1843458.3be468"
            ]
        ]
    },
    {
        "id": "c1843458.3be468",
        "type": "json",
        "z": "ff26b391.7439",
        "name": "from json",
        "pretty": false,
        "x": 440,
        "y": 60,
        "wires": [
            [
                "1f7d4905.a84197"
            ]
        ]
    },
    {
        "id": "1f7d4905.a84197",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"07_Communication\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 60,
        "wires": [
            [
                "d40c9359.5207d"
            ]
        ]
    },
    {
        "id": "d40c9359.5207d",
        "type": "json",
        "z": "ff26b391.7439",
        "name": "to json",
        "pretty": true,
        "x": 710,
        "y": 60,
        "wires": [
            [
                "b3054cf1.36e0f"
            ]
        ]
    },
    {
        "id": "b3054cf1.36e0f",
        "type": "file",
        "z": "ff26b391.7439",
        "name": "07_Communication.json",
        "filename": "./../viseo-bot-project/data/flow/master/07_Communication.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 890,
        "y": 60,
        "wires": []
    },
    {
        "id": "1e85bcf3.fa1c23",
        "type": "comment",
        "z": "ff26b391.7439",
        "name": "sauvegarde du flow pour exportation ou modeur",
        "info": "",
        "x": 220,
        "y": 20,
        "wires": []
    }
]