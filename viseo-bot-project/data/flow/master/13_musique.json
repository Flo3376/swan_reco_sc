[
    {
        "id": "e51f5302.12682",
        "type": "tab",
        "label": "13_musique",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b5ade591.6b9c58",
        "type": "fs-ops-dir",
        "z": "e51f5302.12682",
        "name": "search phase_décollage",
        "path": "./../sounds/phase_décollage/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 1230,
        "y": 400,
        "wires": [
            [
                "77393115.4bd22"
            ]
        ]
    },
    {
        "id": "791d436d.5c00ec",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "lancement",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 600,
        "y": 360,
        "wires": [
            [
                "1a9917c3.7906c8"
            ]
        ]
    },
    {
        "id": "c068ac19.f0709",
        "type": "loop",
        "z": "e51f5302.12682",
        "name": "loop musique",
        "kind": "enum",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "payload",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-val",
        "finalPayload": "final-orig",
        "x": 1610,
        "y": 400,
        "wires": [
            [],
            [
                "27f0ea28.dd52a6"
            ]
        ]
    },
    {
        "id": "77393115.4bd22",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "shuffle",
        "func": "let file_list=msg.files;\n\nfunction shuffle(array) {\nlet currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex !== 0) {\n\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\nshuffle(file_list);\n\nmsg.payload=[];\n\nfor (i=0; i<file_list.length;i++)\n{\n     msg.payload.push(file_list[i]);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1390,
        "y": 400,
        "wires": [
            [
                "c068ac19.f0709"
            ]
        ]
    },
    {
        "id": "44cb631a.87171c",
        "type": "exec",
        "z": "e51f5302.12682",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1930,
        "y": 480,
        "wires": [
            [],
            [],
            [
                "e49d4f0a.ed5c3"
            ]
        ]
    },
    {
        "id": "27f0ea28.dd52a6",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "Ambiance_sfx",
        "func": "msg.payload=global.get('swan_path')+\"\\\\sounds\\\\phase_décollage\\\\\"+msg.payload\nmsg.filename=msg.payload\n\n\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para2`)+\" \\\"\"+msg.payload+\" \\\"\";\nconsole.log( msg.payload)\n\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1760,
        "y": 400,
        "wires": [
            [
                "44cb631a.87171c"
            ]
        ]
    },
    {
        "id": "6bd75c12.6df204",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "Stop",
        "topic": "",
        "payload": "kill",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 440,
        "wires": [
            [
                "e6f5b77d.49a9c8",
                "b4d1bb1a.258a38",
                "2acf2f44.1d287"
            ]
        ]
    },
    {
        "id": "35f4f2f4.70d08e",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "envoie le message de kill",
        "func": "\nmsg.payload='true'\nmsg.kill=\"vlc.exe\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1650,
        "y": 560,
        "wires": [
            [
                "44cb631a.87171c"
            ]
        ]
    },
    {
        "id": "e6f5b77d.49a9c8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "envoie le message de break",
        "func": "\nmsg.payload=\"break\"\nmsg.payload.command=\"break\"\nmsg.command=\"break\"\n\nglobal.set(\"player_status\", \"playing\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 440,
        "wires": [
            [
                "c068ac19.f0709"
            ]
        ]
    },
    {
        "id": "2acf2f44.1d287",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 1320,
        "y": 520,
        "wires": [
            [
                "35f4f2f4.70d08e"
            ]
        ]
    },
    {
        "id": "12f3a5be.7fc37a",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "suivant",
        "topic": "",
        "payload": "kill",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 540,
        "wires": [
            [
                "35f4f2f4.70d08e"
            ]
        ]
    },
    {
        "id": "b4d1bb1a.258a38",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "stop player",
        "func": "global.set(\"player_status\", \"stop\")",
        "outputs": 1,
        "noerr": 0,
        "x": 1310,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "bc99039b.b1353",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "lecture de musique phase décollage",
        "info": "\n\n",
        "x": 180,
        "y": 160,
        "wires": []
    },
    {
        "id": "191c4ab.5d97cb5",
        "type": "start-up-trigger",
        "z": "e51f5302.12682",
        "x": 120,
        "y": 200,
        "wires": [
            [
                "fb96ef73.63f46"
            ]
        ]
    },
    {
        "id": "fb96ef73.63f46",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 340,
        "y": 200,
        "wires": [
            [
                "475ea37b.6c8c8c"
            ]
        ]
    },
    {
        "id": "475ea37b.6c8c8c",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 260,
        "wires": [
            [
                "2a36292e.d24076"
            ]
        ]
    },
    {
        "id": "2a36292e.d24076",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 260,
        "wires": [
            [
                "df6c8d64.28f68",
                "4c9cf174.3fc25",
                "5baec896.cb3208",
                "baa1f40c.0789d8",
                "45a627e0.c138e8",
                "f4fdfca3.3c4e5"
            ]
        ]
    },
    {
        "id": "df6c8d64.28f68",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "thématique décollage",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"go_them_take_off\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        return accept\n    }\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 620,
        "y": 400,
        "wires": [
            [
                "2bdeae3d.b1afe2"
            ]
        ]
    },
    {
        "id": "4c9cf174.3fc25",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "musique suivante",
        "func": "let accept={}\nlet reject={}\nlet search=[]\nsearch.push(\"play_next\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        accept.payload=\"kill\";\n        return [accept,msg]\n    }\n    \n}",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 580,
        "wires": [
            [
                "35f4f2f4.70d08e"
            ],
            [
                "b3d39e83.2272a"
            ]
        ]
    },
    {
        "id": "5baec896.cb3208",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "stop la musique",
        "func": "let accept={}\nlet reject={}\nlet search=[]\nsearch.push(\"stop_player\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        accept.payload=\"kill\";\n        return [accept,msg]\n    }\n    \n}",
        "outputs": "2",
        "noerr": 0,
        "x": 600,
        "y": 480,
        "wires": [
            [
                "e6f5b77d.49a9c8",
                "b4d1bb1a.258a38",
                "2acf2f44.1d287"
            ],
            [
                "e825603c.b91f3"
            ]
        ]
    },
    {
        "id": "5ce67671.5d10a8",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "lecture de musique phase décollage",
        "info": "\n\n",
        "x": 660,
        "y": 320,
        "wires": []
    },
    {
        "id": "b94d2b8f.73e608",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 130,
        "y": 1740,
        "wires": [
            [
                "924ed368.9cbb6",
                "1d3c9251.8cc11e"
            ]
        ]
    },
    {
        "id": "9f146ef2.99051",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée go_them_take_off",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'go_them_take_off';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\nglobal.set(\"player_status\", \"playing\")\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "924ed368.9cbb6",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "500",
        "extend": false,
        "units": "ms",
        "reset": "reset",
        "name": "",
        "x": 340,
        "y": 1740,
        "wires": [
            [
                "9f146ef2.99051"
            ]
        ]
    },
    {
        "id": "2bdeae3d.b1afe2",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "use memory and go",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        memory.push(last_memory[i])\n    }\n    \n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    \n    msg={}\n    msg.topic=\"true\"\n    msg.payload=true\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 400,
        "wires": [
            [
                "1a9917c3.7906c8"
            ]
        ]
    },
    {
        "id": "be8626d9.58f148",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 1010,
        "y": 1820,
        "wires": [
            [
                "5da1b815.7073c8"
            ]
        ]
    },
    {
        "id": "e940bfd1.7fe4f",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée stop_player",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'stop_player';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\nglobal.set(\"player_status\", \"stop\")\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1470,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "5da1b815.7073c8",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "3",
        "extend": false,
        "units": "s",
        "reset": "reset",
        "name": "",
        "x": 1200,
        "y": 1820,
        "wires": [
            [
                "e940bfd1.7fe4f"
            ]
        ]
    },
    {
        "id": "f824e062.dd1ad",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 1010,
        "y": 1780,
        "wires": [
            [
                "b7c76733.636c78"
            ]
        ]
    },
    {
        "id": "d66e09b5.05ff38",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée play_next",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'play_next';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\n\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1470,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "b7c76733.636c78",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "3",
        "extend": false,
        "units": "s",
        "reset": "reset",
        "name": "",
        "x": 1200,
        "y": 1780,
        "wires": [
            [
                "d66e09b5.05ff38"
            ]
        ]
    },
    {
        "id": "5c857144.30eb4",
        "type": "fs-ops-dir",
        "z": "e51f5302.12682",
        "name": "search phase_chil",
        "path": "./../sounds/phase_chil/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 1250,
        "y": 1360,
        "wires": [
            [
                "4c0ef01.ea3dc1"
            ]
        ]
    },
    {
        "id": "e27d09ab.ce9fa8",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "lancement",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 600,
        "y": 1320,
        "wires": [
            [
                "8b9eae43.d2eec"
            ]
        ]
    },
    {
        "id": "66cadbb0.ff2d54",
        "type": "loop",
        "z": "e51f5302.12682",
        "name": "loop musique",
        "kind": "enum",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "payload",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-val",
        "finalPayload": "final-orig",
        "x": 1610,
        "y": 1360,
        "wires": [
            [],
            [
                "4fe6ca6d.c07924"
            ]
        ]
    },
    {
        "id": "4c0ef01.ea3dc1",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "shuffle",
        "func": "let file_list=msg.files;\n\nfunction shuffle(array) {\nlet currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex !== 0) {\n\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\n// Used like so\nvar arr = [2, 11, 37, 42];\nshuffle(file_list);\n//console.log(arr);\n\n\nmsg.payload=[];\n\nfor (i=0; i<file_list.length;i++)\n{\n     msg.payload.push(file_list[i]);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1390,
        "y": 1360,
        "wires": [
            [
                "66cadbb0.ff2d54"
            ]
        ]
    },
    {
        "id": "7dae363f.cab8d8",
        "type": "exec",
        "z": "e51f5302.12682",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1930,
        "y": 1440,
        "wires": [
            [],
            [],
            [
                "5f970e66.7ac69"
            ]
        ]
    },
    {
        "id": "4fe6ca6d.c07924",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "Ambiance_sfx",
        "func": "msg.payload=global.get('swan_path')+\"\\\\sounds\\\\phase_chil\\\\\"+msg.payload\nmsg.filename=msg.payload\n\n\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para2`)+\" \\\"\"+msg.payload+\" \\\"\";\nconsole.log( msg.payload)\n\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1760,
        "y": 1360,
        "wires": [
            [
                "7dae363f.cab8d8"
            ]
        ]
    },
    {
        "id": "a4b8792e.3c8018",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "Stop",
        "topic": "",
        "payload": "kill",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 1420,
        "wires": [
            [
                "87878639.16dd68",
                "b0366303.9a873",
                "3ee5f86e.34aa48"
            ]
        ]
    },
    {
        "id": "14134bff.870724",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "envoie le message de kill",
        "func": "\nmsg.payload='true'\nmsg.kill=\"vlc.exe\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1650,
        "y": 1520,
        "wires": [
            [
                "7dae363f.cab8d8"
            ]
        ]
    },
    {
        "id": "87878639.16dd68",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "envoie le message de break",
        "func": "\nmsg.payload=\"break\"\nmsg.payload.command=\"break\"\nmsg.command=\"break\"\n\nglobal.set(\"player_status\", \"playing\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1380,
        "y": 1420,
        "wires": [
            [
                "66cadbb0.ff2d54"
            ]
        ]
    },
    {
        "id": "3ee5f86e.34aa48",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 1320,
        "y": 1500,
        "wires": [
            [
                "14134bff.870724"
            ]
        ]
    },
    {
        "id": "f76dd6d.1a88228",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "suivant",
        "topic": "",
        "payload": "kill",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 1520,
        "wires": [
            [
                "14134bff.870724"
            ]
        ]
    },
    {
        "id": "b0366303.9a873",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "stop player",
        "func": "global.set(\"player_status\", \"stop\")\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1460,
        "wires": [
            [
                "88c3f762.345b68"
            ]
        ]
    },
    {
        "id": "baa1f40c.0789d8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "thématique chil",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"go_them_chil\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 600,
        "y": 1360,
        "wires": [
            [
                "ad6994a2.f39758"
            ],
            []
        ]
    },
    {
        "id": "51a33cb7.17ba74",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "musique suivante",
        "func": "let accept={}\nlet reject={}\nlet search=[]\nsearch.push(\"play_next\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        accept.payload=\"kill\";\n        return [accept,msg]\n    }\n    \n}",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 1560,
        "wires": [
            [
                "a8b8ab8f.e95b18",
                "14134bff.870724"
            ],
            []
        ]
    },
    {
        "id": "ad6994a2.f39758",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=\"\"\n    msg.payload=true\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 1360,
        "wires": [
            [
                "8b9eae43.d2eec"
            ]
        ]
    },
    {
        "id": "a8b8ab8f.e95b18",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1610,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "77b95ae5.5914b4",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "lecture de musique phase_chil",
        "info": "\n\n",
        "x": 640,
        "y": 1280,
        "wires": []
    },
    {
        "id": "c0d0a45b.c9b278",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 130,
        "y": 1900,
        "wires": [
            [
                "fdfa3a7e.f21218",
                "bdcfa4fa.48f3a8"
            ]
        ]
    },
    {
        "id": "252f950.b648f6c",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée go_them_chil",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'go_them_chil';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\nglobal.set(\"player_status\", \"playing\")\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "fdfa3a7e.f21218",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "500",
        "extend": false,
        "units": "ms",
        "reset": "reset",
        "name": "",
        "x": 340,
        "y": 1900,
        "wires": [
            [
                "252f950.b648f6c"
            ]
        ]
    },
    {
        "id": "88c3f762.345b68",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1610,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "3a2dbe77.e3f212",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "stop la musique",
        "func": "let accept={}\nlet reject={}\nlet search=[]\nsearch.push(\"stop_player\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        accept.payload=\"kill\";\n        return [accept,msg]\n    }\n    \n}",
        "outputs": "2",
        "noerr": 0,
        "x": 600,
        "y": 1460,
        "wires": [
            [
                "87878639.16dd68",
                "b0366303.9a873",
                "3ee5f86e.34aa48"
            ],
            []
        ]
    },
    {
        "id": "aab3feaf.9ff9e",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "entré de ligne",
        "info": "\n\n",
        "x": 890,
        "y": 320,
        "wires": []
    },
    {
        "id": "b81393d4.4778",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "bouchon",
        "info": "\n\n",
        "x": 840,
        "y": 1280,
        "wires": []
    },
    {
        "id": "3a174df8.3204a2",
        "type": "fs-ops-dir",
        "z": "e51f5302.12682",
        "name": "search phase_aterrisage",
        "path": "./../sounds/phase_aterrisage/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 1230,
        "y": 720,
        "wires": [
            [
                "94c1616d.45414"
            ]
        ]
    },
    {
        "id": "b5050e82.a27bc",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "lancement",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 600,
        "y": 680,
        "wires": [
            [
                "d7a52f2f.0d796"
            ]
        ]
    },
    {
        "id": "49ec2aa6.5eae64",
        "type": "loop",
        "z": "e51f5302.12682",
        "name": "loop musique",
        "kind": "enum",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "payload",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-val",
        "finalPayload": "final-orig",
        "x": 1610,
        "y": 720,
        "wires": [
            [],
            [
                "32654309.15601c"
            ]
        ]
    },
    {
        "id": "94c1616d.45414",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "shuffle",
        "func": "let file_list=msg.files;\n\nfunction shuffle(array) {\nlet currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex !== 0) {\n\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\nshuffle(file_list);\n\nmsg.payload=[];\n\nfor (i=0; i<file_list.length;i++)\n{\n     msg.payload.push(file_list[i]);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1390,
        "y": 720,
        "wires": [
            [
                "49ec2aa6.5eae64"
            ]
        ]
    },
    {
        "id": "22879c00.32f564",
        "type": "exec",
        "z": "e51f5302.12682",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1930,
        "y": 800,
        "wires": [
            [],
            [],
            [
                "9b50c323.99845"
            ]
        ]
    },
    {
        "id": "32654309.15601c",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "Ambiance_sfx",
        "func": "msg.payload=global.get('swan_path')+\"\\\\sounds\\\\phase_aterrisage\\\\\"+msg.payload\nmsg.filename=msg.payload\n\n\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para2`)+\" \\\"\"+msg.payload+\" \\\"\";\nconsole.log( msg.payload)\n\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1760,
        "y": 720,
        "wires": [
            [
                "22879c00.32f564"
            ]
        ]
    },
    {
        "id": "23bc8667.98f14a",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "Stop",
        "topic": "",
        "payload": "kill",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 760,
        "wires": [
            [
                "fd5d35e1.289858",
                "b71ee30d.b321a",
                "33102a03.237906"
            ]
        ]
    },
    {
        "id": "c2a98ba7.1de2c8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "envoie le message de kill",
        "func": "\nmsg.payload='true'\nmsg.kill=\"vlc.exe\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1650,
        "y": 880,
        "wires": [
            [
                "22879c00.32f564"
            ]
        ]
    },
    {
        "id": "fd5d35e1.289858",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "envoie le message de break",
        "func": "\nmsg.payload=\"break\"\nmsg.payload.command=\"break\"\nmsg.command=\"break\"\n\nglobal.set(\"player_status\", \"playing\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 760,
        "wires": [
            [
                "49ec2aa6.5eae64"
            ]
        ]
    },
    {
        "id": "33102a03.237906",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 1320,
        "y": 840,
        "wires": [
            [
                "c2a98ba7.1de2c8"
            ]
        ]
    },
    {
        "id": "2bbf19a.ea56ae6",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "suivant",
        "topic": "",
        "payload": "kill",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 860,
        "wires": [
            [
                "c2a98ba7.1de2c8"
            ]
        ]
    },
    {
        "id": "b71ee30d.b321a",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "stop player",
        "func": "global.set(\"player_status\", \"stop\")",
        "outputs": 1,
        "noerr": 0,
        "x": 1310,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "45a627e0.c138e8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "thématique aterrisage",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"go_them_landing\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        return accept\n    }\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 620,
        "y": 720,
        "wires": [
            [
                "9565639b.69374"
            ]
        ]
    },
    {
        "id": "b3d39e83.2272a",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "musique suivante",
        "func": "let accept={}\nlet reject={}\nlet search=[]\nsearch.push(\"play_next\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        accept.payload=\"kill\";\n        return [accept,msg]\n    }\n    \n}",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 900,
        "wires": [
            [
                "c2a98ba7.1de2c8"
            ],
            [
                "c2288c7b.7f272"
            ]
        ]
    },
    {
        "id": "e825603c.b91f3",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "stop la musique",
        "func": "let accept={}\nlet reject={}\nlet search=[]\nsearch.push(\"stop_player\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        accept.payload=\"kill\";\n        return [accept,msg]\n    }\n    \n}",
        "outputs": "2",
        "noerr": 0,
        "x": 600,
        "y": 800,
        "wires": [
            [
                "fd5d35e1.289858",
                "b71ee30d.b321a",
                "33102a03.237906"
            ],
            [
                "80555b6d.800c78"
            ]
        ]
    },
    {
        "id": "b03f61d7.e325f",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "lecture de musique phase atterrissage",
        "info": "\n\n",
        "x": 670,
        "y": 640,
        "wires": []
    },
    {
        "id": "9565639b.69374",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "use memory and go",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        memory.push(last_memory[i])\n    }\n    \n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    \n    msg={}\n    msg.topic=\"true\"\n    msg.payload=true\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 720,
        "wires": [
            [
                "d7a52f2f.0d796"
            ]
        ]
    },
    {
        "id": "a5db7101.5ce81",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "intermédiaire de ligne",
        "info": "\n\n",
        "x": 940,
        "y": 640,
        "wires": []
    },
    {
        "id": "988ae366.1c07a",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 130,
        "y": 1820,
        "wires": [
            [
                "7097e739.e483c8",
                "ddf03755.bb28e8"
            ]
        ]
    },
    {
        "id": "74b7ff84.164c",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée go_them_landing",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'go_them_landing';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\nglobal.set(\"player_status\", \"playing\")\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "7097e739.e483c8",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "500",
        "extend": false,
        "units": "ms",
        "reset": "reset",
        "name": "",
        "x": 340,
        "y": 1820,
        "wires": [
            [
                "74b7ff84.164c"
            ]
        ]
    },
    {
        "id": "a22421e.2c189e",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 130,
        "y": 1660,
        "wires": [
            [
                "dde65082.aea91",
                "6a00120e.c6a3ac"
            ]
        ]
    },
    {
        "id": "96821b5b.fea8b8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée go_them_phase_combat",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'go_them_phase_combat';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\nglobal.set(\"player_status\", \"playing\")\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "dde65082.aea91",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "500",
        "extend": false,
        "units": "ms",
        "reset": "reset",
        "name": "",
        "x": 340,
        "y": 1660,
        "wires": [
            [
                "96821b5b.fea8b8"
            ]
        ]
    },
    {
        "id": "aa8765e9.4e7358",
        "type": "fs-ops-dir",
        "z": "e51f5302.12682",
        "name": "search phase_combat",
        "path": "./../sounds/phase_combat/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 1220,
        "y": 1040,
        "wires": [
            [
                "de2c06df.73aa28"
            ]
        ]
    },
    {
        "id": "6e0091c.0ab577",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "lancement",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 600,
        "y": 1000,
        "wires": [
            [
                "9411f765.e1e8f8"
            ]
        ]
    },
    {
        "id": "b764bc36.4fa92",
        "type": "loop",
        "z": "e51f5302.12682",
        "name": "loop musique",
        "kind": "enum",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "payload",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-val",
        "finalPayload": "final-orig",
        "x": 1610,
        "y": 1040,
        "wires": [
            [],
            [
                "83ebcb85.7034e8"
            ]
        ]
    },
    {
        "id": "de2c06df.73aa28",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "shuffle",
        "func": "let file_list=msg.files;\n\nfunction shuffle(array) {\nlet currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex !== 0) {\n\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\nshuffle(file_list);\n\nmsg.payload=[];\n\nfor (i=0; i<file_list.length;i++)\n{\n     msg.payload.push(file_list[i]);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1390,
        "y": 1040,
        "wires": [
            [
                "b764bc36.4fa92"
            ]
        ]
    },
    {
        "id": "9fbdfdee.4b292",
        "type": "exec",
        "z": "e51f5302.12682",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1930,
        "y": 1120,
        "wires": [
            [],
            [],
            [
                "f06fecc0.51bb1"
            ]
        ]
    },
    {
        "id": "83ebcb85.7034e8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "Ambiance_sfx",
        "func": "msg.payload=global.get('swan_path')+\"\\\\sounds\\\\phase_combat\\\\\"+msg.payload\nmsg.filename=msg.payload\n\n\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para2`)+\" \\\"\"+msg.payload+\" \\\"\";\nconsole.log( msg.payload)\n\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1760,
        "y": 1040,
        "wires": [
            [
                "9fbdfdee.4b292"
            ]
        ]
    },
    {
        "id": "2d7b3a63.2c88c6",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "Stop",
        "topic": "",
        "payload": "kill",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 1080,
        "wires": [
            [
                "1580857f.c1aafb",
                "b75a8fd.233a27",
                "db72654e.1fd188"
            ]
        ]
    },
    {
        "id": "c2e43ad9.2654b8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "envoie le message de kill",
        "func": "\nmsg.payload='true'\nmsg.kill=\"vlc.exe\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1650,
        "y": 1200,
        "wires": [
            [
                "9fbdfdee.4b292"
            ]
        ]
    },
    {
        "id": "1580857f.c1aafb",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "envoie le message de break",
        "func": "\nmsg.payload=\"break\"\nmsg.payload.command=\"break\"\nmsg.command=\"break\"\n\nglobal.set(\"player_status\", \"playing\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 1080,
        "wires": [
            [
                "b764bc36.4fa92"
            ]
        ]
    },
    {
        "id": "db72654e.1fd188",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 1320,
        "y": 1160,
        "wires": [
            [
                "c2e43ad9.2654b8"
            ]
        ]
    },
    {
        "id": "ae10a0c2.163ed",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "suivant",
        "topic": "",
        "payload": "kill",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 1180,
        "wires": [
            [
                "c2e43ad9.2654b8"
            ]
        ]
    },
    {
        "id": "b75a8fd.233a27",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "stop player",
        "func": "global.set(\"player_status\", \"stop\")",
        "outputs": 1,
        "noerr": 0,
        "x": 1310,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "f4fdfca3.3c4e5",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "thématique combat",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"go_them_phase_combat\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        return accept\n    }\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 610,
        "y": 1040,
        "wires": [
            [
                "a9c86aab.80c6a8"
            ]
        ]
    },
    {
        "id": "c2288c7b.7f272",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "musique suivante",
        "func": "let accept={}\nlet reject={}\nlet search=[]\nsearch.push(\"play_next\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        accept.payload=\"kill\";\n        return [accept,msg]\n    }\n    \n}",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 1220,
        "wires": [
            [
                "c2e43ad9.2654b8"
            ],
            [
                "51a33cb7.17ba74"
            ]
        ]
    },
    {
        "id": "80555b6d.800c78",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "stop la musique",
        "func": "let accept={}\nlet reject={}\nlet search=[]\nsearch.push(\"stop_player\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        accept.payload=\"kill\";\n        return [accept,msg]\n    }\n    \n}",
        "outputs": "2",
        "noerr": 0,
        "x": 600,
        "y": 1120,
        "wires": [
            [
                "1580857f.c1aafb",
                "b75a8fd.233a27",
                "db72654e.1fd188"
            ],
            [
                "3a2dbe77.e3f212"
            ]
        ]
    },
    {
        "id": "7c08087d.6ff4d8",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "lecture de musique phase combat",
        "info": "\n\n",
        "x": 650,
        "y": 960,
        "wires": []
    },
    {
        "id": "a9c86aab.80c6a8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "use memory and go",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        memory.push(last_memory[i])\n    }\n    \n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    \n    msg={}\n    msg.topic=\"true\"\n    msg.payload=true\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 1040,
        "wires": [
            [
                "9411f765.e1e8f8"
            ]
        ]
    },
    {
        "id": "38cd7bda.e21a04",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "intermédiaire de ligne",
        "info": "\n\n",
        "x": 940,
        "y": 960,
        "wires": []
    },
    {
        "id": "6a00120e.c6a3ac",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée stop_player",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'stop_player';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\n\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "1d3c9251.8cc11e",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée stop_player",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'stop_player';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\n\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "ddf03755.bb28e8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée stop_player",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'stop_player';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\n\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "bdcfa4fa.48f3a8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée stop_player",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'stop_player';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\n\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "b191f970.a9b2f8",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 60,
        "wires": [
            [
                "2fe15f35.b4a69"
            ]
        ]
    },
    {
        "id": "2fe15f35.b4a69",
        "type": "file in",
        "z": "e51f5302.12682",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 310,
        "y": 60,
        "wires": [
            [
                "f3a6bedb.b9089"
            ]
        ]
    },
    {
        "id": "f3a6bedb.b9089",
        "type": "json",
        "z": "e51f5302.12682",
        "name": "from json",
        "pretty": false,
        "x": 440,
        "y": 60,
        "wires": [
            [
                "efbf7068.023fb"
            ]
        ]
    },
    {
        "id": "efbf7068.023fb",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"13_musique\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 60,
        "wires": [
            [
                "2812a468.eeb71c"
            ]
        ]
    },
    {
        "id": "2812a468.eeb71c",
        "type": "json",
        "z": "e51f5302.12682",
        "name": "to json",
        "pretty": true,
        "x": 710,
        "y": 60,
        "wires": [
            [
                "b5d7cce5.3f1e9"
            ]
        ]
    },
    {
        "id": "b5d7cce5.3f1e9",
        "type": "file",
        "z": "e51f5302.12682",
        "name": "13_musique",
        "filename": "./../viseo-bot-project/data/flow/master/13_musique.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 850,
        "y": 60,
        "wires": []
    },
    {
        "id": "f8d1d0ca.311b4",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "sauvegarde du flow pour exportation ou modeur",
        "info": "",
        "x": 220,
        "y": 20,
        "wires": []
    },
    {
        "id": "5f970e66.7ac69",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "block if stop",
        "func": "if(global.get(\"player_status\")!==\"stop\")\n{\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1610,
        "y": 1400,
        "wires": [
            [
                "66cadbb0.ff2d54"
            ]
        ]
    },
    {
        "id": "f06fecc0.51bb1",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "block if stop",
        "func": "if(global.get(\"player_status\")!==\"stop\")\n{\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1610,
        "y": 1080,
        "wires": [
            [
                "b764bc36.4fa92"
            ]
        ]
    },
    {
        "id": "9b50c323.99845",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "block if stop",
        "func": "if(global.get(\"player_status\")!==\"stop\")\n{\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1610,
        "y": 760,
        "wires": [
            [
                "49ec2aa6.5eae64"
            ]
        ]
    },
    {
        "id": "e49d4f0a.ed5c3",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "block if stop",
        "func": "if(global.get(\"player_status\")!==\"stop\")\n{\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1610,
        "y": 440,
        "wires": [
            [
                "c068ac19.f0709"
            ]
        ]
    },
    {
        "id": "5ca3fb59.1c4124",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "musical_mod",
        "func": "if(global.get(\"musical_mod\")===true){\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "1a9917c3.7906c8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "musical_mod",
        "func": "if(global.get(\"musical_mod\")===true){\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 400,
        "wires": [
            [
                "b5ade591.6b9c58"
            ]
        ]
    },
    {
        "id": "d7a52f2f.0d796",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "musical_mod",
        "func": "if(global.get(\"musical_mod\")===true){\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 720,
        "wires": [
            [
                "3a174df8.3204a2"
            ]
        ]
    },
    {
        "id": "9411f765.e1e8f8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "musical_mod",
        "func": "if(global.get(\"musical_mod\")===true){\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 1040,
        "wires": [
            [
                "aa8765e9.4e7358"
            ]
        ]
    },
    {
        "id": "8b9eae43.d2eec",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "musical_mod",
        "func": "if(global.get(\"musical_mod\")===true){\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 1360,
        "wires": [
            [
                "5c857144.30eb4"
            ]
        ]
    },
    {
        "id": "55b476cf.d1e5f8",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "Switch musical mod",
        "info": "\n\n",
        "x": 150,
        "y": 2000,
        "wires": []
    },
    {
        "id": "4c78804c.57a98",
        "type": "start-up-trigger",
        "z": "e51f5302.12682",
        "x": 140,
        "y": 2040,
        "wires": [
            [
                "704aa3e.899be5c"
            ]
        ]
    },
    {
        "id": "704aa3e.899be5c",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 360,
        "y": 2040,
        "wires": [
            [
                "94f7e9bf.82d4f8"
            ]
        ]
    },
    {
        "id": "94f7e9bf.82d4f8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 2040,
        "wires": [
            [
                "fda056dc.a918a8"
            ]
        ]
    },
    {
        "id": "fda056dc.a918a8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 2040,
        "wires": [
            [
                "57b78999.fa7208",
                "a12609dd.707f78",
                "3d99134b.03b41c",
                "5a5f7250.86405c"
            ]
        ]
    },
    {
        "id": "57b78999.fa7208",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "music_on",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"music_on\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        return accept\n    }\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 1020,
        "y": 1980,
        "wires": [
            [
                "4da0fafa.063ad4"
            ]
        ]
    },
    {
        "id": "4da0fafa.063ad4",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "use memory and go",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        memory.push(last_memory[i])\n    }\n    \n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    \n    msg={}\n    msg.topic=\"true\"\n    msg.payload=true\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 1980,
        "wires": [
            [
                "20e0631.30e289c"
            ]
        ]
    },
    {
        "id": "20e0631.30e289c",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "musical_mod switch_on",
        "func": "global.set(\"musical_mod\", true)\nmsg.payload=\"musical_mod : \"+global.get(\"musical_mod\")\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1430,
        "y": 1980,
        "wires": [
            [
                "6257056a.1aa8fc"
            ]
        ]
    },
    {
        "id": "a12609dd.707f78",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "music_off",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"music_off\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        return accept\n    }\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 1020,
        "y": 2100,
        "wires": [
            [
                "7b5921b1.67a6a"
            ]
        ]
    },
    {
        "id": "7b5921b1.67a6a",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "use memory and go",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        memory.push(last_memory[i])\n    }\n    \n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    \n    msg={}\n    msg.topic=\"true\"\n    msg.payload=true\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 2100,
        "wires": [
            [
                "21b95d34.b2eb52",
                "cdc287e0.7adea8"
            ]
        ]
    },
    {
        "id": "21b95d34.b2eb52",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "musical_mod switch_off",
        "func": "global.set(\"musical_mod\", false)\nmsg.payload=\"musical_mod : \"+global.get(\"musical_mod\")\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1430,
        "y": 2100,
        "wires": [
            [
                "44aa858b.f784cc"
            ]
        ]
    },
    {
        "id": "6257056a.1aa8fc",
        "type": "debug",
        "z": "e51f5302.12682",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1630,
        "y": 1980,
        "wires": []
    },
    {
        "id": "44aa858b.f784cc",
        "type": "debug",
        "z": "e51f5302.12682",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1630,
        "y": 2100,
        "wires": []
    },
    {
        "id": "3d99134b.03b41c",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 2020,
        "wires": [
            [
                "c070b297.f140a"
            ]
        ]
    },
    {
        "id": "5a5f7250.86405c",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 2060,
        "wires": [
            [
                "c070b297.f140a"
            ]
        ]
    },
    {
        "id": "c070b297.f140a",
        "type": "exec",
        "z": "e51f5302.12682",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1630,
        "y": 2040,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "cdc287e0.7adea8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée stop_player",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'stop_player';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\n\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1450,
        "y": 2140,
        "wires": [
            []
        ]
    }
]