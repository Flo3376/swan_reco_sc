[
    {
        "id": "3bfd628a.fc68ae",
        "type": "tab",
        "label": "11_minage_scan",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ad8ab197.d70b6",
        "type": "start-up-trigger",
        "z": "3bfd628a.fc68ae",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "ac499ff8.5181c"
            ]
        ]
    },
    {
        "id": "ac499ff8.5181c",
        "type": "trigger",
        "z": "3bfd628a.fc68ae",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 340,
        "y": 140,
        "wires": [
            [
                "aa331958.363cd8",
                "a98f3645.a92f78",
                "cbc87cd9.03e7f",
                "8abb8f11.fb6eb",
                "aa0ddf33.67641",
                "8c657673.a39bb8"
            ]
        ]
    },
    {
        "id": "aa331958.363cd8",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 280,
        "wires": [
            [
                "9513d927.3da548"
            ]
        ]
    },
    {
        "id": "9513d927.3da548",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 280,
        "wires": [
            [
                "a47a9877.c32df8",
                "339a5dbe.f31ee2"
            ]
        ]
    },
    {
        "id": "a98f3645.a92f78",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 420,
        "wires": [
            [
                "15737c9c.45f5c3"
            ]
        ]
    },
    {
        "id": "15737c9c.45f5c3",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 420,
        "wires": [
            [
                "e351719e.1a16d"
            ]
        ]
    },
    {
        "id": "b0c33e3a.6b999",
        "type": "comment",
        "z": "3bfd628a.fc68ae",
        "name": "Minage",
        "info": "\n\n",
        "x": 90,
        "y": 240,
        "wires": []
    },
    {
        "id": "a47a9877.c32df8",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sort le bras de minage",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"open_mining_tools\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            //console.log(\"ask : \"+ask)\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 600,
        "y": 280,
        "wires": [
            [
                "c3531346.b591c"
            ],
            []
        ]
    },
    {
        "id": "e351719e.1a16d",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "change d'outils",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"change_mining_tools\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 580,
        "y": 420,
        "wires": [
            [
                "cc1fad1b.e0373"
            ],
            []
        ]
    },
    {
        "id": "b09dc5b4.82f708",
        "type": "comment",
        "z": "3bfd628a.fc68ae",
        "name": "Alarme quantainum",
        "info": "\n\n",
        "x": 130,
        "y": 500,
        "wires": []
    },
    {
        "id": "339a5dbe.f31ee2",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "rentre le bras de minage",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\n\nsearch.push(\"close_mining_tools\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 320,
        "wires": [
            [
                "5f5a8fb9.feffe"
            ],
            []
        ]
    },
    {
        "id": "254c4ca4.a4b3a4",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "ng_sfx mining_out",
        "func": "let sound_effect=[];\nlet track_id='mining_out';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1250,
        "y": 240,
        "wires": [
            [
                "33b75159.e942ce"
            ]
        ]
    },
    {
        "id": "ba752f59.8bf51",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "ng_sfx mining_in",
        "func": "let sound_effect=[];\nlet track_id='mining_in';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1250,
        "y": 360,
        "wires": [
            [
                "33b75159.e942ce"
            ]
        ]
    },
    {
        "id": "33b75159.e942ce",
        "type": "exec",
        "z": "3bfd628a.fc68ae",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1610,
        "y": 340,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "4477239c.25bbbc",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "ng_sfx mining_switch",
        "func": "let sound_effect=[];\nlet track_id='mining_switch';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 400,
        "wires": [
            [
                "33b75159.e942ce"
            ]
        ]
    },
    {
        "id": "8d8e05f5.0f0b78",
        "type": "inject",
        "z": "3bfd628a.fc68ae",
        "name": "",
        "topic": "",
        "payload": "test",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 810,
        "y": 540,
        "wires": [
            [
                "2255b532.ec849a",
                "aa35f84b.1bc4c8",
                "d0ba7eb1.e4352",
                "dd965e81.8d464"
            ]
        ]
    },
    {
        "id": "10ad7bb3.97c484",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "activation chrono quantique",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"chrono_on\")\n\t\t\t\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.payload.includes(ask))\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 620,
        "y": 580,
        "wires": [
            [
                "6d76856f.bc85cc"
            ],
            []
        ]
    },
    {
        "id": "dd965e81.8d464",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sfx quanta 15m",
        "func": "let sound=`\\\"`+global.get(\"path_sound\")+`mod\\\\chrono_quantainium\\\\quanta15m\\\"`;\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 540,
        "wires": [
            [
                "6779c1c0.498d9"
            ]
        ]
    },
    {
        "id": "6148b959.86acc8",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sfx quanta 10m",
        "func": "let sound=`\\\"`+global.get(\"path_sound\")+`mod\\\\chrono_quantainium\\\\quanta10m\\\"`;\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 580,
        "wires": [
            [
                "6779c1c0.498d9"
            ]
        ]
    },
    {
        "id": "67ed11b6.ff632",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sfx quanta 5m",
        "func": "let sound=`\\\"`+global.get(\"path_sound\")+`mod\\\\chrono_quantainium\\\\quanta5m\\\"`;\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 620,
        "wires": [
            [
                "6779c1c0.498d9"
            ]
        ]
    },
    {
        "id": "16507222.d5628e",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sfx quanta 1m",
        "func": "let sound=`\\\"`+global.get(\"path_sound\")+`mod\\\\chrono_quantainium\\\\quanta1m\\\"`;\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 660,
        "wires": [
            [
                "6779c1c0.498d9"
            ]
        ]
    },
    {
        "id": "ad02f7b9.d256e8",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sfx quanta 10s",
        "func": "let sound=`\\\"`+global.get(\"path_sound\")+`mod\\\\chrono_quantainium\\\\quanta10s\\\"`;\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 740,
        "wires": [
            [
                "6779c1c0.498d9"
            ]
        ]
    },
    {
        "id": "2255b532.ec849a",
        "type": "trigger",
        "z": "3bfd628a.fc68ae",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "5",
        "extend": false,
        "units": "min",
        "reset": "reset",
        "name": "",
        "x": 1210,
        "y": 580,
        "wires": [
            [
                "6148b959.86acc8"
            ]
        ]
    },
    {
        "id": "aa35f84b.1bc4c8",
        "type": "trigger",
        "z": "3bfd628a.fc68ae",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "10",
        "extend": false,
        "units": "min",
        "reset": "reset",
        "name": "",
        "x": 1210,
        "y": 622,
        "wires": [
            [
                "67ed11b6.ff632"
            ]
        ]
    },
    {
        "id": "d0ba7eb1.e4352",
        "type": "trigger",
        "z": "3bfd628a.fc68ae",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "14",
        "extend": false,
        "units": "min",
        "reset": "reset",
        "name": "",
        "x": 1210,
        "y": 660,
        "wires": [
            [
                "16507222.d5628e",
                "6d0b80d3.e8cfb",
                "7281a970.d81848"
            ]
        ]
    },
    {
        "id": "1d36dcd0.5597a3",
        "type": "inject",
        "z": "3bfd628a.fc68ae",
        "name": "",
        "topic": "",
        "payload": "reset",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 810,
        "y": 660,
        "wires": [
            [
                "2255b532.ec849a",
                "aa35f84b.1bc4c8",
                "d0ba7eb1.e4352",
                "6d0b80d3.e8cfb",
                "cd371825.0a0838"
            ]
        ]
    },
    {
        "id": "d5aa9e8e.d68cb",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "coupure chrono quantique",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\n\nsearch.push(\"chrono_off\")\n\t\t\t\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.payload.includes(ask))\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 620,
        "wires": [
            [
                "142d051c.8cfaab"
            ],
            []
        ]
    },
    {
        "id": "6d0b80d3.e8cfb",
        "type": "trigger",
        "z": "3bfd628a.fc68ae",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "45",
        "extend": false,
        "units": "s",
        "reset": "reset",
        "name": "",
        "x": 1310,
        "y": 740,
        "wires": [
            [
                "ad02f7b9.d256e8"
            ]
        ]
    },
    {
        "id": "6779c1c0.498d9",
        "type": "exec",
        "z": "3bfd628a.fc68ae",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1710,
        "y": 640,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "addd414f.b02cc",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sfx quanta 30s",
        "func": "let sound=`\\\"`+global.get(\"path_sound\")+`mod\\\\chrono_quantainium\\\\quanta30s\\\"`;\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 700,
        "wires": [
            [
                "6779c1c0.498d9"
            ]
        ]
    },
    {
        "id": "7281a970.d81848",
        "type": "trigger",
        "z": "3bfd628a.fc68ae",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "30",
        "extend": false,
        "units": "s",
        "reset": "reset",
        "name": "",
        "x": 1310,
        "y": 700,
        "wires": [
            [
                "addd414f.b02cc"
            ]
        ]
    },
    {
        "id": "cd371825.0a0838",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sound_effect bip",
        "func": "let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 780,
        "wires": [
            [
                "6779c1c0.498d9"
            ]
        ]
    },
    {
        "id": "c3531346.b591c",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 280,
        "wires": [
            [
                "254c4ca4.a4b3a4",
                "13889667.118c6a"
            ]
        ]
    },
    {
        "id": "5f5a8fb9.feffe",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 320,
        "wires": [
            [
                "ba752f59.8bf51",
                "4cb01bb1.d66d74"
            ]
        ]
    },
    {
        "id": "cc1fad1b.e0373",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 420,
        "wires": [
            [
                "107a2d66.88a7b3",
                "4477239c.25bbbc"
            ]
        ]
    },
    {
        "id": "142d051c.8cfaab",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 620,
        "wires": [
            [
                "dd965e81.8d464",
                "2255b532.ec849a",
                "aa35f84b.1bc4c8",
                "d0ba7eb1.e4352",
                "7281a970.d81848",
                "6d0b80d3.e8cfb"
            ]
        ]
    },
    {
        "id": "6d76856f.bc85cc",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 580,
        "wires": [
            [
                "2255b532.ec849a",
                "aa35f84b.1bc4c8",
                "d0ba7eb1.e4352",
                "dd965e81.8d464"
            ]
        ]
    },
    {
        "id": "cbc87cd9.03e7f",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 580,
        "wires": [
            [
                "5c12857b.e1bcdc"
            ]
        ]
    },
    {
        "id": "5c12857b.e1bcdc",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 580,
        "wires": [
            [
                "10ad7bb3.97c484",
                "d5aa9e8e.d68cb"
            ]
        ]
    },
    {
        "id": "f73b0138.9efe",
        "type": "start-up-trigger",
        "z": "3bfd628a.fc68ae",
        "x": 160,
        "y": 1020,
        "wires": [
            [
                "edeb780.7654188"
            ]
        ]
    },
    {
        "id": "edeb780.7654188",
        "type": "trigger",
        "z": "3bfd628a.fc68ae",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-3",
        "extend": false,
        "units": "s",
        "reset": "",
        "name": "",
        "x": 520,
        "y": 1020,
        "wires": [
            [
                "ea0e3427.edeee8"
            ]
        ]
    },
    {
        "id": "ea0e3427.edeee8",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "gate scan",
        "func": "if(global.get('spy_scan') === true)\n{\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 1020,
        "wires": [
            [
                "7739c43e.e3ee7c"
            ]
        ]
    },
    {
        "id": "8a8612dd.23419",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "coupure balayage",
        "func": "global.set('spy_scan',false);",
        "outputs": 1,
        "noerr": 0,
        "x": 1250,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "1a7daef6.d0f321",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "activation balayage",
        "func": "global.set('spy_scan',true);",
        "outputs": 1,
        "noerr": 0,
        "x": 1250,
        "y": 840,
        "wires": [
            [
                "4adfc12a.f25ec"
            ]
        ]
    },
    {
        "id": "cdd5ceba.8ea",
        "type": "comment",
        "z": "3bfd628a.fc68ae",
        "name": "scan",
        "info": "\n\n",
        "x": 90,
        "y": 780,
        "wires": []
    },
    {
        "id": "b0b85ace.6fea68",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "lancement balayage zone",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"auto_ping_on\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 840,
        "wires": [
            [
                "8ce41606.eee3e8"
            ],
            []
        ]
    },
    {
        "id": "b176f198.853ff",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "Coupure balayage zone",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"auto_ping_off\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            //console.log(\"ask : \"+ask)\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 880,
        "wires": [
            [
                "8d6260b9.6b777"
            ],
            []
        ]
    },
    {
        "id": "707f2804.813448",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "ng_sfx active_scan_off",
        "func": "let sound_effect=[];\nlet track_id='active_scan_off';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 920,
        "wires": [
            [
                "4adfc12a.f25ec"
            ]
        ]
    },
    {
        "id": "afbe19a7.17fe88",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "ng_sfx active_scan_on",
        "func": "let sound_effect=[];\nlet track_id='active_scan_on';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 880,
        "wires": [
            [
                "4adfc12a.f25ec"
            ]
        ]
    },
    {
        "id": "4adfc12a.f25ec",
        "type": "exec",
        "z": "3bfd628a.fc68ae",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1710,
        "y": 880,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bab358bf.eb31c8",
        "type": "exec",
        "z": "3bfd628a.fc68ae",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1710,
        "y": 1020,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "8ce41606.eee3e8",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 840,
        "wires": [
            [
                "1a7daef6.d0f321",
                "afbe19a7.17fe88"
            ]
        ]
    },
    {
        "id": "8d6260b9.6b777",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 880,
        "wires": [
            [
                "707f2804.813448",
                "8a8612dd.23419"
            ]
        ]
    },
    {
        "id": "8abb8f11.fb6eb",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 840,
        "wires": [
            [
                "b93ef133.15413"
            ]
        ]
    },
    {
        "id": "b93ef133.15413",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 840,
        "wires": [
            [
                "b0b85ace.6fea68"
            ]
        ]
    },
    {
        "id": "aa0ddf33.67641",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 880,
        "wires": [
            [
                "17720809.6aed68"
            ]
        ]
    },
    {
        "id": "17720809.6aed68",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 880,
        "wires": [
            [
                "b176f198.853ff"
            ]
        ]
    },
    {
        "id": "8c657673.a39bb8",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 1120,
        "wires": [
            [
                "f635c15f.6a68b"
            ]
        ]
    },
    {
        "id": "f635c15f.6a68b",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 1120,
        "wires": [
            [
                "efadd113.f4735"
            ]
        ]
    },
    {
        "id": "906a33d4.e509a",
        "type": "comment",
        "z": "3bfd628a.fc68ae",
        "name": "Ejection minage",
        "info": "\n\n",
        "x": 120,
        "y": 1080,
        "wires": []
    },
    {
        "id": "efadd113.f4735",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "éject le minerai",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"jetison\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 580,
        "y": 1120,
        "wires": [
            [
                "2324bd6.3605142"
            ],
            []
        ]
    },
    {
        "id": "e8a06889.0ed718",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 1160,
        "wires": [
            [
                "8be8ac99.be632"
            ]
        ]
    },
    {
        "id": "2324bd6.3605142",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 1120,
        "wires": [
            [
                "e8a06889.0ed718",
                "f7d74e00.c30b7"
            ]
        ]
    },
    {
        "id": "8be8ac99.be632",
        "type": "exec",
        "z": "3bfd628a.fc68ae",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1710,
        "y": 1120,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "13889667.118c6a",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "keybinding_auto open_min_tools",
        "func": "let keybinding=global.get('open_min_tools');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1300,
        "y": 280,
        "wires": [
            [
                "33b75159.e942ce"
            ]
        ]
    },
    {
        "id": "4cb01bb1.d66d74",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "keybinding_auto close_min_tools",
        "func": "let keybinding=global.get('close_min_tools');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1300,
        "y": 320,
        "wires": [
            [
                "33b75159.e942ce"
            ]
        ]
    },
    {
        "id": "107a2d66.88a7b3",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "keybinding_auto v_toggle_mining_mode",
        "func": "let keybinding=global.get('v_toggle_mining_mode');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1320,
        "y": 440,
        "wires": [
            [
                "33b75159.e942ce"
            ]
        ]
    },
    {
        "id": "7739c43e.e3ee7c",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "keybinding_auto v_invoke_ping",
        "func": "let keybinding=global.get('v_invoke_ping');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1290,
        "y": 1020,
        "wires": [
            [
                "bab358bf.eb31c8"
            ]
        ]
    },
    {
        "id": "f7d74e00.c30b7",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "keybinding_auto v_jettison_volatile_cargo",
        "func": "let keybinding=global.get('v_jettison_volatile_cargo');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1320,
        "y": 1120,
        "wires": [
            [
                "8be8ac99.be632"
            ]
        ]
    },
    {
        "id": "98dd2f37.4e8f6",
        "type": "inject",
        "z": "3bfd628a.fc68ae",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 80,
        "wires": [
            [
                "b4a089c5.2f82f8"
            ]
        ]
    },
    {
        "id": "b4a089c5.2f82f8",
        "type": "file in",
        "z": "3bfd628a.fc68ae",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "38f8be29.d124d2"
            ]
        ]
    },
    {
        "id": "38f8be29.d124d2",
        "type": "json",
        "z": "3bfd628a.fc68ae",
        "name": "from json",
        "pretty": false,
        "x": 440,
        "y": 80,
        "wires": [
            [
                "f0c20af9.443458"
            ]
        ]
    },
    {
        "id": "f0c20af9.443458",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"11_minage_scan\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 80,
        "wires": [
            [
                "ccca180a.14c7d8"
            ]
        ]
    },
    {
        "id": "ccca180a.14c7d8",
        "type": "json",
        "z": "3bfd628a.fc68ae",
        "name": "to json",
        "pretty": true,
        "x": 710,
        "y": 80,
        "wires": [
            [
                "c47b4df1.22071"
            ]
        ]
    },
    {
        "id": "c47b4df1.22071",
        "type": "file",
        "z": "3bfd628a.fc68ae",
        "name": "11_minage_scan",
        "filename": "./../viseo-bot-project/data/flow/master/11_minage_scan.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 870,
        "y": 80,
        "wires": []
    },
    {
        "id": "ee06d5cd.8101d8",
        "type": "comment",
        "z": "3bfd628a.fc68ae",
        "name": "sauvegarde du flow pour exportation ou modeur",
        "info": "",
        "x": 220,
        "y": 40,
        "wires": []
    }
]