[
    {
        "id": "dc4e7734.5f3478",
        "type": "tab",
        "label": "00_initialisation",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e23f34c2.ea7468",
        "type": "tab",
        "label": "01_routeur",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e3b59118.5cbf8",
        "type": "tab",
        "label": "02_test",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c3cf5343.7b594",
        "type": "tab",
        "label": "03_combat",
        "disabled": false,
        "info": ""
    },
    {
        "id": "33baa4f7.ce6a9c",
        "type": "tab",
        "label": "04_T_Puissance",
        "disabled": false,
        "info": ""
    },
    {
        "id": "31099d34.a85072",
        "type": "tab",
        "label": "05_Boucliers",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1652babe.60d185",
        "type": "tab",
        "label": "06_Starmap_qt",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ff26b391.7439",
        "type": "tab",
        "label": "07_Communication",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f07cdeb.340a32",
        "type": "tab",
        "label": "08_Train_VTOL _vol_découplé",
        "disabled": false,
        "info": ""
    },
    {
        "id": "67565b43.7eac14",
        "type": "tab",
        "label": "09_Accessoires",
        "disabled": false,
        "info": ""
    },
    {
        "id": "56fdf72f.48c0d8",
        "type": "tab",
        "label": "10_Démarrage_coupure",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3bfd628a.fc68ae",
        "type": "tab",
        "label": "11_minage_scan",
        "disabled": false,
        "info": ""
    },
    {
        "id": "312c81eb.6f5b7e",
        "type": "tab",
        "label": "12_Scénario",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e51f5302.12682",
        "type": "tab",
        "label": "13_musique",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f859bd67.27c9e",
        "type": "win-listen-config",
        "z": "",
        "name": "Swan",
        "process": "",
        "language": "",
        "confidence": "",
        "recognizer": "",
        "hotword": "SWAN"
    },
    {
        "id": "b5ade591.6b9c58",
        "type": "fs-ops-dir",
        "z": "e51f5302.12682",
        "name": "search phase_décollage",
        "path": "./../sounds/phase_décollage/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 1070,
        "y": 400,
        "wires": [
            [
                "77393115.4bd22"
            ]
        ]
    },
    {
        "id": "791d436d.5c00ec",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "lancement",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 600,
        "y": 360,
        "wires": [
            [
                "b5ade591.6b9c58"
            ]
        ]
    },
    {
        "id": "c068ac19.f0709",
        "type": "loop",
        "z": "e51f5302.12682",
        "name": "loop musique",
        "kind": "enum",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "payload",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-val",
        "finalPayload": "final-orig",
        "x": 1450,
        "y": 400,
        "wires": [
            [],
            [
                "27f0ea28.dd52a6"
            ]
        ]
    },
    {
        "id": "77393115.4bd22",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "shuffle",
        "func": "let file_list=msg.files;\n\nfunction shuffle(array) {\nlet currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex !== 0) {\n\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\nshuffle(file_list);\n\nmsg.payload=[];\n\nfor (i=0; i<file_list.length;i++)\n{\n     msg.payload.push(file_list[i]);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 400,
        "wires": [
            [
                "c068ac19.f0709"
            ]
        ]
    },
    {
        "id": "44cb631a.87171c",
        "type": "exec",
        "z": "e51f5302.12682",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1770,
        "y": 480,
        "wires": [
            [],
            [],
            [
                "c068ac19.f0709"
            ]
        ]
    },
    {
        "id": "27f0ea28.dd52a6",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "Ambiance_sfx",
        "func": "msg.payload=global.get('swan_path')+\"\\\\sounds\\\\phase_décollage\\\\\"+msg.payload\nmsg.filename=msg.payload\n\n\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para2`)+\" \\\"\"+msg.payload+\" \\\"\";\nconsole.log( msg.payload)\n\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1600,
        "y": 400,
        "wires": [
            [
                "44cb631a.87171c"
            ]
        ]
    },
    {
        "id": "6bd75c12.6df204",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "Stop",
        "topic": "",
        "payload": "kill",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 440,
        "wires": [
            [
                "e6f5b77d.49a9c8",
                "b4d1bb1a.258a38",
                "2acf2f44.1d287"
            ]
        ]
    },
    {
        "id": "35f4f2f4.70d08e",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "envoie le message de kill",
        "func": "\nmsg.payload='true'\nmsg.kill=\"vlc.exe\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1490,
        "y": 560,
        "wires": [
            [
                "44cb631a.87171c"
            ]
        ]
    },
    {
        "id": "e6f5b77d.49a9c8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "envoie le message de break",
        "func": "\nmsg.payload=\"break\"\nmsg.payload.command=\"break\"\nmsg.command=\"break\"\n\nglobal.set(\"player_status\", \"playing\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 440,
        "wires": [
            [
                "c068ac19.f0709"
            ]
        ]
    },
    {
        "id": "2acf2f44.1d287",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 1160,
        "y": 520,
        "wires": [
            [
                "35f4f2f4.70d08e"
            ]
        ]
    },
    {
        "id": "12f3a5be.7fc37a",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "suivant",
        "topic": "",
        "payload": "kill",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 540,
        "wires": [
            [
                "35f4f2f4.70d08e"
            ]
        ]
    },
    {
        "id": "b4d1bb1a.258a38",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "stop player",
        "func": "global.set(\"player_status\", \"stop\")",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "bc99039b.b1353",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "lecture de musique phase décollage",
        "info": "\n\n",
        "x": 180,
        "y": 160,
        "wires": []
    },
    {
        "id": "191c4ab.5d97cb5",
        "type": "start-up-trigger",
        "z": "e51f5302.12682",
        "x": 120,
        "y": 200,
        "wires": [
            [
                "fb96ef73.63f46"
            ]
        ]
    },
    {
        "id": "fb96ef73.63f46",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 340,
        "y": 200,
        "wires": [
            [
                "475ea37b.6c8c8c"
            ]
        ]
    },
    {
        "id": "475ea37b.6c8c8c",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 260,
        "wires": [
            [
                "2a36292e.d24076"
            ]
        ]
    },
    {
        "id": "2a36292e.d24076",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 260,
        "wires": [
            [
                "df6c8d64.28f68",
                "4c9cf174.3fc25",
                "5baec896.cb3208",
                "baa1f40c.0789d8",
                "45a627e0.c138e8",
                "f4fdfca3.3c4e5"
            ]
        ]
    },
    {
        "id": "df6c8d64.28f68",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "thématique décollage",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"go_them_take_off\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        return accept\n    }\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 620,
        "y": 400,
        "wires": [
            [
                "2bdeae3d.b1afe2"
            ]
        ]
    },
    {
        "id": "4c9cf174.3fc25",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "musique suivante",
        "func": "let accept={}\nlet reject={}\nlet search=[]\nsearch.push(\"play_next\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        accept.payload=\"kill\";\n        return [accept,msg]\n    }\n    \n}",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 580,
        "wires": [
            [
                "35f4f2f4.70d08e"
            ],
            [
                "b3d39e83.2272a"
            ]
        ]
    },
    {
        "id": "5baec896.cb3208",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "stop la musique",
        "func": "let accept={}\nlet reject={}\nlet search=[]\nsearch.push(\"stop_player\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        accept.payload=\"kill\";\n        return [accept,msg]\n    }\n    \n}",
        "outputs": "2",
        "noerr": 0,
        "x": 600,
        "y": 480,
        "wires": [
            [
                "e6f5b77d.49a9c8",
                "b4d1bb1a.258a38",
                "2acf2f44.1d287"
            ],
            [
                "e825603c.b91f3"
            ]
        ]
    },
    {
        "id": "5ce67671.5d10a8",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "lecture de musique phase décollage",
        "info": "\n\n",
        "x": 660,
        "y": 320,
        "wires": []
    },
    {
        "id": "b94d2b8f.73e608",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 130,
        "y": 1740,
        "wires": [
            [
                "924ed368.9cbb6",
                "1d3c9251.8cc11e"
            ]
        ]
    },
    {
        "id": "9f146ef2.99051",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée go_them_take_off",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'go_them_take_off';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\n\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "924ed368.9cbb6",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "500",
        "extend": false,
        "units": "ms",
        "reset": "reset",
        "name": "",
        "x": 340,
        "y": 1740,
        "wires": [
            [
                "9f146ef2.99051"
            ]
        ]
    },
    {
        "id": "2bdeae3d.b1afe2",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "use memory and go",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        memory.push(last_memory[i])\n    }\n    \n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    \n    msg={}\n    msg.topic=\"true\"\n    msg.payload=true\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 400,
        "wires": [
            [
                "b5ade591.6b9c58"
            ]
        ]
    },
    {
        "id": "be8626d9.58f148",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 1010,
        "y": 1820,
        "wires": [
            [
                "5da1b815.7073c8"
            ]
        ]
    },
    {
        "id": "e940bfd1.7fe4f",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée stop_player",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'stop_player';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\n\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1470,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "5da1b815.7073c8",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "3",
        "extend": false,
        "units": "s",
        "reset": "reset",
        "name": "",
        "x": 1200,
        "y": 1820,
        "wires": [
            [
                "e940bfd1.7fe4f"
            ]
        ]
    },
    {
        "id": "f824e062.dd1ad",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 1010,
        "y": 1780,
        "wires": [
            [
                "b7c76733.636c78"
            ]
        ]
    },
    {
        "id": "d66e09b5.05ff38",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée play_next",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'play_next';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\n\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1470,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "b7c76733.636c78",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "3",
        "extend": false,
        "units": "s",
        "reset": "reset",
        "name": "",
        "x": 1200,
        "y": 1780,
        "wires": [
            [
                "d66e09b5.05ff38"
            ]
        ]
    },
    {
        "id": "5c857144.30eb4",
        "type": "fs-ops-dir",
        "z": "e51f5302.12682",
        "name": "search phase_chil",
        "path": "./../sounds/phase_chil/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 1090,
        "y": 1360,
        "wires": [
            [
                "4c0ef01.ea3dc1"
            ]
        ]
    },
    {
        "id": "e27d09ab.ce9fa8",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "lancement",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 600,
        "y": 1320,
        "wires": [
            [
                "5c857144.30eb4"
            ]
        ]
    },
    {
        "id": "66cadbb0.ff2d54",
        "type": "loop",
        "z": "e51f5302.12682",
        "name": "loop musique",
        "kind": "enum",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "payload",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-val",
        "finalPayload": "final-orig",
        "x": 1450,
        "y": 1360,
        "wires": [
            [],
            [
                "4fe6ca6d.c07924"
            ]
        ]
    },
    {
        "id": "4c0ef01.ea3dc1",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "shuffle",
        "func": "let file_list=msg.files;\n\nfunction shuffle(array) {\nlet currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex !== 0) {\n\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\n// Used like so\nvar arr = [2, 11, 37, 42];\nshuffle(file_list);\n//console.log(arr);\n\n\nmsg.payload=[];\n\nfor (i=0; i<file_list.length;i++)\n{\n     msg.payload.push(file_list[i]);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 1360,
        "wires": [
            [
                "66cadbb0.ff2d54"
            ]
        ]
    },
    {
        "id": "7dae363f.cab8d8",
        "type": "exec",
        "z": "e51f5302.12682",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1770,
        "y": 1440,
        "wires": [
            [],
            [],
            [
                "66cadbb0.ff2d54"
            ]
        ]
    },
    {
        "id": "4fe6ca6d.c07924",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "Ambiance_sfx",
        "func": "msg.payload=global.get('swan_path')+\"\\\\sounds\\\\phase_chil\\\\\"+msg.payload\nmsg.filename=msg.payload\n\n\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para2`)+\" \\\"\"+msg.payload+\" \\\"\";\nconsole.log( msg.payload)\n\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1600,
        "y": 1360,
        "wires": [
            [
                "7dae363f.cab8d8"
            ]
        ]
    },
    {
        "id": "a4b8792e.3c8018",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "Stop",
        "topic": "",
        "payload": "kill",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 1420,
        "wires": [
            [
                "87878639.16dd68",
                "b0366303.9a873",
                "3ee5f86e.34aa48"
            ]
        ]
    },
    {
        "id": "14134bff.870724",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "envoie le message de kill",
        "func": "\nmsg.payload='true'\nmsg.kill=\"vlc.exe\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1490,
        "y": 1520,
        "wires": [
            [
                "7dae363f.cab8d8"
            ]
        ]
    },
    {
        "id": "87878639.16dd68",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "envoie le message de break",
        "func": "\nmsg.payload=\"break\"\nmsg.payload.command=\"break\"\nmsg.command=\"break\"\n\nglobal.set(\"player_status\", \"playing\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1220,
        "y": 1420,
        "wires": [
            [
                "66cadbb0.ff2d54"
            ]
        ]
    },
    {
        "id": "3ee5f86e.34aa48",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 1160,
        "y": 1500,
        "wires": [
            [
                "14134bff.870724"
            ]
        ]
    },
    {
        "id": "f76dd6d.1a88228",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "suivant",
        "topic": "",
        "payload": "kill",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 1520,
        "wires": [
            [
                "14134bff.870724"
            ]
        ]
    },
    {
        "id": "b0366303.9a873",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "stop player",
        "func": "global.set(\"player_status\", \"stop\")\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1170,
        "y": 1460,
        "wires": [
            [
                "88c3f762.345b68"
            ]
        ]
    },
    {
        "id": "baa1f40c.0789d8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "thématique chil",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"go_them_chil\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 600,
        "y": 1360,
        "wires": [
            [
                "ad6994a2.f39758"
            ],
            []
        ]
    },
    {
        "id": "51a33cb7.17ba74",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "musique suivante",
        "func": "let accept={}\nlet reject={}\nlet search=[]\nsearch.push(\"play_next\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        accept.payload=\"kill\";\n        return [accept,msg]\n    }\n    \n}",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 1560,
        "wires": [
            [
                "a8b8ab8f.e95b18",
                "14134bff.870724"
            ],
            []
        ]
    },
    {
        "id": "ad6994a2.f39758",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=\"\"\n    msg.payload=true\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 1360,
        "wires": [
            [
                "5c857144.30eb4"
            ]
        ]
    },
    {
        "id": "a8b8ab8f.e95b18",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1450,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "77b95ae5.5914b4",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "lecture de musique phase_chil",
        "info": "\n\n",
        "x": 640,
        "y": 1280,
        "wires": []
    },
    {
        "id": "c0d0a45b.c9b278",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 130,
        "y": 1900,
        "wires": [
            [
                "fdfa3a7e.f21218",
                "bdcfa4fa.48f3a8"
            ]
        ]
    },
    {
        "id": "252f950.b648f6c",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée go_them_chil",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'go_them_chil';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\n\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "fdfa3a7e.f21218",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "500",
        "extend": false,
        "units": "ms",
        "reset": "reset",
        "name": "",
        "x": 340,
        "y": 1900,
        "wires": [
            [
                "252f950.b648f6c"
            ]
        ]
    },
    {
        "id": "88c3f762.345b68",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1450,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "3a2dbe77.e3f212",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "stop la musique",
        "func": "let accept={}\nlet reject={}\nlet search=[]\nsearch.push(\"stop_player\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        accept.payload=\"kill\";\n        return [accept,msg]\n    }\n    \n}",
        "outputs": "2",
        "noerr": 0,
        "x": 600,
        "y": 1460,
        "wires": [
            [
                "87878639.16dd68",
                "b0366303.9a873",
                "3ee5f86e.34aa48"
            ],
            []
        ]
    },
    {
        "id": "aab3feaf.9ff9e",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "entré de ligne",
        "info": "\n\n",
        "x": 890,
        "y": 320,
        "wires": []
    },
    {
        "id": "b81393d4.4778",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "bouchon",
        "info": "\n\n",
        "x": 840,
        "y": 1280,
        "wires": []
    },
    {
        "id": "3a174df8.3204a2",
        "type": "fs-ops-dir",
        "z": "e51f5302.12682",
        "name": "search phase_aterrisage",
        "path": "./../sounds/phase_aterrisage/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 1070,
        "y": 720,
        "wires": [
            [
                "94c1616d.45414"
            ]
        ]
    },
    {
        "id": "b5050e82.a27bc",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "lancement",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 600,
        "y": 680,
        "wires": [
            [
                "3a174df8.3204a2"
            ]
        ]
    },
    {
        "id": "49ec2aa6.5eae64",
        "type": "loop",
        "z": "e51f5302.12682",
        "name": "loop musique",
        "kind": "enum",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "payload",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-val",
        "finalPayload": "final-orig",
        "x": 1450,
        "y": 720,
        "wires": [
            [],
            [
                "32654309.15601c"
            ]
        ]
    },
    {
        "id": "94c1616d.45414",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "shuffle",
        "func": "let file_list=msg.files;\n\nfunction shuffle(array) {\nlet currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex !== 0) {\n\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\nshuffle(file_list);\n\nmsg.payload=[];\n\nfor (i=0; i<file_list.length;i++)\n{\n     msg.payload.push(file_list[i]);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 720,
        "wires": [
            [
                "49ec2aa6.5eae64"
            ]
        ]
    },
    {
        "id": "22879c00.32f564",
        "type": "exec",
        "z": "e51f5302.12682",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1770,
        "y": 800,
        "wires": [
            [],
            [],
            [
                "49ec2aa6.5eae64"
            ]
        ]
    },
    {
        "id": "32654309.15601c",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "Ambiance_sfx",
        "func": "msg.payload=global.get('swan_path')+\"\\\\sounds\\\\phase_aterrisage\\\\\"+msg.payload\nmsg.filename=msg.payload\n\n\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para2`)+\" \\\"\"+msg.payload+\" \\\"\";\nconsole.log( msg.payload)\n\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1600,
        "y": 720,
        "wires": [
            [
                "22879c00.32f564"
            ]
        ]
    },
    {
        "id": "23bc8667.98f14a",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "Stop",
        "topic": "",
        "payload": "kill",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 760,
        "wires": [
            [
                "fd5d35e1.289858",
                "b71ee30d.b321a",
                "33102a03.237906"
            ]
        ]
    },
    {
        "id": "c2a98ba7.1de2c8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "envoie le message de kill",
        "func": "\nmsg.payload='true'\nmsg.kill=\"vlc.exe\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1490,
        "y": 880,
        "wires": [
            [
                "22879c00.32f564"
            ]
        ]
    },
    {
        "id": "fd5d35e1.289858",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "envoie le message de break",
        "func": "\nmsg.payload=\"break\"\nmsg.payload.command=\"break\"\nmsg.command=\"break\"\n\nglobal.set(\"player_status\", \"playing\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 760,
        "wires": [
            [
                "49ec2aa6.5eae64"
            ]
        ]
    },
    {
        "id": "33102a03.237906",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 1160,
        "y": 840,
        "wires": [
            [
                "c2a98ba7.1de2c8"
            ]
        ]
    },
    {
        "id": "2bbf19a.ea56ae6",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "suivant",
        "topic": "",
        "payload": "kill",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 860,
        "wires": [
            [
                "c2a98ba7.1de2c8"
            ]
        ]
    },
    {
        "id": "b71ee30d.b321a",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "stop player",
        "func": "global.set(\"player_status\", \"stop\")",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "45a627e0.c138e8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "thématique aterrisage",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"go_them_landing\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        return accept\n    }\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 620,
        "y": 720,
        "wires": [
            [
                "9565639b.69374"
            ]
        ]
    },
    {
        "id": "b3d39e83.2272a",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "musique suivante",
        "func": "let accept={}\nlet reject={}\nlet search=[]\nsearch.push(\"play_next\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        accept.payload=\"kill\";\n        return [accept,msg]\n    }\n    \n}",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 900,
        "wires": [
            [
                "c2a98ba7.1de2c8"
            ],
            [
                "c2288c7b.7f272"
            ]
        ]
    },
    {
        "id": "e825603c.b91f3",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "stop la musique",
        "func": "let accept={}\nlet reject={}\nlet search=[]\nsearch.push(\"stop_player\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        accept.payload=\"kill\";\n        return [accept,msg]\n    }\n    \n}",
        "outputs": "2",
        "noerr": 0,
        "x": 600,
        "y": 800,
        "wires": [
            [
                "fd5d35e1.289858",
                "b71ee30d.b321a",
                "33102a03.237906"
            ],
            [
                "80555b6d.800c78"
            ]
        ]
    },
    {
        "id": "b03f61d7.e325f",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "lecture de musique phase atterrissage",
        "info": "\n\n",
        "x": 670,
        "y": 640,
        "wires": []
    },
    {
        "id": "9565639b.69374",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "use memory and go",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        memory.push(last_memory[i])\n    }\n    \n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    \n    msg={}\n    msg.topic=\"true\"\n    msg.payload=true\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 720,
        "wires": [
            [
                "3a174df8.3204a2"
            ]
        ]
    },
    {
        "id": "a5db7101.5ce81",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "intermédiaire de ligne",
        "info": "\n\n",
        "x": 940,
        "y": 640,
        "wires": []
    },
    {
        "id": "988ae366.1c07a",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 130,
        "y": 1820,
        "wires": [
            [
                "7097e739.e483c8",
                "ddf03755.bb28e8"
            ]
        ]
    },
    {
        "id": "74b7ff84.164c",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée go_them_landing",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'go_them_landing';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\n\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "7097e739.e483c8",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "500",
        "extend": false,
        "units": "ms",
        "reset": "reset",
        "name": "",
        "x": 340,
        "y": 1820,
        "wires": [
            [
                "74b7ff84.164c"
            ]
        ]
    },
    {
        "id": "a22421e.2c189e",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 130,
        "y": 1660,
        "wires": [
            [
                "dde65082.aea91",
                "6a00120e.c6a3ac"
            ]
        ]
    },
    {
        "id": "96821b5b.fea8b8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée go_them_phase_combat",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'go_them_phase_combat';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\n\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "dde65082.aea91",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "500",
        "extend": false,
        "units": "ms",
        "reset": "reset",
        "name": "",
        "x": 340,
        "y": 1660,
        "wires": [
            [
                "96821b5b.fea8b8"
            ]
        ]
    },
    {
        "id": "aa8765e9.4e7358",
        "type": "fs-ops-dir",
        "z": "e51f5302.12682",
        "name": "search phase_combat",
        "path": "./../sounds/phase_combat/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 1060,
        "y": 1040,
        "wires": [
            [
                "de2c06df.73aa28"
            ]
        ]
    },
    {
        "id": "6e0091c.0ab577",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "lancement",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 600,
        "y": 1000,
        "wires": [
            [
                "aa8765e9.4e7358"
            ]
        ]
    },
    {
        "id": "b764bc36.4fa92",
        "type": "loop",
        "z": "e51f5302.12682",
        "name": "loop musique",
        "kind": "enum",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "payload",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-val",
        "finalPayload": "final-orig",
        "x": 1450,
        "y": 1040,
        "wires": [
            [],
            [
                "83ebcb85.7034e8"
            ]
        ]
    },
    {
        "id": "de2c06df.73aa28",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "shuffle",
        "func": "let file_list=msg.files;\n\nfunction shuffle(array) {\nlet currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex !== 0) {\n\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\nshuffle(file_list);\n\nmsg.payload=[];\n\nfor (i=0; i<file_list.length;i++)\n{\n     msg.payload.push(file_list[i]);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 1040,
        "wires": [
            [
                "b764bc36.4fa92"
            ]
        ]
    },
    {
        "id": "9fbdfdee.4b292",
        "type": "exec",
        "z": "e51f5302.12682",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1770,
        "y": 1120,
        "wires": [
            [],
            [],
            [
                "b764bc36.4fa92"
            ]
        ]
    },
    {
        "id": "83ebcb85.7034e8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "Ambiance_sfx",
        "func": "msg.payload=global.get('swan_path')+\"\\\\sounds\\\\phase_combat\\\\\"+msg.payload\nmsg.filename=msg.payload\n\n\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para2`)+\" \\\"\"+msg.payload+\" \\\"\";\nconsole.log( msg.payload)\n\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1600,
        "y": 1040,
        "wires": [
            [
                "9fbdfdee.4b292"
            ]
        ]
    },
    {
        "id": "2d7b3a63.2c88c6",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "Stop",
        "topic": "",
        "payload": "kill",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 1080,
        "wires": [
            [
                "1580857f.c1aafb",
                "b75a8fd.233a27",
                "db72654e.1fd188"
            ]
        ]
    },
    {
        "id": "c2e43ad9.2654b8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "envoie le message de kill",
        "func": "\nmsg.payload='true'\nmsg.kill=\"vlc.exe\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1490,
        "y": 1200,
        "wires": [
            [
                "9fbdfdee.4b292"
            ]
        ]
    },
    {
        "id": "1580857f.c1aafb",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "envoie le message de break",
        "func": "\nmsg.payload=\"break\"\nmsg.payload.command=\"break\"\nmsg.command=\"break\"\n\nglobal.set(\"player_status\", \"playing\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 1080,
        "wires": [
            [
                "b764bc36.4fa92"
            ]
        ]
    },
    {
        "id": "db72654e.1fd188",
        "type": "trigger",
        "z": "e51f5302.12682",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 1160,
        "y": 1160,
        "wires": [
            [
                "c2e43ad9.2654b8"
            ]
        ]
    },
    {
        "id": "ae10a0c2.163ed",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "suivant",
        "topic": "",
        "payload": "kill",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 1180,
        "wires": [
            [
                "c2e43ad9.2654b8"
            ]
        ]
    },
    {
        "id": "b75a8fd.233a27",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "stop player",
        "func": "global.set(\"player_status\", \"stop\")",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "f4fdfca3.3c4e5",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "thématique combat",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"go_them_phase_combat\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        return accept\n    }\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 610,
        "y": 1040,
        "wires": [
            [
                "a9c86aab.80c6a8"
            ]
        ]
    },
    {
        "id": "c2288c7b.7f272",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "musique suivante",
        "func": "let accept={}\nlet reject={}\nlet search=[]\nsearch.push(\"play_next\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        accept.payload=\"kill\";\n        return [accept,msg]\n    }\n    \n}",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 1220,
        "wires": [
            [
                "c2e43ad9.2654b8"
            ],
            [
                "51a33cb7.17ba74"
            ]
        ]
    },
    {
        "id": "80555b6d.800c78",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "stop la musique",
        "func": "let accept={}\nlet reject={}\nlet search=[]\nsearch.push(\"stop_player\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n        accept.payload=\"kill\";\n        return [accept,msg]\n    }\n    \n}",
        "outputs": "2",
        "noerr": 0,
        "x": 600,
        "y": 1120,
        "wires": [
            [
                "1580857f.c1aafb",
                "b75a8fd.233a27",
                "db72654e.1fd188"
            ],
            [
                "3a2dbe77.e3f212"
            ]
        ]
    },
    {
        "id": "7c08087d.6ff4d8",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "lecture de musique phase combat",
        "info": "\n\n",
        "x": 650,
        "y": 960,
        "wires": []
    },
    {
        "id": "a9c86aab.80c6a8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "use memory and go",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        memory.push(last_memory[i])\n    }\n    \n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    \n    msg={}\n    msg.topic=\"true\"\n    msg.payload=true\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 1040,
        "wires": [
            [
                "aa8765e9.4e7358"
            ]
        ]
    },
    {
        "id": "38cd7bda.e21a04",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "intermédiaire de ligne",
        "info": "\n\n",
        "x": 940,
        "y": 960,
        "wires": []
    },
    {
        "id": "6a00120e.c6a3ac",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée stop_player",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'stop_player';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\n\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "1d3c9251.8cc11e",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée stop_player",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'stop_player';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\n\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "ddf03755.bb28e8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée stop_player",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'stop_player';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\n\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "bdcfa4fa.48f3a8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "commande simulée stop_player",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'stop_player';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\n\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "ca87834b.a8d0b",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 710,
        "y": 180,
        "wires": [
            [
                "9c31933f.ba0e"
            ]
        ]
    },
    {
        "id": "9c31933f.ba0e",
        "type": "file in",
        "z": "e51f5302.12682",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 870,
        "y": 180,
        "wires": [
            [
                "c6178b6.a225f78"
            ]
        ]
    },
    {
        "id": "c6178b6.a225f78",
        "type": "json",
        "z": "e51f5302.12682",
        "name": "from json",
        "pretty": false,
        "x": 1000,
        "y": 180,
        "wires": [
            [
                "c4e138a9.9e54d8"
            ]
        ]
    },
    {
        "id": "c4e138a9.9e54d8",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"Mixer Flow\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1140,
        "y": 180,
        "wires": [
            [
                "92b8c0b4.df10f"
            ]
        ]
    },
    {
        "id": "92b8c0b4.df10f",
        "type": "json",
        "z": "e51f5302.12682",
        "name": "to json",
        "pretty": true,
        "x": 1270,
        "y": 180,
        "wires": [
            [
                "95bef188.38863"
            ]
        ]
    },
    {
        "id": "95bef188.38863",
        "type": "file",
        "z": "e51f5302.12682",
        "name": "01_Mixer_Flow.json",
        "filename": "./../viseo-bot-project/data/flow/mod/01_Mixer_Flow.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1440,
        "y": 180,
        "wires": []
    },
    {
        "id": "c9378f9c.9a428",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "sauvegarde du flow pour exportation ou modeur",
        "info": "",
        "x": 780,
        "y": 140,
        "wires": []
    },
    {
        "id": "b191f970.a9b2f8",
        "type": "inject",
        "z": "e51f5302.12682",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 60,
        "wires": [
            [
                "2fe15f35.b4a69"
            ]
        ]
    },
    {
        "id": "2fe15f35.b4a69",
        "type": "file in",
        "z": "e51f5302.12682",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 310,
        "y": 60,
        "wires": [
            [
                "f3a6bedb.b9089"
            ]
        ]
    },
    {
        "id": "f3a6bedb.b9089",
        "type": "json",
        "z": "e51f5302.12682",
        "name": "from json",
        "pretty": false,
        "x": 440,
        "y": 60,
        "wires": [
            [
                "efbf7068.023fb"
            ]
        ]
    },
    {
        "id": "efbf7068.023fb",
        "type": "function",
        "z": "e51f5302.12682",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"13_musique\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 60,
        "wires": [
            [
                "2812a468.eeb71c"
            ]
        ]
    },
    {
        "id": "2812a468.eeb71c",
        "type": "json",
        "z": "e51f5302.12682",
        "name": "to json",
        "pretty": true,
        "x": 710,
        "y": 60,
        "wires": [
            [
                "b5d7cce5.3f1e9"
            ]
        ]
    },
    {
        "id": "b5d7cce5.3f1e9",
        "type": "file",
        "z": "e51f5302.12682",
        "name": "13_musique",
        "filename": "./../viseo-bot-project/data/flow/master/13_musique.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 850,
        "y": 60,
        "wires": []
    },
    {
        "id": "f8d1d0ca.311b4",
        "type": "comment",
        "z": "e51f5302.12682",
        "name": "sauvegarde du flow pour exportation ou modeur",
        "info": "",
        "x": 220,
        "y": 20,
        "wires": []
    },
    {
        "id": "ad8ab197.d70b6",
        "type": "start-up-trigger",
        "z": "3bfd628a.fc68ae",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "ac499ff8.5181c"
            ]
        ]
    },
    {
        "id": "ac499ff8.5181c",
        "type": "trigger",
        "z": "3bfd628a.fc68ae",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 340,
        "y": 140,
        "wires": [
            [
                "aa331958.363cd8",
                "a98f3645.a92f78",
                "cbc87cd9.03e7f",
                "8abb8f11.fb6eb",
                "aa0ddf33.67641",
                "8c657673.a39bb8"
            ]
        ]
    },
    {
        "id": "aa331958.363cd8",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 280,
        "wires": [
            [
                "9513d927.3da548"
            ]
        ]
    },
    {
        "id": "9513d927.3da548",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 280,
        "wires": [
            [
                "a47a9877.c32df8",
                "339a5dbe.f31ee2"
            ]
        ]
    },
    {
        "id": "a98f3645.a92f78",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 420,
        "wires": [
            [
                "15737c9c.45f5c3"
            ]
        ]
    },
    {
        "id": "15737c9c.45f5c3",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 420,
        "wires": [
            [
                "e351719e.1a16d"
            ]
        ]
    },
    {
        "id": "b0c33e3a.6b999",
        "type": "comment",
        "z": "3bfd628a.fc68ae",
        "name": "Minage",
        "info": "\n\n",
        "x": 90,
        "y": 240,
        "wires": []
    },
    {
        "id": "a47a9877.c32df8",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sort le bras de minage",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"open_mining_tools\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            //console.log(\"ask : \"+ask)\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 600,
        "y": 280,
        "wires": [
            [
                "c3531346.b591c"
            ],
            []
        ]
    },
    {
        "id": "e351719e.1a16d",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "change d'outils",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"change_mining_tools\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 580,
        "y": 420,
        "wires": [
            [
                "cc1fad1b.e0373"
            ],
            []
        ]
    },
    {
        "id": "b09dc5b4.82f708",
        "type": "comment",
        "z": "3bfd628a.fc68ae",
        "name": "Alarme quantainum",
        "info": "\n\n",
        "x": 130,
        "y": 500,
        "wires": []
    },
    {
        "id": "339a5dbe.f31ee2",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "rentre le bras de minage",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\n\nsearch.push(\"close_mining_tools\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 320,
        "wires": [
            [
                "5f5a8fb9.feffe"
            ],
            []
        ]
    },
    {
        "id": "254c4ca4.a4b3a4",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "ng_sfx mining_out",
        "func": "let sound_effect=[];\nlet track_id='mining_out';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1250,
        "y": 240,
        "wires": [
            [
                "33b75159.e942ce"
            ]
        ]
    },
    {
        "id": "ba752f59.8bf51",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "ng_sfx mining_in",
        "func": "let sound_effect=[];\nlet track_id='mining_in';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1250,
        "y": 360,
        "wires": [
            [
                "33b75159.e942ce"
            ]
        ]
    },
    {
        "id": "33b75159.e942ce",
        "type": "exec",
        "z": "3bfd628a.fc68ae",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1610,
        "y": 340,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "4477239c.25bbbc",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "ng_sfx mining_switch",
        "func": "let sound_effect=[];\nlet track_id='mining_switch';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 400,
        "wires": [
            [
                "33b75159.e942ce"
            ]
        ]
    },
    {
        "id": "8d8e05f5.0f0b78",
        "type": "inject",
        "z": "3bfd628a.fc68ae",
        "name": "",
        "topic": "",
        "payload": "test",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 810,
        "y": 540,
        "wires": [
            [
                "2255b532.ec849a",
                "aa35f84b.1bc4c8",
                "d0ba7eb1.e4352",
                "dd965e81.8d464"
            ]
        ]
    },
    {
        "id": "10ad7bb3.97c484",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "activation chrono quantique",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"chrono_on\")\n\t\t\t\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.payload.includes(ask))\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 620,
        "y": 580,
        "wires": [
            [
                "6d76856f.bc85cc"
            ],
            []
        ]
    },
    {
        "id": "dd965e81.8d464",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sfx quanta 15m",
        "func": "let sound=`\\\"`+global.get(\"path_sound\")+`mod\\\\chrono_quantainium\\\\quanta15m\\\"`;\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 540,
        "wires": [
            [
                "6779c1c0.498d9"
            ]
        ]
    },
    {
        "id": "6148b959.86acc8",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sfx quanta 10m",
        "func": "let sound=`\\\"`+global.get(\"path_sound\")+`mod\\\\chrono_quantainium\\\\quanta10m\\\"`;\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 580,
        "wires": [
            [
                "6779c1c0.498d9"
            ]
        ]
    },
    {
        "id": "67ed11b6.ff632",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sfx quanta 5m",
        "func": "let sound=`\\\"`+global.get(\"path_sound\")+`mod\\\\chrono_quantainium\\\\quanta5m\\\"`;\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 620,
        "wires": [
            [
                "6779c1c0.498d9"
            ]
        ]
    },
    {
        "id": "16507222.d5628e",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sfx quanta 1m",
        "func": "let sound=`\\\"`+global.get(\"path_sound\")+`mod\\\\chrono_quantainium\\\\quanta1m\\\"`;\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 660,
        "wires": [
            [
                "6779c1c0.498d9"
            ]
        ]
    },
    {
        "id": "ad02f7b9.d256e8",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sfx quanta 10s",
        "func": "let sound=`\\\"`+global.get(\"path_sound\")+`mod\\\\chrono_quantainium\\\\quanta10s\\\"`;\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 740,
        "wires": [
            [
                "6779c1c0.498d9"
            ]
        ]
    },
    {
        "id": "2255b532.ec849a",
        "type": "trigger",
        "z": "3bfd628a.fc68ae",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "5",
        "extend": false,
        "units": "min",
        "reset": "reset",
        "name": "",
        "x": 1210,
        "y": 580,
        "wires": [
            [
                "6148b959.86acc8"
            ]
        ]
    },
    {
        "id": "aa35f84b.1bc4c8",
        "type": "trigger",
        "z": "3bfd628a.fc68ae",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "10",
        "extend": false,
        "units": "min",
        "reset": "reset",
        "name": "",
        "x": 1210,
        "y": 622,
        "wires": [
            [
                "67ed11b6.ff632"
            ]
        ]
    },
    {
        "id": "d0ba7eb1.e4352",
        "type": "trigger",
        "z": "3bfd628a.fc68ae",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "14",
        "extend": false,
        "units": "min",
        "reset": "reset",
        "name": "",
        "x": 1210,
        "y": 660,
        "wires": [
            [
                "16507222.d5628e",
                "6d0b80d3.e8cfb",
                "7281a970.d81848"
            ]
        ]
    },
    {
        "id": "1d36dcd0.5597a3",
        "type": "inject",
        "z": "3bfd628a.fc68ae",
        "name": "",
        "topic": "",
        "payload": "reset",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 810,
        "y": 660,
        "wires": [
            [
                "2255b532.ec849a",
                "aa35f84b.1bc4c8",
                "d0ba7eb1.e4352",
                "6d0b80d3.e8cfb",
                "cd371825.0a0838"
            ]
        ]
    },
    {
        "id": "d5aa9e8e.d68cb",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "coupure chrono quantique",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\n\nsearch.push(\"chrono_off\")\n\t\t\t\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.payload.includes(ask))\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 620,
        "wires": [
            [
                "142d051c.8cfaab"
            ],
            []
        ]
    },
    {
        "id": "6d0b80d3.e8cfb",
        "type": "trigger",
        "z": "3bfd628a.fc68ae",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "45",
        "extend": false,
        "units": "s",
        "reset": "reset",
        "name": "",
        "x": 1310,
        "y": 740,
        "wires": [
            [
                "ad02f7b9.d256e8"
            ]
        ]
    },
    {
        "id": "6779c1c0.498d9",
        "type": "exec",
        "z": "3bfd628a.fc68ae",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1710,
        "y": 640,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "addd414f.b02cc",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sfx quanta 30s",
        "func": "let sound=`\\\"`+global.get(\"path_sound\")+`mod\\\\chrono_quantainium\\\\quanta30s\\\"`;\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 700,
        "wires": [
            [
                "6779c1c0.498d9"
            ]
        ]
    },
    {
        "id": "7281a970.d81848",
        "type": "trigger",
        "z": "3bfd628a.fc68ae",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "30",
        "extend": false,
        "units": "s",
        "reset": "reset",
        "name": "",
        "x": 1310,
        "y": 700,
        "wires": [
            [
                "addd414f.b02cc"
            ]
        ]
    },
    {
        "id": "cd371825.0a0838",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sound_effect bip",
        "func": "let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 780,
        "wires": [
            [
                "6779c1c0.498d9"
            ]
        ]
    },
    {
        "id": "c3531346.b591c",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 280,
        "wires": [
            [
                "254c4ca4.a4b3a4",
                "13889667.118c6a"
            ]
        ]
    },
    {
        "id": "5f5a8fb9.feffe",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 320,
        "wires": [
            [
                "ba752f59.8bf51",
                "4cb01bb1.d66d74"
            ]
        ]
    },
    {
        "id": "cc1fad1b.e0373",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 420,
        "wires": [
            [
                "107a2d66.88a7b3",
                "4477239c.25bbbc"
            ]
        ]
    },
    {
        "id": "142d051c.8cfaab",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 620,
        "wires": [
            [
                "dd965e81.8d464",
                "2255b532.ec849a",
                "aa35f84b.1bc4c8",
                "d0ba7eb1.e4352",
                "7281a970.d81848",
                "6d0b80d3.e8cfb"
            ]
        ]
    },
    {
        "id": "6d76856f.bc85cc",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 580,
        "wires": [
            [
                "2255b532.ec849a",
                "aa35f84b.1bc4c8",
                "d0ba7eb1.e4352",
                "dd965e81.8d464"
            ]
        ]
    },
    {
        "id": "cbc87cd9.03e7f",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 580,
        "wires": [
            [
                "5c12857b.e1bcdc"
            ]
        ]
    },
    {
        "id": "5c12857b.e1bcdc",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 580,
        "wires": [
            [
                "10ad7bb3.97c484",
                "d5aa9e8e.d68cb"
            ]
        ]
    },
    {
        "id": "f73b0138.9efe",
        "type": "start-up-trigger",
        "z": "3bfd628a.fc68ae",
        "x": 160,
        "y": 1020,
        "wires": [
            [
                "edeb780.7654188"
            ]
        ]
    },
    {
        "id": "edeb780.7654188",
        "type": "trigger",
        "z": "3bfd628a.fc68ae",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-3",
        "extend": false,
        "units": "s",
        "reset": "",
        "name": "",
        "x": 520,
        "y": 1020,
        "wires": [
            [
                "ea0e3427.edeee8"
            ]
        ]
    },
    {
        "id": "ea0e3427.edeee8",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "gate scan",
        "func": "if(global.get('spy_scan') === true)\n{\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 1020,
        "wires": [
            [
                "7739c43e.e3ee7c"
            ]
        ]
    },
    {
        "id": "8a8612dd.23419",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "coupure balayage",
        "func": "global.set('spy_scan',false);",
        "outputs": 1,
        "noerr": 0,
        "x": 1250,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "1a7daef6.d0f321",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "activation balayage",
        "func": "global.set('spy_scan',true);",
        "outputs": 1,
        "noerr": 0,
        "x": 1250,
        "y": 840,
        "wires": [
            [
                "4adfc12a.f25ec"
            ]
        ]
    },
    {
        "id": "cdd5ceba.8ea",
        "type": "comment",
        "z": "3bfd628a.fc68ae",
        "name": "scan",
        "info": "\n\n",
        "x": 90,
        "y": 780,
        "wires": []
    },
    {
        "id": "b0b85ace.6fea68",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "lancement balayage zone",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"auto_ping_on\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 840,
        "wires": [
            [
                "8ce41606.eee3e8"
            ],
            []
        ]
    },
    {
        "id": "b176f198.853ff",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "Coupure balayage zone",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"auto_ping_off\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            //console.log(\"ask : \"+ask)\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 880,
        "wires": [
            [
                "8d6260b9.6b777"
            ],
            []
        ]
    },
    {
        "id": "707f2804.813448",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "ng_sfx active_scan_off",
        "func": "let sound_effect=[];\nlet track_id='active_scan_off';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 920,
        "wires": [
            [
                "4adfc12a.f25ec"
            ]
        ]
    },
    {
        "id": "afbe19a7.17fe88",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "ng_sfx active_scan_on",
        "func": "let sound_effect=[];\nlet track_id='active_scan_on';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 880,
        "wires": [
            [
                "4adfc12a.f25ec"
            ]
        ]
    },
    {
        "id": "4adfc12a.f25ec",
        "type": "exec",
        "z": "3bfd628a.fc68ae",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1710,
        "y": 880,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bab358bf.eb31c8",
        "type": "exec",
        "z": "3bfd628a.fc68ae",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1710,
        "y": 1020,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "8ce41606.eee3e8",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 840,
        "wires": [
            [
                "1a7daef6.d0f321",
                "afbe19a7.17fe88"
            ]
        ]
    },
    {
        "id": "8d6260b9.6b777",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 880,
        "wires": [
            [
                "707f2804.813448",
                "8a8612dd.23419"
            ]
        ]
    },
    {
        "id": "8abb8f11.fb6eb",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 840,
        "wires": [
            [
                "b93ef133.15413"
            ]
        ]
    },
    {
        "id": "b93ef133.15413",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 840,
        "wires": [
            [
                "b0b85ace.6fea68"
            ]
        ]
    },
    {
        "id": "aa0ddf33.67641",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 880,
        "wires": [
            [
                "17720809.6aed68"
            ]
        ]
    },
    {
        "id": "17720809.6aed68",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 880,
        "wires": [
            [
                "b176f198.853ff"
            ]
        ]
    },
    {
        "id": "8c657673.a39bb8",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 1120,
        "wires": [
            [
                "f635c15f.6a68b"
            ]
        ]
    },
    {
        "id": "f635c15f.6a68b",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 1120,
        "wires": [
            [
                "efadd113.f4735"
            ]
        ]
    },
    {
        "id": "906a33d4.e509a",
        "type": "comment",
        "z": "3bfd628a.fc68ae",
        "name": "Ejection minage",
        "info": "\n\n",
        "x": 120,
        "y": 1080,
        "wires": []
    },
    {
        "id": "efadd113.f4735",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "éject le minerai",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"jetison\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 580,
        "y": 1120,
        "wires": [
            [
                "2324bd6.3605142"
            ],
            []
        ]
    },
    {
        "id": "e8a06889.0ed718",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 1160,
        "wires": [
            [
                "8be8ac99.be632"
            ]
        ]
    },
    {
        "id": "2324bd6.3605142",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 1120,
        "wires": [
            [
                "e8a06889.0ed718",
                "f7d74e00.c30b7"
            ]
        ]
    },
    {
        "id": "8be8ac99.be632",
        "type": "exec",
        "z": "3bfd628a.fc68ae",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1710,
        "y": 1120,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "13889667.118c6a",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "keybinding_auto open_min_tools",
        "func": "let keybinding=global.get('open_min_tools');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1300,
        "y": 280,
        "wires": [
            [
                "33b75159.e942ce"
            ]
        ]
    },
    {
        "id": "4cb01bb1.d66d74",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "keybinding_auto close_min_tools",
        "func": "let keybinding=global.get('close_min_tools');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1300,
        "y": 320,
        "wires": [
            [
                "33b75159.e942ce"
            ]
        ]
    },
    {
        "id": "107a2d66.88a7b3",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "keybinding_auto v_toggle_mining_mode",
        "func": "let keybinding=global.get('v_toggle_mining_mode');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1320,
        "y": 440,
        "wires": [
            [
                "33b75159.e942ce"
            ]
        ]
    },
    {
        "id": "7739c43e.e3ee7c",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "keybinding_auto v_invoke_ping",
        "func": "let keybinding=global.get('v_invoke_ping');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1290,
        "y": 1020,
        "wires": [
            [
                "bab358bf.eb31c8"
            ]
        ]
    },
    {
        "id": "f7d74e00.c30b7",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "keybinding_auto v_jettison_volatile_cargo",
        "func": "let keybinding=global.get('v_jettison_volatile_cargo');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1320,
        "y": 1120,
        "wires": [
            [
                "8be8ac99.be632"
            ]
        ]
    },
    {
        "id": "98dd2f37.4e8f6",
        "type": "inject",
        "z": "3bfd628a.fc68ae",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 80,
        "wires": [
            [
                "b4a089c5.2f82f8"
            ]
        ]
    },
    {
        "id": "b4a089c5.2f82f8",
        "type": "file in",
        "z": "3bfd628a.fc68ae",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "38f8be29.d124d2"
            ]
        ]
    },
    {
        "id": "38f8be29.d124d2",
        "type": "json",
        "z": "3bfd628a.fc68ae",
        "name": "from json",
        "pretty": false,
        "x": 440,
        "y": 80,
        "wires": [
            [
                "f0c20af9.443458"
            ]
        ]
    },
    {
        "id": "f0c20af9.443458",
        "type": "function",
        "z": "3bfd628a.fc68ae",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"11_minage_scan\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 80,
        "wires": [
            [
                "ccca180a.14c7d8"
            ]
        ]
    },
    {
        "id": "ccca180a.14c7d8",
        "type": "json",
        "z": "3bfd628a.fc68ae",
        "name": "to json",
        "pretty": true,
        "x": 710,
        "y": 80,
        "wires": [
            [
                "c47b4df1.22071"
            ]
        ]
    },
    {
        "id": "c47b4df1.22071",
        "type": "file",
        "z": "3bfd628a.fc68ae",
        "name": "11_minage_scan",
        "filename": "./../viseo-bot-project/data/flow/master/11_minage_scan.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 870,
        "y": 80,
        "wires": []
    },
    {
        "id": "ee06d5cd.8101d8",
        "type": "comment",
        "z": "3bfd628a.fc68ae",
        "name": "sauvegarde du flow pour exportation ou modeur",
        "info": "",
        "x": 220,
        "y": 40,
        "wires": []
    },
    {
        "id": "87375c93.2211f",
        "type": "comment",
        "z": "67565b43.7eac14",
        "name": "phare",
        "info": "\n\n",
        "x": 90,
        "y": 240,
        "wires": []
    },
    {
        "id": "fea4270e.ca9da8",
        "type": "comment",
        "z": "67565b43.7eac14",
        "name": "Porte vaisseau",
        "info": "\n\n",
        "x": 120,
        "y": 560,
        "wires": []
    },
    {
        "id": "d19ddd50.4b969",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "allumage feu",
        "func": "let accept={}\nlet reject={}\nlet search=[]\nsearch.push(\"light_on\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 570,
        "y": 360,
        "wires": [
            [
                "cc8f2f91.0a18b"
            ],
            []
        ]
    },
    {
        "id": "a3ca111a.442fc",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "extinction feu",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"light_off\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 570,
        "y": 280,
        "wires": [
            [
                "68b5578b.f303f8"
            ],
            []
        ]
    },
    {
        "id": "31c0f0c0.e8d31",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "fermetures des portes",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"close_door\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 600,
        "y": 680,
        "wires": [
            [
                "dad09026.3d41f"
            ],
            []
        ]
    },
    {
        "id": "fec3be40.01d7a",
        "type": "exec",
        "z": "67565b43.7eac14",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1610,
        "y": 320,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "73af85b5.66438c",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "ng_sfx lum_off",
        "func": "let sound_effect=[];\nlet track_id='lum_off';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 320,
        "wires": [
            [
                "fec3be40.01d7a"
            ]
        ]
    },
    {
        "id": "a797ae56.500e6",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "ng_sfx door_open",
        "func": "let sound_effect=[];\nlet track_id='door_open';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1270,
        "y": 640,
        "wires": [
            [
                "c1753ec8.14dfb"
            ]
        ]
    },
    {
        "id": "509eba3.5e4af44",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "ng_sfx door_close",
        "func": "let sound_effect=[];\nlet track_id='door_close';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1270,
        "y": 740,
        "wires": [
            [
                "c1753ec8.14dfb"
            ]
        ]
    },
    {
        "id": "c1753ec8.14dfb",
        "type": "exec",
        "z": "67565b43.7eac14",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1610,
        "y": 660,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "f7e066af.a11bb8",
        "type": "start-up-trigger",
        "z": "67565b43.7eac14",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "cb0e9999.06c398"
            ]
        ]
    },
    {
        "id": "cb0e9999.06c398",
        "type": "trigger",
        "z": "67565b43.7eac14",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 340,
        "y": 140,
        "wires": [
            [
                "6b990751.a6de18",
                "3a09548b.858c4c",
                "cd140991.85c3b8"
            ]
        ]
    },
    {
        "id": "6b990751.a6de18",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 280,
        "wires": [
            [
                "c681dacc.65a6c8"
            ]
        ]
    },
    {
        "id": "c681dacc.65a6c8",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 280,
        "wires": [
            [
                "a3ca111a.442fc",
                "d19ddd50.4b969"
            ]
        ]
    },
    {
        "id": "68b5578b.f303f8",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 280,
        "wires": [
            [
                "73af85b5.66438c",
                "8c847aea.9c3178"
            ]
        ]
    },
    {
        "id": "cc8f2f91.0a18b",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 360,
        "wires": [
            [
                "d1afc268.ff508",
                "db79b63d.4e4d38"
            ]
        ]
    },
    {
        "id": "d1afc268.ff508",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "ng_sfx lum_on",
        "func": "let sound_effect=[];\nlet track_id='lum_on';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 400,
        "wires": [
            [
                "fec3be40.01d7a"
            ]
        ]
    },
    {
        "id": "55867ea4.a39a",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "ng_sfx exit",
        "func": "let sound_effect=[];\nlet track_id='exit';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1250,
        "y": 520,
        "wires": [
            [
                "63075250.dc224c"
            ]
        ]
    },
    {
        "id": "ce37e7b8.8d9708",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 480,
        "wires": [
            [
                "55867ea4.a39a",
                "b062e9b6.0a45a8"
            ]
        ]
    },
    {
        "id": "63075250.dc224c",
        "type": "exec",
        "z": "67565b43.7eac14",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1610,
        "y": 500,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "97bb12ab.60cc1",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "sortir du siége",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"exit_seat\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 580,
        "y": 480,
        "wires": [
            [
                "ce37e7b8.8d9708"
            ],
            []
        ]
    },
    {
        "id": "6ccfe024.12a6c",
        "type": "comment",
        "z": "67565b43.7eac14",
        "name": "sortir",
        "info": "\n\n",
        "x": 90,
        "y": 440,
        "wires": []
    },
    {
        "id": "3a09548b.858c4c",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 480,
        "wires": [
            [
                "457c85c.8b3bb7c"
            ]
        ]
    },
    {
        "id": "457c85c.8b3bb7c",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 480,
        "wires": [
            [
                "97bb12ab.60cc1"
            ]
        ]
    },
    {
        "id": "cd140991.85c3b8",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 140,
        "y": 600,
        "wires": [
            [
                "296e5831.744818"
            ]
        ]
    },
    {
        "id": "296e5831.744818",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 600,
        "wires": [
            [
                "31c0f0c0.e8d31",
                "6b178eaa.d97a1"
            ]
        ]
    },
    {
        "id": "39c1d805.0ffe78",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 600,
        "wires": [
            [
                "a797ae56.500e6",
                "76fd5b82.7bd6c4"
            ]
        ]
    },
    {
        "id": "dad09026.3d41f",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 680,
        "wires": [
            [
                "509eba3.5e4af44",
                "636899e3.a84508"
            ]
        ]
    },
    {
        "id": "8c847aea.9c3178",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "keybinding_auto v_lights",
        "func": "let keybinding=global.get('v_lights');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1250,
        "y": 280,
        "wires": [
            [
                "fec3be40.01d7a"
            ]
        ]
    },
    {
        "id": "db79b63d.4e4d38",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "keybinding_auto v_lights",
        "func": "let keybinding=global.get('v_lights');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1250,
        "y": 360,
        "wires": [
            [
                "fec3be40.01d7a"
            ]
        ]
    },
    {
        "id": "b062e9b6.0a45a8",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "keybinding_auto exit",
        "func": "let keybinding=global.get('exit');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1240,
        "y": 480,
        "wires": [
            [
                "63075250.dc224c"
            ]
        ]
    },
    {
        "id": "76fd5b82.7bd6c4",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "keybinding_auto v_open_all_doors",
        "func": "let keybinding=global.get('v_open_all_doors');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1280,
        "y": 600,
        "wires": [
            [
                "c1753ec8.14dfb"
            ]
        ]
    },
    {
        "id": "636899e3.a84508",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "keybinding_auto v_close_all_doors",
        "func": "let keybinding=global.get('v_close_all_doors');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1280,
        "y": 700,
        "wires": [
            [
                "c1753ec8.14dfb"
            ]
        ]
    },
    {
        "id": "6b178eaa.d97a1",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "ouverture des portes",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"open_door\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 600,
        "y": 600,
        "wires": [
            [
                "39c1d805.0ffe78"
            ],
            []
        ]
    },
    {
        "id": "f6526ef3.13105",
        "type": "inject",
        "z": "67565b43.7eac14",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 170,
        "y": 80,
        "wires": [
            [
                "3db49e78.0eebf2"
            ]
        ]
    },
    {
        "id": "3db49e78.0eebf2",
        "type": "file in",
        "z": "67565b43.7eac14",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 330,
        "y": 80,
        "wires": [
            [
                "98a7985.d04f768"
            ]
        ]
    },
    {
        "id": "98a7985.d04f768",
        "type": "json",
        "z": "67565b43.7eac14",
        "name": "from json",
        "pretty": false,
        "x": 460,
        "y": 80,
        "wires": [
            [
                "d05375c9.0abcc8"
            ]
        ]
    },
    {
        "id": "d05375c9.0abcc8",
        "type": "function",
        "z": "67565b43.7eac14",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"09_Accessoires\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 80,
        "wires": [
            [
                "36b8cfdf.8ca5c"
            ]
        ]
    },
    {
        "id": "36b8cfdf.8ca5c",
        "type": "json",
        "z": "67565b43.7eac14",
        "name": "to json",
        "pretty": true,
        "x": 730,
        "y": 80,
        "wires": [
            [
                "d06c6c6d.3edd9"
            ]
        ]
    },
    {
        "id": "d06c6c6d.3edd9",
        "type": "file",
        "z": "67565b43.7eac14",
        "name": "09_Accessoires.json",
        "filename": "./../viseo-bot-project/data/flow/master/09_Accessoires.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 900,
        "y": 80,
        "wires": []
    },
    {
        "id": "c5a8ec47.32d06",
        "type": "comment",
        "z": "67565b43.7eac14",
        "name": "sauvegarde du flow pour exportation ou modeur",
        "info": "",
        "x": 240,
        "y": 40,
        "wires": []
    },
    {
        "id": "3554f2d.947250e",
        "type": "start-up-trigger",
        "z": "56fdf72f.48c0d8",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "72ef053f.45338c"
            ]
        ]
    },
    {
        "id": "72ef053f.45338c",
        "type": "trigger",
        "z": "56fdf72f.48c0d8",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 340,
        "y": 140,
        "wires": [
            [
                "73791406.13548c",
                "e9116fed.ee67e",
                "fb1c04b.30ff2f8"
            ]
        ]
    },
    {
        "id": "73791406.13548c",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 280,
        "wires": [
            [
                "e7ff7fcc.eadcc"
            ]
        ]
    },
    {
        "id": "e7ff7fcc.eadcc",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 280,
        "wires": [
            [
                "f7668457.4e16d8"
            ]
        ]
    },
    {
        "id": "5751ec1b.4d5764",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 280,
        "wires": [
            [
                "ba38f419.a99068",
                "7ef701e7.a18a5"
            ]
        ]
    },
    {
        "id": "61dcc82c.30e648",
        "type": "comment",
        "z": "56fdf72f.48c0d8",
        "name": "démarrage vaisseau",
        "info": "\n\n",
        "x": 130,
        "y": 240,
        "wires": []
    },
    {
        "id": "f7668457.4e16d8",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "ready to fly",
        "func": "let accept={}\nlet reject={}\nlet search=[]\nsearch.push(\"ready_to_fly\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 570,
        "y": 280,
        "wires": [
            [
                "5751ec1b.4d5764"
            ],
            []
        ]
    },
    {
        "id": "ba38f419.a99068",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "ng_sfx ready_to_fly",
        "func": "let sound_effect=[];\nlet track_id='ready_to_fly';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 300,
        "wires": [
            [
                "dcf4284e.69e848"
            ]
        ]
    },
    {
        "id": "dcf4284e.69e848",
        "type": "exec",
        "z": "56fdf72f.48c0d8",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1550,
        "y": 280,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e5206ba2.c75178",
        "type": "comment",
        "z": "56fdf72f.48c0d8",
        "name": "moteur",
        "info": "\n\n",
        "x": 90,
        "y": 560,
        "wires": []
    },
    {
        "id": "269ae257.4b411e",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "démare moteur",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"start_engine\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n           if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 580,
        "y": 600,
        "wires": [
            [
                "f78d1849.81f8c8"
            ],
            []
        ]
    },
    {
        "id": "8f82ea98.e08288",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "coupe les moteurs",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"cut_engine\")\n\t\t\t\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 590,
        "y": 640,
        "wires": [
            [
                "1b03df6a.173d01"
            ],
            []
        ]
    },
    {
        "id": "4a620476.762a6c",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "ng_sfx engine_on",
        "func": "let sound_effect=[];\nlet track_id='engine_on';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 600,
        "wires": [
            [
                "e80ef79d.984228"
            ]
        ]
    },
    {
        "id": "6cacc808.613ba8",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "ng_sfx engine_off",
        "func": "let sound_effect=[];\nlet track_id='engine_off';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 640,
        "wires": [
            [
                "e80ef79d.984228"
            ]
        ]
    },
    {
        "id": "e80ef79d.984228",
        "type": "exec",
        "z": "56fdf72f.48c0d8",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1550,
        "y": 640,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "c12b565a.5a97c8",
        "type": "comment",
        "z": "56fdf72f.48c0d8",
        "name": "générateur / energie",
        "info": "\n\n",
        "x": 130,
        "y": 400,
        "wires": []
    },
    {
        "id": "ee98cd78.e3c7f",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "démare gen",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"start_gen\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 570,
        "y": 440,
        "wires": [
            [
                "8b260395.42953"
            ],
            []
        ]
    },
    {
        "id": "b6a2749e.ecdc08",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "coupe les générateur",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"cut_gen\")\n\n\t\t\t\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 600,
        "y": 480,
        "wires": [
            [
                "5817b0a7.62f5"
            ],
            []
        ]
    },
    {
        "id": "47335c49.c88344",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "ng_sfx gen_off",
        "func": "let sound_effect=[];\nlet track_id='gen_off';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1220,
        "y": 480,
        "wires": [
            [
                "99405bed.c82248"
            ]
        ]
    },
    {
        "id": "e0dd9c22.b8bab",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "ng_sfx gen_on",
        "func": "let sound_effect=[];\nlet track_id='gen_on';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1220,
        "y": 440,
        "wires": [
            [
                "99405bed.c82248"
            ]
        ]
    },
    {
        "id": "99405bed.c82248",
        "type": "exec",
        "z": "56fdf72f.48c0d8",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1550,
        "y": 460,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e9116fed.ee67e",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 440,
        "wires": [
            [
                "15eba8f7.1eaf97"
            ]
        ]
    },
    {
        "id": "15eba8f7.1eaf97",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 440,
        "wires": [
            [
                "ee98cd78.e3c7f",
                "b6a2749e.ecdc08"
            ]
        ]
    },
    {
        "id": "fb1c04b.30ff2f8",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 600,
        "wires": [
            [
                "c7f26bee.ab3a18"
            ]
        ]
    },
    {
        "id": "c7f26bee.ab3a18",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 600,
        "wires": [
            [
                "269ae257.4b411e",
                "8f82ea98.e08288"
            ]
        ]
    },
    {
        "id": "8b260395.42953",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 440,
        "wires": [
            [
                "e0dd9c22.b8bab",
                "a63e5e72.864e2"
            ]
        ]
    },
    {
        "id": "5817b0a7.62f5",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 480,
        "wires": [
            [
                "47335c49.c88344",
                "cc7cb7e0.a06948"
            ]
        ]
    },
    {
        "id": "f78d1849.81f8c8",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 600,
        "wires": [
            [
                "4a620476.762a6c",
                "81a530cf.b3f96"
            ]
        ]
    },
    {
        "id": "1b03df6a.173d01",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 640,
        "wires": [
            [
                "6cacc808.613ba8",
                "a15fff42.fc755"
            ]
        ]
    },
    {
        "id": "7ef701e7.a18a5",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "keybinding_auto  v_flightready",
        "func": "let keybinding=global.get('v_flightready');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1270,
        "y": 260,
        "wires": [
            [
                "dcf4284e.69e848"
            ]
        ]
    },
    {
        "id": "a63e5e72.864e2",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "keybinding_auto v_power_set_on",
        "func": "let keybinding=global.get('v_power_set_on');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1280,
        "y": 400,
        "wires": [
            [
                "99405bed.c82248"
            ]
        ]
    },
    {
        "id": "cc7cb7e0.a06948",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "keybinding_auto v_power_set_off",
        "func": "let keybinding=global.get('v_power_set_off');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1280,
        "y": 520,
        "wires": [
            [
                "99405bed.c82248"
            ]
        ]
    },
    {
        "id": "81a530cf.b3f96",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "keybinding_auto v_power_set_thrusters_on",
        "func": "let keybinding=global.get('v_power_set_thrusters_on');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1310,
        "y": 560,
        "wires": [
            [
                "e80ef79d.984228"
            ]
        ]
    },
    {
        "id": "a15fff42.fc755",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "keybinding_auto v_power_set_thrusters_off",
        "func": "let keybinding=global.get('v_power_set_thrusters_off');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1310,
        "y": 680,
        "wires": [
            [
                "e80ef79d.984228"
            ]
        ]
    },
    {
        "id": "e94703ce.1918f",
        "type": "inject",
        "z": "56fdf72f.48c0d8",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 80,
        "wires": [
            [
                "3bba976b.ee65c8"
            ]
        ]
    },
    {
        "id": "3bba976b.ee65c8",
        "type": "file in",
        "z": "56fdf72f.48c0d8",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "f34e5bc.82fbea8"
            ]
        ]
    },
    {
        "id": "f34e5bc.82fbea8",
        "type": "json",
        "z": "56fdf72f.48c0d8",
        "name": "from json",
        "pretty": false,
        "x": 440,
        "y": 80,
        "wires": [
            [
                "83c9196f.0b1ad8"
            ]
        ]
    },
    {
        "id": "83c9196f.0b1ad8",
        "type": "function",
        "z": "56fdf72f.48c0d8",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"10_Démarrage_coupure\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 80,
        "wires": [
            [
                "e05c181b.9484d8"
            ]
        ]
    },
    {
        "id": "e05c181b.9484d8",
        "type": "json",
        "z": "56fdf72f.48c0d8",
        "name": "to json",
        "pretty": true,
        "x": 710,
        "y": 80,
        "wires": [
            [
                "45156359.c4821c"
            ]
        ]
    },
    {
        "id": "45156359.c4821c",
        "type": "file",
        "z": "56fdf72f.48c0d8",
        "name": "10_Démarrage_coupure",
        "filename": "./../viseo-bot-project/data/flow/master/10_Démarrage_coupure.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 890,
        "y": 80,
        "wires": []
    },
    {
        "id": "425383ce.f300ec",
        "type": "comment",
        "z": "56fdf72f.48c0d8",
        "name": "sauvegarde du flow pour exportation ou modeur",
        "info": "",
        "x": 220,
        "y": 40,
        "wires": []
    },
    {
        "id": "ef96f804.385b68",
        "type": "comment",
        "z": "f07cdeb.340a32",
        "name": "VTOL",
        "info": "\n\n",
        "x": 110,
        "y": 220,
        "wires": []
    },
    {
        "id": "8385ce3c.11bff",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "Activer VTOL",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"open_vtol\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            //console.log(\"ask : \"+ask)\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 590,
        "y": 260,
        "wires": [
            [
                "bc99910c.3c755"
            ],
            []
        ]
    },
    {
        "id": "b4f267b2.0ddcd8",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "Désactiver VTOL",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"close_vtol\")\n\t\t\t\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            //console.log(\"ask : \"+ask)\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 300,
        "wires": [
            [
                "1f5740f8.e3d5df"
            ],
            []
        ]
    },
    {
        "id": "25dd3f61.30e58",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "ng_sfx VTOL_open",
        "func": "let sound_effect=[];\nlet track_id='VTOL_open';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1310,
        "y": 220,
        "wires": [
            [
                "ef108c64.6eb72"
            ]
        ]
    },
    {
        "id": "f8e33e78.8e32c",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "ng_sfx VTOL_close",
        "func": "let sound_effect=[];\nlet track_id='VTOL_close';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1310,
        "y": 340,
        "wires": [
            [
                "ef108c64.6eb72"
            ]
        ]
    },
    {
        "id": "ef108c64.6eb72",
        "type": "exec",
        "z": "f07cdeb.340a32",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1630,
        "y": 280,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "b8fb3166.692d6",
        "type": "start-up-trigger",
        "z": "f07cdeb.340a32",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "cb797124.e24a8"
            ]
        ]
    },
    {
        "id": "cb797124.e24a8",
        "type": "trigger",
        "z": "f07cdeb.340a32",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 360,
        "y": 140,
        "wires": [
            [
                "4de78e7d.7e08",
                "774a745c.73980c",
                "7c499da5.dc22b4"
            ]
        ]
    },
    {
        "id": "4de78e7d.7e08",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 180,
        "y": 260,
        "wires": [
            [
                "f2f6dae8.ddd6f8"
            ]
        ]
    },
    {
        "id": "f2f6dae8.ddd6f8",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 260,
        "wires": [
            [
                "8385ce3c.11bff",
                "b4f267b2.0ddcd8"
            ]
        ]
    },
    {
        "id": "bc99910c.3c755",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 960,
        "y": 260,
        "wires": [
            [
                "25dd3f61.30e58",
                "da820456.54ec58"
            ]
        ]
    },
    {
        "id": "1f5740f8.e3d5df",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 960,
        "y": 300,
        "wires": [
            [
                "f8e33e78.8e32c",
                "e1110315.f80cf"
            ]
        ]
    },
    {
        "id": "d74f9837.dd1308",
        "type": "comment",
        "z": "f07cdeb.340a32",
        "name": "train",
        "info": "\n\n",
        "x": 110,
        "y": 380,
        "wires": []
    },
    {
        "id": "7ee107cc.743e08",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "Sortir le train",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"open_gear\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 480,
        "wires": [
            [
                "9c41dd3.7722e2"
            ],
            []
        ]
    },
    {
        "id": "b37a5835.f5aba8",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "ferme le train",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"close_gear\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 520,
        "wires": [
            [
                "a31af46b.6db758"
            ],
            []
        ]
    },
    {
        "id": "d8df1ea3.44cb",
        "type": "exec",
        "z": "f07cdeb.340a32",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1630,
        "y": 500,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e8f40bb8.6a5e58",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "ng_sfx open_gear",
        "func": "let sound_effect=[];\nlet track_id='open_gear';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1310,
        "y": 440,
        "wires": [
            [
                "d8df1ea3.44cb"
            ]
        ]
    },
    {
        "id": "9e18fd5c.c9c7d",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "ng_sfx close_gear",
        "func": "let sound_effect=[];\nlet track_id='close_gear';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1310,
        "y": 560,
        "wires": [
            [
                "d8df1ea3.44cb"
            ]
        ]
    },
    {
        "id": "9c41dd3.7722e2",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 480,
        "wires": [
            [
                "e8f40bb8.6a5e58",
                "7f4c4186.fcda1"
            ]
        ]
    },
    {
        "id": "a31af46b.6db758",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 520,
        "wires": [
            [
                "9e18fd5c.c9c7d",
                "ce67099e.63e8c8"
            ]
        ]
    },
    {
        "id": "774a745c.73980c",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 180,
        "y": 480,
        "wires": [
            [
                "89cda2af.4d96f"
            ]
        ]
    },
    {
        "id": "89cda2af.4d96f",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 480,
        "wires": [
            [
                "7ee107cc.743e08",
                "b37a5835.f5aba8"
            ]
        ]
    },
    {
        "id": "da820456.54ec58",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "keybinding_auto v_toggle_vtol",
        "func": "let keybinding=global.get('v_toggle_vtol');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1310,
        "y": 260,
        "wires": [
            [
                "ef108c64.6eb72"
            ]
        ]
    },
    {
        "id": "e1110315.f80cf",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "keybinding_auto v_toggle_vtol",
        "func": "let keybinding=global.get('v_toggle_vtol');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1310,
        "y": 300,
        "wires": [
            [
                "ef108c64.6eb72"
            ]
        ]
    },
    {
        "id": "7f4c4186.fcda1",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "keybinding_auto v_toggle_landing_system",
        "func": "let keybinding=global.get('v_toggle_landing_system');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1350,
        "y": 480,
        "wires": [
            [
                "d8df1ea3.44cb"
            ]
        ]
    },
    {
        "id": "ce67099e.63e8c8",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "keybinding_auto v_toggle_landing_system",
        "func": "let keybinding=global.get('v_toggle_landing_system');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1350,
        "y": 520,
        "wires": [
            [
                "d8df1ea3.44cb"
            ]
        ]
    },
    {
        "id": "7c499da5.dc22b4",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 180,
        "y": 660,
        "wires": [
            [
                "d5ccaed6.e8f19"
            ]
        ]
    },
    {
        "id": "d5ccaed6.e8f19",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 660,
        "wires": [
            [
                "b3a0b1c2.bf779",
                "4966461.c254eb8"
            ]
        ]
    },
    {
        "id": "b3a0b1c2.bf779",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "Vol en découplé",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"coupled_off\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 620,
        "y": 660,
        "wires": [
            [
                "e73eeba5.960118"
            ],
            []
        ]
    },
    {
        "id": "4966461.c254eb8",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "Vol en couplé",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"coupled_on\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 620,
        "y": 700,
        "wires": [
            [
                "a38452eb.b64a8"
            ],
            []
        ]
    },
    {
        "id": "e73eeba5.960118",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 660,
        "wires": [
            [
                "106129.f70a2ed7",
                "b3eee790.867e28"
            ]
        ]
    },
    {
        "id": "a38452eb.b64a8",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 700,
        "wires": [
            [
                "bda7342a.1701a8",
                "35ce4583.3b873a"
            ]
        ]
    },
    {
        "id": "106129.f70a2ed7",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "keybinding_auto v_toggle_landing_system",
        "func": "let keybinding=global.get('v_ifcs_toggle_vector_decoupling');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1350,
        "y": 660,
        "wires": [
            [
                "3e71cdac.66ae82"
            ]
        ]
    },
    {
        "id": "bda7342a.1701a8",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "keybinding_auto v_toggle_landing_system",
        "func": "let keybinding=global.get('v_ifcs_toggle_vector_decoupling');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1350,
        "y": 700,
        "wires": [
            [
                "3e71cdac.66ae82"
            ]
        ]
    },
    {
        "id": "3e71cdac.66ae82",
        "type": "exec",
        "z": "f07cdeb.340a32",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1630,
        "y": 680,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "b3eee790.867e28",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "ng_sfx vol_couplé",
        "func": "let sound_effect=[];\nlet track_id='vol_couplé';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1310,
        "y": 620,
        "wires": [
            [
                "3e71cdac.66ae82"
            ]
        ]
    },
    {
        "id": "35ce4583.3b873a",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "ng_sfx vol_découplé",
        "func": "let sound_effect=[];\nlet track_id='vol_découplé';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1320,
        "y": 740,
        "wires": [
            [
                "3e71cdac.66ae82"
            ]
        ]
    },
    {
        "id": "4880c1e9.5fba4",
        "type": "inject",
        "z": "f07cdeb.340a32",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 170,
        "y": 80,
        "wires": [
            [
                "8590576d.f89718"
            ]
        ]
    },
    {
        "id": "8590576d.f89718",
        "type": "file in",
        "z": "f07cdeb.340a32",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 330,
        "y": 80,
        "wires": [
            [
                "2a91bfcf.d80e"
            ]
        ]
    },
    {
        "id": "2a91bfcf.d80e",
        "type": "json",
        "z": "f07cdeb.340a32",
        "name": "from json",
        "pretty": false,
        "x": 460,
        "y": 80,
        "wires": [
            [
                "e9f61e8e.054d2"
            ]
        ]
    },
    {
        "id": "e9f61e8e.054d2",
        "type": "function",
        "z": "f07cdeb.340a32",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"08_Train_VTOL _vol_découplé\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 80,
        "wires": [
            [
                "3169f81.dfa7f08"
            ]
        ]
    },
    {
        "id": "3169f81.dfa7f08",
        "type": "json",
        "z": "f07cdeb.340a32",
        "name": "to json",
        "pretty": true,
        "x": 730,
        "y": 80,
        "wires": [
            [
                "ed46060f.609ed8"
            ]
        ]
    },
    {
        "id": "ed46060f.609ed8",
        "type": "file",
        "z": "f07cdeb.340a32",
        "name": "08_Train_VTOL _vol_découplé.json",
        "filename": "./../viseo-bot-project/data/flow/master/08_Train_VTOL _vol_découplé.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 940,
        "y": 80,
        "wires": []
    },
    {
        "id": "cd64e446.9ab0c8",
        "type": "comment",
        "z": "f07cdeb.340a32",
        "name": "sauvegarde du flow pour exportation ou modeur",
        "info": "",
        "x": 240,
        "y": 40,
        "wires": []
    },
    {
        "id": "2bee05d9.90245a",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "ng_sfx base",
        "func": "let sound_effect=[];\nlet track_id='base';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 240,
        "wires": [
            [
                "334cc213.2801ee"
            ]
        ]
    },
    {
        "id": "118f7da4.6794b2",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "appelle station/base/pad/hangar",
        "func": "let accept={}\nlet reject={}\nlet search=[];\n\nsearch.push('open_hangar');\nlet find=false;\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask);\n                find=true;\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 630,
        "y": 240,
        "wires": [
            [
                "edbed70b.dc70d8"
            ],
            []
        ]
    },
    {
        "id": "334cc213.2801ee",
        "type": "exec",
        "z": "ff26b391.7439",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1590,
        "y": 240,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "4b6634d3.ffcddc",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "autorisation décolage",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"take_off\")\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n\n",
        "outputs": "2",
        "noerr": 0,
        "x": 600,
        "y": 280,
        "wires": [
            [
                "bd4a71b0.9bdf1"
            ],
            []
        ]
    },
    {
        "id": "2acb80a6.97c94",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "ng_sfx clear_take_off",
        "func": "let sound_effect=[];\nlet track_id='clear_take_off';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 280,
        "wires": [
            [
                "334cc213.2801ee"
            ]
        ]
    },
    {
        "id": "b3cea493.67a618",
        "type": "start-up-trigger",
        "z": "ff26b391.7439",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "79cda2c3.75953c"
            ]
        ]
    },
    {
        "id": "79cda2c3.75953c",
        "type": "trigger",
        "z": "ff26b391.7439",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 340,
        "y": 120,
        "wires": [
            [
                "c7ccf8d.f2dcb08",
                "66662743.148b38"
            ]
        ]
    },
    {
        "id": "c7ccf8d.f2dcb08",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\n\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 240,
        "wires": [
            [
                "2bcdb6bd.cdf49a"
            ]
        ]
    },
    {
        "id": "2bcdb6bd.cdf49a",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 240,
        "wires": [
            [
                "118f7da4.6794b2",
                "4b6634d3.ffcddc",
                "33432ed2.fea8f2"
            ]
        ]
    },
    {
        "id": "6fc3317d.09dd1",
        "type": "comment",
        "z": "ff26b391.7439",
        "name": "appel station",
        "info": "\n\n",
        "x": 110,
        "y": 200,
        "wires": []
    },
    {
        "id": "edbed70b.dc70d8",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 240,
        "wires": [
            [
                "2bee05d9.90245a",
                "d426e851.6ed878"
            ]
        ]
    },
    {
        "id": "bd4a71b0.9bdf1",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 280,
        "wires": [
            [
                "2acb80a6.97c94",
                "d426e851.6ed878"
            ]
        ]
    },
    {
        "id": "79cd41ca.ac15c",
        "type": "comment",
        "z": "ff26b391.7439",
        "name": "Discord",
        "info": "\n\n",
        "x": 90,
        "y": 400,
        "wires": []
    },
    {
        "id": "327e3340.c11ecc",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "envoie mon discord",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"my_discord\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n           if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 590,
        "y": 480,
        "wires": [
            [
                "a0321f73.675f5"
            ],
            []
        ]
    },
    {
        "id": "7719e679.de48c8",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "envoie invite",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"corpo_discord\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n           if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 570,
        "y": 440,
        "wires": [
            [
                "f1d81939.8d61a8"
            ],
            []
        ]
    },
    {
        "id": "29740ed8.fe7e52",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 480,
        "wires": [
            [
                "f007e95c.e45598"
            ]
        ]
    },
    {
        "id": "f007e95c.e45598",
        "type": "exec",
        "z": "ff26b391.7439",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1590,
        "y": 480,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "120de197.eac73e",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "keybinding_send_text",
        "func": "msg.payload=global.get('a_k_send_path')+\" \"+global.get('my_discord')\n\nreturn msg\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1220,
        "y": 440,
        "wires": [
            [
                "f007e95c.e45598"
            ]
        ]
    },
    {
        "id": "4725334b.176fcc",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "keybinding_send_text",
        "func": "msg.payload=global.get('a_k_send_path')+\" \"+global.get('my_id_discord')\n\nreturn msg\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1220,
        "y": 520,
        "wires": [
            [
                "f007e95c.e45598"
            ]
        ]
    },
    {
        "id": "66662743.148b38",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 440,
        "wires": [
            [
                "850e7148.195ff"
            ]
        ]
    },
    {
        "id": "850e7148.195ff",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 440,
        "wires": [
            [
                "7719e679.de48c8",
                "327e3340.c11ecc"
            ]
        ]
    },
    {
        "id": "f1d81939.8d61a8",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 440,
        "wires": [
            [
                "120de197.eac73e",
                "29740ed8.fe7e52"
            ]
        ]
    },
    {
        "id": "a0321f73.675f5",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 480,
        "wires": [
            [
                "4725334b.176fcc",
                "29740ed8.fe7e52"
            ]
        ]
    },
    {
        "id": "d426e851.6ed878",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "keybinding_auto v_atc_request",
        "func": "let keybinding=global.get('v_atc_request');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1290,
        "y": 360,
        "wires": [
            [
                "334cc213.2801ee"
            ]
        ]
    },
    {
        "id": "33432ed2.fea8f2",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "autorisation atterissage",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"landing\")\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n\n",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 320,
        "wires": [
            [
                "36f738b3.84ace8"
            ],
            []
        ]
    },
    {
        "id": "36f738b3.84ace8",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 320,
        "wires": [
            [
                "d426e851.6ed878",
                "d71ce4c9.131178"
            ]
        ]
    },
    {
        "id": "d71ce4c9.131178",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "ng_sfx clear_landing",
        "func": "let sound_effect=[];\nlet track_id='clear_landing';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nconsole.log(\"taille de la banque\")\nconsole.log(sound_effect.length)\nconsole.log(sound_effect)\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 320,
        "wires": [
            [
                "334cc213.2801ee"
            ]
        ]
    },
    {
        "id": "b9b2d63e.037f98",
        "type": "inject",
        "z": "ff26b391.7439",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 60,
        "wires": [
            [
                "53c82312.29087c"
            ]
        ]
    },
    {
        "id": "53c82312.29087c",
        "type": "file in",
        "z": "ff26b391.7439",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 310,
        "y": 60,
        "wires": [
            [
                "c1843458.3be468"
            ]
        ]
    },
    {
        "id": "c1843458.3be468",
        "type": "json",
        "z": "ff26b391.7439",
        "name": "from json",
        "pretty": false,
        "x": 440,
        "y": 60,
        "wires": [
            [
                "1f7d4905.a84197"
            ]
        ]
    },
    {
        "id": "1f7d4905.a84197",
        "type": "function",
        "z": "ff26b391.7439",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"07_Communication\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 60,
        "wires": [
            [
                "d40c9359.5207d"
            ]
        ]
    },
    {
        "id": "d40c9359.5207d",
        "type": "json",
        "z": "ff26b391.7439",
        "name": "to json",
        "pretty": true,
        "x": 710,
        "y": 60,
        "wires": [
            [
                "b3054cf1.36e0f"
            ]
        ]
    },
    {
        "id": "b3054cf1.36e0f",
        "type": "file",
        "z": "ff26b391.7439",
        "name": "07_Communication.json",
        "filename": "./../viseo-bot-project/data/flow/master/07_Communication.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 890,
        "y": 60,
        "wires": []
    },
    {
        "id": "1e85bcf3.fa1c23",
        "type": "comment",
        "z": "ff26b391.7439",
        "name": "sauvegarde du flow pour exportation ou modeur",
        "info": "",
        "x": 220,
        "y": 20,
        "wires": []
    },
    {
        "id": "1efdac03.ee3374",
        "type": "start-up-trigger",
        "z": "1652babe.60d185",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "5fa4cf18.d3342"
            ]
        ]
    },
    {
        "id": "5fa4cf18.d3342",
        "type": "trigger",
        "z": "1652babe.60d185",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 340,
        "y": 120,
        "wires": [
            [
                "19f506b2.3e9519",
                "b5545dc8.06b5e"
            ]
        ]
    },
    {
        "id": "19f506b2.3e9519",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 260,
        "wires": [
            [
                "271e82c3.77b1fe"
            ]
        ]
    },
    {
        "id": "271e82c3.77b1fe",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 260,
        "wires": [
            [
                "835a0ff.14ca8f",
                "175b972.f102169"
            ]
        ]
    },
    {
        "id": "b1b97ea0.9a195",
        "type": "comment",
        "z": "1652babe.60d185",
        "name": "starmap",
        "info": "\n\n",
        "x": 100,
        "y": 220,
        "wires": []
    },
    {
        "id": "835a0ff.14ca8f",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "ouverture starmap",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"open_starmap\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            //console.log(\"ask : \"+ask)\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 590,
        "y": 260,
        "wires": [
            [
                "b17bda0d.723538"
            ],
            []
        ]
    },
    {
        "id": "175b972.f102169",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "fermeture starmap",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"close_starmap\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            //console.log(\"ask : \"+ask)\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 590,
        "y": 300,
        "wires": [
            [
                "15ba057d.2c6a3b"
            ],
            []
        ]
    },
    {
        "id": "a1258948.71abd8",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "ng_sfx starmap_on",
        "func": "let sound_effect=[];\nlet track_id='starmap_on';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 240,
        "wires": [
            [
                "de2869d2.a60268"
            ]
        ]
    },
    {
        "id": "964fee66.d08f5",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "ng_sfx starmap_off",
        "func": "let sound_effect=[];\nlet track_id='starmap_off';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 320,
        "wires": [
            [
                "de2869d2.a60268"
            ]
        ]
    },
    {
        "id": "de2869d2.a60268",
        "type": "exec",
        "z": "1652babe.60d185",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1670,
        "y": 280,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "b17bda0d.723538",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 260,
        "wires": [
            [
                "a1258948.71abd8",
                "2162ad17.a1c082"
            ]
        ]
    },
    {
        "id": "15ba057d.2c6a3b",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 300,
        "wires": [
            [
                "964fee66.d08f5",
                "2162ad17.a1c082"
            ]
        ]
    },
    {
        "id": "68584376.87feac",
        "type": "comment",
        "z": "1652babe.60d185",
        "name": "Saut quantique",
        "info": "\n\n",
        "x": 120,
        "y": 360,
        "wires": []
    },
    {
        "id": "969b60f9.e94ad",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "lancement saut quantiqe",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"launch_jump_q\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            //console.log(\"ask : \"+ask)\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 560,
        "wires": [
            [
                "1ad89d21.bed863"
            ],
            []
        ]
    },
    {
        "id": "c5312b3e.47e388",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "ng_sfx quantum_off",
        "func": "let sound_effect=[];\nlet track_id='quantum_off';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 480,
        "wires": [
            [
                "62f49ca6.a36f54"
            ]
        ]
    },
    {
        "id": "33af76c0.d67a4a",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "ng_sfx quantum_on",
        "func": "let sound_effect=[];\nlet track_id='quantum_on';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 440,
        "wires": [
            [
                "62f49ca6.a36f54"
            ]
        ]
    },
    {
        "id": "62f49ca6.a36f54",
        "type": "exec",
        "z": "1652babe.60d185",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1670,
        "y": 520,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "b119e58e.ec8248",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "démare moteur quantiqe",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"quantum_on\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            //console.log(\"ask : \"+ask)\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 440,
        "wires": [
            [
                "b6fb1bf1.acdd98"
            ],
            []
        ]
    },
    {
        "id": "4afe6f32.dc011",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "coupe moteur quantique",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"quantum_off\")\n\t\t\t\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            //console.log(\"ask : \"+ask)\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 480,
        "wires": [
            [
                "f215d067.258fc"
            ],
            []
        ]
    },
    {
        "id": "f6681c1b.296e6",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "ng_sfx quantum_jump",
        "func": "let sound_effect=[];\nlet track_id='quantum_jump';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1240,
        "y": 560,
        "wires": [
            [
                "62f49ca6.a36f54"
            ]
        ]
    },
    {
        "id": "b5545dc8.06b5e",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 400,
        "wires": [
            [
                "e64f87e4.d58358"
            ]
        ]
    },
    {
        "id": "e64f87e4.d58358",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 400,
        "wires": [
            [
                "b119e58e.ec8248",
                "4afe6f32.dc011",
                "969b60f9.e94ad"
            ]
        ]
    },
    {
        "id": "1ad89d21.bed863",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 560,
        "wires": [
            [
                "f6681c1b.296e6",
                "d423b2f9.534c4"
            ]
        ]
    },
    {
        "id": "b6fb1bf1.acdd98",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 440,
        "wires": [
            [
                "33af76c0.d67a4a",
                "a37cf22d.1910e"
            ]
        ]
    },
    {
        "id": "f215d067.258fc",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 480,
        "wires": [
            [
                "c5312b3e.47e388",
                "d498e97.32c2318"
            ]
        ]
    },
    {
        "id": "2162ad17.a1c082",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "keybinding_auto v_starmap",
        "func": "let keybinding=global.get('v_starmap');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1260,
        "y": 280,
        "wires": [
            [
                "de2869d2.a60268"
            ]
        ]
    },
    {
        "id": "a37cf22d.1910e",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "keybinding_auto v_toggle_quantum_mode",
        "func": "let keybinding=global.get('v_toggle_quantum_mode');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1310,
        "y": 400,
        "wires": [
            [
                "62f49ca6.a36f54"
            ]
        ]
    },
    {
        "id": "d498e97.32c2318",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "keybinding_auto v_toggle_quantum_mode",
        "func": "let keybinding=global.get('v_toggle_quantum_mode');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1310,
        "y": 520,
        "wires": [
            [
                "62f49ca6.a36f54"
            ]
        ]
    },
    {
        "id": "d423b2f9.534c4",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "keybinding_autov_toggle_qdrive_engagement",
        "func": "let keybinding=global.get('v_toggle_qdrive_engagement');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1320,
        "y": 600,
        "wires": [
            [
                "62f49ca6.a36f54"
            ]
        ]
    },
    {
        "id": "94af1e57.f72e3",
        "type": "inject",
        "z": "1652babe.60d185",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 60,
        "wires": [
            [
                "7463d5f8.b1811c"
            ]
        ]
    },
    {
        "id": "7463d5f8.b1811c",
        "type": "file in",
        "z": "1652babe.60d185",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 310,
        "y": 60,
        "wires": [
            [
                "a150e883.9755b8"
            ]
        ]
    },
    {
        "id": "a150e883.9755b8",
        "type": "json",
        "z": "1652babe.60d185",
        "name": "from json",
        "pretty": false,
        "x": 440,
        "y": 60,
        "wires": [
            [
                "7031194a.946be8"
            ]
        ]
    },
    {
        "id": "7031194a.946be8",
        "type": "function",
        "z": "1652babe.60d185",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"06_Starmap_qt\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 60,
        "wires": [
            [
                "a33cbee5.17124"
            ]
        ]
    },
    {
        "id": "a33cbee5.17124",
        "type": "json",
        "z": "1652babe.60d185",
        "name": "to json",
        "pretty": true,
        "x": 710,
        "y": 60,
        "wires": [
            [
                "af02f0f8.6f7b"
            ]
        ]
    },
    {
        "id": "af02f0f8.6f7b",
        "type": "file",
        "z": "1652babe.60d185",
        "name": "06_Starmap_qt.json",
        "filename": "./../viseo-bot-project/data/flow/master/06_Starmap_qt.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 900,
        "y": 60,
        "wires": []
    },
    {
        "id": "a36b855f.082f58",
        "type": "comment",
        "z": "1652babe.60d185",
        "name": "sauvegarde du flow pour exportation ou modeur",
        "info": "",
        "x": 220,
        "y": 20,
        "wires": []
    },
    {
        "id": "f15b0ad0.352538",
        "type": "comment",
        "z": "33baa4f7.ce6a9c",
        "name": "Triangle de puissance (totalité)",
        "info": "\n\n",
        "x": 170,
        "y": 240,
        "wires": []
    },
    {
        "id": "d0ba4fa9.d585e",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "full bouclier",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"tri_full_shields\")\n\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 570,
        "y": 280,
        "wires": [
            [
                "ce0e7ccf.227c8"
            ],
            []
        ]
    },
    {
        "id": "bb6ad335.5ba24",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "ng_sfx",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1170,
        "y": 320,
        "wires": [
            [
                "fbe88320.746c7"
            ]
        ]
    },
    {
        "id": "fbe88320.746c7",
        "type": "exec",
        "z": "33baa4f7.ce6a9c",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1610,
        "y": 600,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "a28d3fd0.83961",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "full engine",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"tri_full_engine\")\n\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 570,
        "y": 460,
        "wires": [
            [
                "868f813f.04e75"
            ],
            []
        ]
    },
    {
        "id": "ee3ad118.ec8e5",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1240,
        "y": 400,
        "wires": [
            [
                "fbe88320.746c7"
            ]
        ]
    },
    {
        "id": "97357ba6.e47c88",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1220,
        "y": 460,
        "wires": [
            [
                "fbe88320.746c7"
            ]
        ]
    },
    {
        "id": "938883d5.7aa31",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "center",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"tri_center\")\n\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 550,
        "y": 500,
        "wires": [
            [
                "47b5b62e.b4f5f8"
            ],
            []
        ]
    },
    {
        "id": "ba9bbb9e.fce8e8",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 540,
        "wires": [
            [
                "fbe88320.746c7"
            ]
        ]
    },
    {
        "id": "93f8e450.a7d2c8",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "full armes",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"tri_full_weapons\")\n\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 560,
        "y": 360,
        "wires": [
            [
                "d7c44a4a.c600b8"
            ],
            []
        ]
    },
    {
        "id": "7d4c66a8.e10f78",
        "type": "start-up-trigger",
        "z": "33baa4f7.ce6a9c",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "e5c49e16.fb12b"
            ]
        ]
    },
    {
        "id": "e5c49e16.fb12b",
        "type": "trigger",
        "z": "33baa4f7.ce6a9c",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 340,
        "y": 140,
        "wires": [
            [
                "468791bc.d7c36",
                "d21ce545.f07128"
            ]
        ]
    },
    {
        "id": "468791bc.d7c36",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 280,
        "wires": [
            [
                "81e7a445.c80d08"
            ]
        ]
    },
    {
        "id": "81e7a445.c80d08",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 280,
        "wires": [
            [
                "d0ba4fa9.d585e",
                "93f8e450.a7d2c8",
                "a28d3fd0.83961",
                "938883d5.7aa31"
            ]
        ]
    },
    {
        "id": "ce0e7ccf.227c8",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 280,
        "wires": [
            [
                "bb6ad335.5ba24",
                "808f0f32.54eab",
                "48a2156f.5a86dc"
            ]
        ]
    },
    {
        "id": "d7c44a4a.c600b8",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 360,
        "wires": [
            [
                "ee3ad118.ec8e5",
                "9c8fab54.e7a588",
                "3e35f9de.2f9416"
            ]
        ]
    },
    {
        "id": "868f813f.04e75",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 460,
        "wires": [
            [
                "97357ba6.e47c88",
                "3cf07d12.5e0882",
                "cf74660e.f275e8"
            ]
        ]
    },
    {
        "id": "47b5b62e.b4f5f8",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 500,
        "wires": [
            [
                "ba9bbb9e.fce8e8",
                "4e9adec1.703cf"
            ]
        ]
    },
    {
        "id": "1545a47d.32a3bc",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "partiel bouclier",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"tri_more_shield\")\n\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 580,
        "y": 640,
        "wires": [
            [
                "5189b257.28e4fc"
            ],
            []
        ]
    },
    {
        "id": "f8802e98.f04aa",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 620,
        "wires": [
            [
                "fbcda62c.14e678"
            ]
        ]
    },
    {
        "id": "fbcda62c.14e678",
        "type": "exec",
        "z": "33baa4f7.ce6a9c",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1610,
        "y": 720,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5d8e43f.b92b5bc",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "partiel engine",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"tri_more_engine\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 580,
        "y": 800,
        "wires": [
            [
                "60dacbc7.184c34"
            ],
            []
        ]
    },
    {
        "id": "a3d48fdb.ddd4c",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 700,
        "wires": [
            [
                "fbcda62c.14e678"
            ]
        ]
    },
    {
        "id": "68773380.24644c",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 780,
        "wires": [
            [
                "fbcda62c.14e678"
            ]
        ]
    },
    {
        "id": "d4d4d97d.c5b058",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "partiel armes",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"tri_more_weapons\")\n\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            //console.log(\"ask : \"+ask)\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 570,
        "y": 720,
        "wires": [
            [
                "d26fabd7.d890c8"
            ],
            []
        ]
    },
    {
        "id": "63835e64.6cbe5",
        "type": "comment",
        "z": "33baa4f7.ce6a9c",
        "name": "Triangle de puissance (partiel)",
        "info": "\n\n",
        "x": 160,
        "y": 580,
        "wires": []
    },
    {
        "id": "d21ce545.f07128",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 620,
        "wires": [
            [
                "4d89eff8.de8e5"
            ]
        ]
    },
    {
        "id": "4d89eff8.de8e5",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 620,
        "wires": [
            [
                "d4d4d97d.c5b058",
                "1545a47d.32a3bc",
                "5d8e43f.b92b5bc"
            ]
        ]
    },
    {
        "id": "5189b257.28e4fc",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 642.5,
        "wires": [
            [
                "f8802e98.f04aa",
                "fdc031f6.4f782"
            ]
        ]
    },
    {
        "id": "d26fabd7.d890c8",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 720,
        "wires": [
            [
                "a3d48fdb.ddd4c",
                "adc5ea0f.d9f8e8"
            ]
        ]
    },
    {
        "id": "60dacbc7.184c34",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 800,
        "wires": [
            [
                "68773380.24644c",
                "b01979c0.88faa8"
            ]
        ]
    },
    {
        "id": "808f0f32.54eab",
        "type": "loop",
        "z": "33baa4f7.ce6a9c",
        "name": "15 fois",
        "kind": "fcnt",
        "count": "15",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "enum",
        "enumerationType": "msg",
        "limit": "250",
        "loopPayload": "loop-orig",
        "finalPayload": "final-orig",
        "x": 1470,
        "y": 280,
        "wires": [
            [],
            [
                "48a2156f.5a86dc"
            ]
        ]
    },
    {
        "id": "48a2156f.5a86dc",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "keybinding_auto v_capacitor_assignment_shield_combined_increase_max",
        "func": "let keybinding=global.get('v_capacitor_assignment_shield_combined_increase_max');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1150,
        "y": 280,
        "wires": [
            [
                "808f0f32.54eab",
                "fbe88320.746c7"
            ]
        ]
    },
    {
        "id": "3e35f9de.2f9416",
        "type": "loop",
        "z": "33baa4f7.ce6a9c",
        "name": "15 fois",
        "kind": "fcnt",
        "count": "15",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "enum",
        "enumerationType": "msg",
        "limit": "250",
        "loopPayload": "loop-orig",
        "finalPayload": "final-orig",
        "x": 1470,
        "y": 360,
        "wires": [
            [],
            [
                "9c8fab54.e7a588"
            ]
        ]
    },
    {
        "id": "9c8fab54.e7a588",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "keybinding_auto v_capacitor_assignment_weapon_combined_increase_max",
        "func": "let keybinding=global.get('v_capacitor_assignment_weapon_combined_increase_max');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1150,
        "y": 360,
        "wires": [
            [
                "3e35f9de.2f9416",
                "fbe88320.746c7"
            ]
        ]
    },
    {
        "id": "cf74660e.f275e8",
        "type": "loop",
        "z": "33baa4f7.ce6a9c",
        "name": "15 fois",
        "kind": "fcnt",
        "count": "15",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "enum",
        "enumerationType": "msg",
        "limit": "250",
        "loopPayload": "loop-orig",
        "finalPayload": "final-orig",
        "x": 1510,
        "y": 420,
        "wires": [
            [],
            [
                "3cf07d12.5e0882"
            ]
        ]
    },
    {
        "id": "3cf07d12.5e0882",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "keybinding_auto v_capacitor_assignment_engine_combined_increase_max",
        "func": "let keybinding=global.get('v_capacitor_assignment_engine_combined_increase_max');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1190,
        "y": 420,
        "wires": [
            [
                "cf74660e.f275e8",
                "fbe88320.746c7"
            ]
        ]
    },
    {
        "id": "4e9adec1.703cf",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "keybinding_auto v_capacitor_assignment_reset",
        "func": "let keybinding=global.get('v_capacitor_assignment_reset');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1200,
        "y": 500,
        "wires": [
            [
                "fbe88320.746c7"
            ]
        ]
    },
    {
        "id": "fdc031f6.4f782",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "keybinding_auto v_capacitor_assignment_shield_combined_increase_max",
        "func": "let keybinding=global.get('v_capacitor_assignment_shield_combined_increase_max');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1150,
        "y": 660,
        "wires": [
            [
                "fbcda62c.14e678"
            ]
        ]
    },
    {
        "id": "adc5ea0f.d9f8e8",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "keybinding_auto v_capacitor_assignment_weapon_combined_increase_max",
        "func": "let keybinding=global.get('v_capacitor_assignment_weapon_combined_increase_max');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1150,
        "y": 740,
        "wires": [
            [
                "fbcda62c.14e678"
            ]
        ]
    },
    {
        "id": "b01979c0.88faa8",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "keybinding_auto v_capacitor_assignment_engine_combined_increase_max",
        "func": "let keybinding=global.get('v_capacitor_assignment_engine_combined_increase_max');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1150,
        "y": 820,
        "wires": [
            [
                "fbcda62c.14e678"
            ]
        ]
    },
    {
        "id": "4794b297.5827bc",
        "type": "inject",
        "z": "33baa4f7.ce6a9c",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 80,
        "wires": [
            [
                "3757455d.d824ea"
            ]
        ]
    },
    {
        "id": "3757455d.d824ea",
        "type": "file in",
        "z": "33baa4f7.ce6a9c",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "10a92ec1.c51991"
            ]
        ]
    },
    {
        "id": "10a92ec1.c51991",
        "type": "json",
        "z": "33baa4f7.ce6a9c",
        "name": "from json",
        "pretty": false,
        "x": 440,
        "y": 80,
        "wires": [
            [
                "9d209b76.20a588"
            ]
        ]
    },
    {
        "id": "9d209b76.20a588",
        "type": "function",
        "z": "33baa4f7.ce6a9c",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"04_T_Puissance\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 80,
        "wires": [
            [
                "708cf7fa.997c58"
            ]
        ]
    },
    {
        "id": "708cf7fa.997c58",
        "type": "json",
        "z": "33baa4f7.ce6a9c",
        "name": "to json",
        "pretty": true,
        "x": 710,
        "y": 80,
        "wires": [
            [
                "dc2b3263.32251"
            ]
        ]
    },
    {
        "id": "dc2b3263.32251",
        "type": "file",
        "z": "33baa4f7.ce6a9c",
        "name": "04_T_Puissance.json",
        "filename": "./../viseo-bot-project/data/flow/master/04_T_Puissance.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 880,
        "y": 80,
        "wires": []
    },
    {
        "id": "89bba64a.aeafb8",
        "type": "comment",
        "z": "33baa4f7.ce6a9c",
        "name": "sauvegarde du flow pour exportation ou modeur",
        "info": "",
        "x": 220,
        "y": 40,
        "wires": []
    },
    {
        "id": "64d4153.32907ec",
        "type": "start-up-trigger",
        "z": "c3cf5343.7b594",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "acd2e0db.408c8"
            ]
        ]
    },
    {
        "id": "acd2e0db.408c8",
        "type": "trigger",
        "z": "c3cf5343.7b594",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 340,
        "y": 140,
        "wires": [
            [
                "fa04d2a1.3c47c",
                "9890f970.b6ff38",
                "4843f060.087ba"
            ]
        ]
    },
    {
        "id": "fa04d2a1.3c47c",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 240,
        "wires": [
            [
                "dcf58114.6a3af"
            ]
        ]
    },
    {
        "id": "dcf58114.6a3af",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 240,
        "wires": [
            [
                "39758993.688b86",
                "d6604d4f.7536b"
            ]
        ]
    },
    {
        "id": "2cd17015.13906",
        "type": "comment",
        "z": "c3cf5343.7b594",
        "name": "verrouillage et dévérouillage",
        "info": "\n\n",
        "x": 160,
        "y": 200,
        "wires": []
    },
    {
        "id": "39758993.688b86",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "verrouillage",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"target_lock\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            //console.log(\"ask : \"+ask)\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 570,
        "y": 240,
        "wires": [
            [
                "3cec869c.fe392a"
            ],
            []
        ]
    },
    {
        "id": "3cec869c.fe392a",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 240,
        "wires": [
            [
                "dca0c85b.348bf8",
                "844513a3.c6ab9"
            ]
        ]
    },
    {
        "id": "d6604d4f.7536b",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "déverrouillage",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"target_unlock\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            //console.log(\"ask : \"+ask)\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 580,
        "y": 280,
        "wires": [
            [
                "f5fcdd34.d128c"
            ],
            []
        ]
    },
    {
        "id": "f5fcdd34.d128c",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 280,
        "wires": [
            [
                "752a42de.2f44fc"
            ]
        ]
    },
    {
        "id": "dca0c85b.348bf8",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "keybinding_auto v_target_cycle_in_view_reset",
        "func": "let keybinding=global.get('v_target_cycle_in_view_reset');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1180,
        "y": 240,
        "wires": [
            [
                "bbcc2342.af43"
            ]
        ]
    },
    {
        "id": "752a42de.2f44fc",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "keybinding_auto v_target_unlock_selected",
        "func": "let keybinding=global.get('v_target_unlock_selected');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1170,
        "y": 280,
        "wires": [
            [
                "bbcc2342.af43"
            ]
        ]
    },
    {
        "id": "bbcc2342.af43",
        "type": "exec",
        "z": "c3cf5343.7b594",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1610,
        "y": 260,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9890f970.b6ff38",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 380,
        "wires": [
            [
                "9f0d97e4.4bbc58"
            ]
        ]
    },
    {
        "id": "9f0d97e4.4bbc58",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 380,
        "wires": [
            [
                "91088bc1.250a38",
                "7df6db07.be9cb4"
            ]
        ]
    },
    {
        "id": "ee5e2dd3.98232",
        "type": "comment",
        "z": "c3cf5343.7b594",
        "name": "mod de tire et quantité",
        "info": "\n\n",
        "x": 140,
        "y": 340,
        "wires": []
    },
    {
        "id": "91088bc1.250a38",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "toggle missile / canon",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"switch_weapon\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 600,
        "y": 380,
        "wires": [
            [
                "6f606620.fe9f08"
            ],
            []
        ]
    },
    {
        "id": "6f606620.fe9f08",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 380,
        "wires": [
            [
                "8d4ac07e.cc44c",
                "6587b250.541c3c"
            ]
        ]
    },
    {
        "id": "7df6db07.be9cb4",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "quantité missile",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"change_q_missile\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            //console.log(\"ask : \"+ask)\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 580,
        "y": 420,
        "wires": [
            [
                "cf9085ba.3cd308"
            ],
            []
        ]
    },
    {
        "id": "cf9085ba.3cd308",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 420,
        "wires": [
            [
                "43fc6803.081ca8",
                "6587b250.541c3c"
            ]
        ]
    },
    {
        "id": "8d4ac07e.cc44c",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "keybinding_auto v_toggle_missile_mode",
        "func": "let keybinding=global.get('v_toggle_missile_mode');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1160,
        "y": 380,
        "wires": [
            [
                "810d849f.f589c8"
            ]
        ]
    },
    {
        "id": "43fc6803.081ca8",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "keybinding_auto v_weapon_increase_max_missiles",
        "func": "let keybinding=global.get('v_weapon_increase_max_missiles');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1190,
        "y": 420,
        "wires": [
            [
                "810d849f.f589c8"
            ]
        ]
    },
    {
        "id": "810d849f.f589c8",
        "type": "exec",
        "z": "c3cf5343.7b594",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1610,
        "y": 400,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "6587b250.541c3c",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1125.5555419921875,
        "y": 456.6666564941406,
        "wires": [
            [
                "810d849f.f589c8"
            ]
        ]
    },
    {
        "id": "844513a3.c6ab9",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 320,
        "wires": [
            [
                "bbcc2342.af43"
            ]
        ]
    },
    {
        "id": "4843f060.087ba",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 520,
        "wires": [
            [
                "8f9272c9.eab8d"
            ]
        ]
    },
    {
        "id": "8f9272c9.eab8d",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 520,
        "wires": [
            [
                "5cfa180c.c51128"
            ]
        ]
    },
    {
        "id": "d5794225.7bcdb",
        "type": "comment",
        "z": "c3cf5343.7b594",
        "name": "mise à feu",
        "info": "\n\n",
        "x": 100,
        "y": 480,
        "wires": []
    },
    {
        "id": "5cfa180c.c51128",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "mise à feu",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"fire_missile\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            //console.log(\"ask : \"+ask)\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 570,
        "y": 520,
        "wires": [
            [
                "e2adc4d6.7b0688"
            ],
            []
        ]
    },
    {
        "id": "e2adc4d6.7b0688",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 520,
        "wires": [
            [
                "b02727ee.df2018",
                "f18faa50.be6c38"
            ]
        ]
    },
    {
        "id": "b02727ee.df2018",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "keybinding_auto v_weapon_launch_missile",
        "func": "let keybinding=global.get('v_weapon_launch_missile');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1170,
        "y": 520,
        "wires": [
            [
                "a15fb95a.685bc8"
            ]
        ]
    },
    {
        "id": "a15fb95a.685bc8",
        "type": "exec",
        "z": "c3cf5343.7b594",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1610,
        "y": 540,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "f18faa50.be6c38",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 560,
        "wires": [
            [
                "a15fb95a.685bc8"
            ]
        ]
    },
    {
        "id": "53bdb964.947188",
        "type": "inject",
        "z": "c3cf5343.7b594",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 80,
        "wires": [
            [
                "ae769823.e59bd8"
            ]
        ]
    },
    {
        "id": "ae769823.e59bd8",
        "type": "file in",
        "z": "c3cf5343.7b594",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "3f4fb185.ca8c5e"
            ]
        ]
    },
    {
        "id": "3f4fb185.ca8c5e",
        "type": "json",
        "z": "c3cf5343.7b594",
        "name": "from json",
        "pretty": false,
        "x": 440,
        "y": 80,
        "wires": [
            [
                "37c2fd4e.bf75f2"
            ]
        ]
    },
    {
        "id": "37c2fd4e.bf75f2",
        "type": "function",
        "z": "c3cf5343.7b594",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"03_combat\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 80,
        "wires": [
            [
                "d16345b4.0ab718"
            ]
        ]
    },
    {
        "id": "d16345b4.0ab718",
        "type": "json",
        "z": "c3cf5343.7b594",
        "name": "to json",
        "pretty": true,
        "x": 710,
        "y": 80,
        "wires": [
            [
                "862f14c1.978f98"
            ]
        ]
    },
    {
        "id": "862f14c1.978f98",
        "type": "file",
        "z": "c3cf5343.7b594",
        "name": "03_combat.json",
        "filename": "./../viseo-bot-project/data/flow/master/03_combat.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 860,
        "y": 80,
        "wires": []
    },
    {
        "id": "fafbb75b.749f98",
        "type": "comment",
        "z": "c3cf5343.7b594",
        "name": "sauvegarde du flow pour exportation ou modeur",
        "info": "",
        "x": 220,
        "y": 40,
        "wires": []
    },
    {
        "id": "3665e237.535f9e",
        "type": "trigger",
        "z": "e3b59118.5cbf8",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 340,
        "y": 140,
        "wires": [
            [
                "39c45fb4.57551",
                "839f097e.1681e8"
            ]
        ]
    },
    {
        "id": "e8dcf20b.a6d38",
        "type": "start-up-trigger",
        "z": "e3b59118.5cbf8",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "3665e237.535f9e"
            ]
        ]
    },
    {
        "id": "924855c2.14aba8",
        "type": "comment",
        "z": "e3b59118.5cbf8",
        "name": "en ligne",
        "info": "\n\n",
        "x": 90,
        "y": 180,
        "wires": []
    },
    {
        "id": "a787a95.a92a258",
        "type": "function",
        "z": "e3b59118.5cbf8",
        "name": "test de swan",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"test_de_swan\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 550,
        "y": 240,
        "wires": [
            [
                "b09dc518.8906c8"
            ],
            []
        ]
    },
    {
        "id": "ca92d4a5.7adcf8",
        "type": "exec",
        "z": "e3b59118.5cbf8",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1410,
        "y": 240,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "2a382fd6.7b8b1",
        "type": "function",
        "z": "e3b59118.5cbf8",
        "name": "ng_sfx online",
        "func": "let sound_effect=[];\nlet track_id='online';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1190,
        "y": 240,
        "wires": [
            [
                "ca92d4a5.7adcf8"
            ]
        ]
    },
    {
        "id": "39c45fb4.57551",
        "type": "function",
        "z": "e3b59118.5cbf8",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 240,
        "wires": [
            [
                "a787a95.a92a258"
            ]
        ]
    },
    {
        "id": "b09dc518.8906c8",
        "type": "function",
        "z": "e3b59118.5cbf8",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 240,
        "wires": [
            [
                "2a382fd6.7b8b1"
            ]
        ]
    },
    {
        "id": "fa531996.82e138",
        "type": "comment",
        "z": "e3b59118.5cbf8",
        "name": "discret et veille",
        "info": "\n",
        "x": 120,
        "y": 320,
        "wires": []
    },
    {
        "id": "b3e8e127.8cfb5",
        "type": "exec",
        "z": "e3b59118.5cbf8",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1410,
        "y": 420,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "d0c82831.8588f8",
        "type": "function",
        "z": "e3b59118.5cbf8",
        "name": "activation mod discret (sf)",
        "func": "let search=[]\nsearch.push('discret_mod_on');\nlet find=false;\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask);\n                find=true;\n            }\n        }\n    });\n}\nif(find===true)\n{\n    search=[];\n    global.set('discret',true);\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 360,
        "wires": [
            [
                "1bd6902b.2a92b"
            ]
        ]
    },
    {
        "id": "b4b3cbaf.71b268",
        "type": "function",
        "z": "e3b59118.5cbf8",
        "name": "mise en someil/veille (sf)",
        "func": "let search=[];\nsearch.push('veille_on');\nlet find=false;\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask);\n                find=true;\n            }\n        }\n    });\n}\nif(find===true)\n{\n    search=[];\n    global.set('swan_active',false);\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 620,
        "wires": [
            [
                "d38fbeb5.d8d32"
            ]
        ]
    },
    {
        "id": "87750d9.108b4f",
        "type": "function",
        "z": "e3b59118.5cbf8",
        "name": "désactivation mod discret (sf)",
        "func": "let search=[];\nsearch.push('discret_mod_off');\nlet find=false;\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask);\n                find=true;\n            }\n        }\n    });\n}\nif(find===true)\n{\n    search=[]\n    global.set('discret',false);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 400,
        "wires": [
            [
                "2530e467.9d121c"
            ]
        ]
    },
    {
        "id": "f70bd897.a72f28",
        "type": "function",
        "z": "e3b59118.5cbf8",
        "name": "remise en attente (sf)",
        "func": "let search=[];\nsearch.push('veille_off');\n\nlet find=false;\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            //console.log(\"ask : \"+ask)\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask);\n                find=true;\n            }\n        }\n    });\n}\nif(find===true)\n{\n    search=[];\n    global.set('swan_active',true);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 580,
        "wires": [
            [
                "ac692f25.721ef"
            ]
        ]
    },
    {
        "id": "7ce6a307.b7c2ec",
        "type": "function",
        "z": "e3b59118.5cbf8",
        "name": "sound_effect bip",
        "func": "let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1140,
        "y": 420,
        "wires": [
            [
                "b3e8e127.8cfb5"
            ]
        ]
    },
    {
        "id": "1bd6902b.2a92b",
        "type": "function",
        "z": "e3b59118.5cbf8",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 360,
        "wires": [
            [
                "7ce6a307.b7c2ec"
            ]
        ]
    },
    {
        "id": "2530e467.9d121c",
        "type": "function",
        "z": "e3b59118.5cbf8",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 400,
        "wires": [
            [
                "7ce6a307.b7c2ec"
            ]
        ]
    },
    {
        "id": "ac692f25.721ef",
        "type": "function",
        "z": "e3b59118.5cbf8",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 580,
        "wires": [
            [
                "7ce6a307.b7c2ec"
            ]
        ]
    },
    {
        "id": "d38fbeb5.d8d32",
        "type": "function",
        "z": "e3b59118.5cbf8",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 620,
        "wires": [
            [
                "7ce6a307.b7c2ec"
            ]
        ]
    },
    {
        "id": "839f097e.1681e8",
        "type": "function",
        "z": "e3b59118.5cbf8",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 420,
        "wires": [
            [
                "d0c82831.8588f8",
                "87750d9.108b4f",
                "f70bd897.a72f28",
                "b4b3cbaf.71b268"
            ]
        ]
    },
    {
        "id": "96e896e6.a2dd98",
        "type": "inject",
        "z": "e3b59118.5cbf8",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 60,
        "wires": [
            [
                "71fb6004.5475e"
            ]
        ]
    },
    {
        "id": "71fb6004.5475e",
        "type": "file in",
        "z": "e3b59118.5cbf8",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 310,
        "y": 60,
        "wires": [
            [
                "88866edf.a350e"
            ]
        ]
    },
    {
        "id": "88866edf.a350e",
        "type": "json",
        "z": "e3b59118.5cbf8",
        "name": "from json",
        "pretty": false,
        "x": 440,
        "y": 60,
        "wires": [
            [
                "bde87c89.6c351"
            ]
        ]
    },
    {
        "id": "bde87c89.6c351",
        "type": "function",
        "z": "e3b59118.5cbf8",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"02_test\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 60,
        "wires": [
            [
                "e62e91a6.9b044"
            ]
        ]
    },
    {
        "id": "e62e91a6.9b044",
        "type": "json",
        "z": "e3b59118.5cbf8",
        "name": "to json",
        "pretty": true,
        "x": 710,
        "y": 60,
        "wires": [
            [
                "43c07830.c9b108"
            ]
        ]
    },
    {
        "id": "43c07830.c9b108",
        "type": "file",
        "z": "e3b59118.5cbf8",
        "name": "02_test.json",
        "filename": "./../viseo-bot-project/data/flow/master/02_test.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 850,
        "y": 60,
        "wires": []
    },
    {
        "id": "6c9b8993.7dca38",
        "type": "comment",
        "z": "e3b59118.5cbf8",
        "name": "sauvegarde du flow pour exportation ou modeur",
        "info": "",
        "x": 220,
        "y": 20,
        "wires": []
    },
    {
        "id": "bbbefa1c.e7cab8",
        "type": "win-sarah",
        "z": "e23f34c2.ea7468",
        "name": "SWAN",
        "active": false,
        "options": "f859bd67.27c9e",
        "grammar": "{cwd}/data/grammar",
        "x": 110,
        "y": 180,
        "wires": [
            [
                "a21ef329.23026",
                "ec188c63.4f29b",
                "d60ca2bb.66005"
            ]
        ]
    },
    {
        "id": "ac647b67.9b8388",
        "type": "trigger",
        "z": "e23f34c2.ea7468",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-750",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 380,
        "y": 380,
        "wires": [
            [
                "261893f.92dad6c"
            ]
        ]
    },
    {
        "id": "27f69a61.302b16",
        "type": "start-up-trigger",
        "z": "e23f34c2.ea7468",
        "x": 120,
        "y": 380,
        "wires": [
            [
                "ac647b67.9b8388",
                "fb3c923a.6d82"
            ]
        ]
    },
    {
        "id": "d60ca2bb.66005",
        "type": "function",
        "z": "e23f34c2.ea7468",
        "name": "confiance_gate",
        "func": "let to_false={}\nlet to_true={}\n\nif(parseFloat(msg.payload.confidence)< global.get(\"confiance_gate\"))\n{\n    to_false.topic=true\n    to_false.payload=msg.payload.text;\n}\nelse{\n    to_true.topic=true\n    to_true.payload=msg.payload.text;\n    to_true.action=msg.payload.options.action;\n    to_true.confiance=msg.payload.confidence.toFixed(3);\n}\n\nreturn [to_false,to_true]\n",
        "outputs": "2",
        "noerr": 0,
        "x": 360,
        "y": 180,
        "wires": [
            [],
            [
                "fbfd8614.138e78",
                "5c5dbc9f.ec4f34",
                "f34174b4.d99d68"
            ]
        ]
    },
    {
        "id": "fbfd8614.138e78",
        "type": "function",
        "z": "e23f34c2.ea7468",
        "name": "To memory",
        "func": "let memory=[]\nmsg.time=Date.now();\nmsg.attemp=0;\n\n\nlet last_memory=global.get(\"SWAN_M\")\n\nconsole.log(last_memory)\nconsole.log(\"nb déjà en mémoire: \"+last_memory.length)\n\nfor (i=0; i<last_memory.length;i++)\n{\n    console.log(last_memory[i])\n    memory.push(last_memory[i])\n}\nmemory.push(msg)\n\nglobal.set(\"SWAN_M\",memory)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "261893f.92dad6c",
        "type": "function",
        "z": "e23f34c2.ea7468",
        "name": "Flush first of memory (auto purge)",
        "func": "let last_memory=global.get(\"SWAN_M\");\nlet memory=[];\nlet now=Date.now();\nlet first=true\n\nmsg={};\nif(last_memory.length >0)\n{\n    console.log(\"memory avant :\");\n    console.log(last_memory);\n    console.log(\"nb avant: \"+last_memory.length);\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        if((now-last_memory[i].time)>500 && last_memory[i].attemp>3)\n        {\n            if(first===true)\n            {\n                msg.payload=last_memory[i].payload;\n                msg.topic=true;\n                first=false\n            }\n            else\n            {\n                last_memory[i].attemp++;\n                memory.push(last_memory[i]); \n            }\n           \n        }\n        else{\n            if(i===0)\n            {\n                last_memory[i].attemp++;\n            }\n            \n            memory.push(last_memory[i]); \n            \n        }\n    }\n    console.log(\"memory aprés :\");\n    console.log(memory);\n    console.log(\"nb aprés: \"+memory.length)\n    \n    global.set(\"SWAN_M\",memory);\n    return msg;\n}\nelse{\n    global.set(\"SWAN_M\",[]);\n}\n\n\n\n//console.log(\"memory avant :\");\n//console.log(memory);\n//console.log(\"nb avant: \"+memory.length);\n\n//memory = memory.slice(1);\n//console.log(\"memory aprés :\");\n//console.log(memory);\n//console.log(\"nb aprés : \"+memory.length);\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 380,
        "wires": [
            [
                "f73f40ad.67307"
            ]
        ]
    },
    {
        "id": "f34174b4.d99d68",
        "type": "function",
        "z": "e23f34c2.ea7468",
        "name": "pour les logs",
        "func": "\nif (msg.confiance!==\"\")\n{\n    let date_ob = new Date();\n    let data={};\n    \n    // current date\n    // adjust 0 before single digit date\n    let date = (\"0\" + date_ob.getDate()).slice(-2);\n    \n    // current month\n    let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n    \n    // current year\n    let year = date_ob.getFullYear();\n    \n    // current hours\n    let hours = date_ob.getHours();\n    \n    // current minutes\n    let minutes = date_ob.getMinutes();\n    \n    // current seconds\n    let seconds = date_ob.getSeconds();\n    \n    console.log(data)\n    \n    msg.payload=year + \"-\" + month + \"-\" + date + \" \" + hours + \":\" + minutes + \":\" + seconds+\"    \"+msg.confiance+\"    \"+msg.payload+\"    \"+msg.action;\n    return msg\n}\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 570,
        "y": 220,
        "wires": [
            [
                "6fc310cd.f84b8"
            ]
        ]
    },
    {
        "id": "6fc310cd.f84b8",
        "type": "file",
        "z": "e23f34c2.ea7468",
        "name": "",
        "filename": "./../log_confiance.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 820,
        "y": 220,
        "wires": []
    },
    {
        "id": "70473f6.b440cc",
        "type": "win-speak",
        "z": "e23f34c2.ea7468",
        "x": 1390,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "6f778f1e.242ad",
        "type": "function",
        "z": "e23f34c2.ea7468",
        "name": "sound_effect bip",
        "func": "if (msg.payload !== undefined)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`error\\\\désolé circuit pas connecté.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 380,
        "wires": [
            [
                "41e2f0f1.ab732"
            ]
        ]
    },
    {
        "id": "41e2f0f1.ab732",
        "type": "exec",
        "z": "e23f34c2.ea7468",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1410,
        "y": 380,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5d463369.d0563c",
        "type": "trigger",
        "z": "e23f34c2.ea7468",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "7",
        "extend": false,
        "units": "s",
        "reset": "reset",
        "name": "",
        "x": 1260,
        "y": 420,
        "wires": [
            [
                "70473f6.b440cc"
            ]
        ]
    },
    {
        "id": "53da0e4e.06c7a",
        "type": "function",
        "z": "e23f34c2.ea7468",
        "name": "si message",
        "func": "if (msg.payload !== undefined)\n{\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 420,
        "wires": [
            [
                "5d463369.d0563c"
            ]
        ]
    },
    {
        "id": "fb3c923a.6d82",
        "type": "function",
        "z": "e23f34c2.ea7468",
        "name": "sound_effect bip",
        "func": "let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 460,
        "wires": [
            [
                "f82a7e75.f4b9c"
            ]
        ]
    },
    {
        "id": "f82a7e75.f4b9c",
        "type": "exec",
        "z": "e23f34c2.ea7468",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1410,
        "y": 460,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "f73f40ad.67307",
        "type": "function",
        "z": "e23f34c2.ea7468",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 380,
        "wires": [
            [
                "6f778f1e.242ad",
                "53da0e4e.06c7a"
            ]
        ]
    },
    {
        "id": "5c5dbc9f.ec4f34",
        "type": "debug",
        "z": "e23f34c2.ea7468",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 480,
        "y": 300,
        "wires": []
    },
    {
        "id": "a21ef329.23026",
        "type": "debug",
        "z": "e23f34c2.ea7468",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 250,
        "y": 300,
        "wires": []
    },
    {
        "id": "f77e9c7d.06be1",
        "type": "file",
        "z": "e23f34c2.ea7468",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 750,
        "y": 320,
        "wires": []
    },
    {
        "id": "ec188c63.4f29b",
        "type": "function",
        "z": "e23f34c2.ea7468",
        "name": "buffer",
        "func": "let sound=msg.payload.buffer;\n/*\nfor (i=0;i<msg.payload.buffer;i++)\n{\n    sound+=msg.payload.buffer[i]\n}*/\nmsg.filename=\"./../diag_audio/\"+msg.payload.text+\"_\"+msg._msgid+\".mp3\"\nmsg.payload=sound;\nreturn msg;",
        "outputs": "1",
        "noerr": 0,
        "x": 390,
        "y": 340,
        "wires": [
            [
                "f77e9c7d.06be1"
            ]
        ]
    },
    {
        "id": "d3fe53f1.3ef27",
        "type": "inject",
        "z": "e23f34c2.ea7468",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 60,
        "wires": [
            [
                "187471e4.8bd9be"
            ]
        ]
    },
    {
        "id": "187471e4.8bd9be",
        "type": "file in",
        "z": "e23f34c2.ea7468",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 310,
        "y": 60,
        "wires": [
            [
                "b01ea2f7.79aba"
            ]
        ]
    },
    {
        "id": "b01ea2f7.79aba",
        "type": "json",
        "z": "e23f34c2.ea7468",
        "name": "from json",
        "pretty": false,
        "x": 440,
        "y": 60,
        "wires": [
            [
                "a6e4d21d.75c55"
            ]
        ]
    },
    {
        "id": "a6e4d21d.75c55",
        "type": "function",
        "z": "e23f34c2.ea7468",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"01_routeur\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 60,
        "wires": [
            [
                "25787e67.de9332"
            ]
        ]
    },
    {
        "id": "25787e67.de9332",
        "type": "json",
        "z": "e23f34c2.ea7468",
        "name": "to json",
        "pretty": true,
        "x": 710,
        "y": 60,
        "wires": [
            [
                "79c8ddf5.2e97b4"
            ]
        ]
    },
    {
        "id": "79c8ddf5.2e97b4",
        "type": "file",
        "z": "e23f34c2.ea7468",
        "name": "01_routeur.json",
        "filename": "./../viseo-bot-project/data/flow/master/01_routeur.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 860,
        "y": 60,
        "wires": []
    },
    {
        "id": "1236569d.fb8039",
        "type": "comment",
        "z": "e23f34c2.ea7468",
        "name": "sauvegarde du flow pour exportation ou modeur",
        "info": "",
        "x": 220,
        "y": 20,
        "wires": []
    },
    {
        "id": "4462bfa4.604c9",
        "type": "start-up-trigger",
        "z": "31099d34.a85072",
        "x": 120,
        "y": 160,
        "wires": [
            [
                "e7c639e5.75ac38"
            ]
        ]
    },
    {
        "id": "e7c639e5.75ac38",
        "type": "trigger",
        "z": "31099d34.a85072",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 340,
        "y": 160,
        "wires": [
            [
                "fd4d559.d0310a8",
                "402bd331.c8e14c"
            ]
        ]
    },
    {
        "id": "fd4d559.d0310a8",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 300,
        "wires": [
            [
                "e3721416.dda728"
            ]
        ]
    },
    {
        "id": "e3721416.dda728",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 300,
        "wires": [
            [
                "c23d58ad.2c1d78",
                "70825e9c.8f69b",
                "1e3b69c2.6017d6",
                "db555bb3.e40878"
            ]
        ]
    },
    {
        "id": "cec409d.bea2af8",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 300,
        "wires": [
            [
                "aa8fb620.6fa348",
                "a999c38d.31548",
                "f4cec5ea.e11688"
            ]
        ]
    },
    {
        "id": "aa8fb620.6fa348",
        "type": "loop",
        "z": "31099d34.a85072",
        "name": "15 fois",
        "kind": "fcnt",
        "count": "15",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "enum",
        "enumerationType": "msg",
        "limit": "250",
        "loopPayload": "loop-orig",
        "finalPayload": "final-orig",
        "x": 1350,
        "y": 300,
        "wires": [
            [],
            [
                "f4cec5ea.e11688"
            ]
        ]
    },
    {
        "id": "3ec589c9.352546",
        "type": "comment",
        "z": "31099d34.a85072",
        "name": "bouclier totalité (totalité)",
        "info": "\n\n",
        "x": 140,
        "y": 260,
        "wires": []
    },
    {
        "id": "c23d58ad.2c1d78",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "bouclier avant",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"full_shield_front\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 580,
        "y": 300,
        "wires": [
            [
                "cec409d.bea2af8"
            ],
            []
        ]
    },
    {
        "id": "87b5555c.0be858",
        "type": "exec",
        "z": "31099d34.a85072",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1590,
        "y": 300,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "a999c38d.31548",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1300,
        "y": 340,
        "wires": [
            [
                "87b5555c.0be858"
            ]
        ]
    },
    {
        "id": "c97c6e23.7c7a5",
        "type": "comment",
        "z": "31099d34.a85072",
        "name": "bouclier totalité (partiel)",
        "info": "\n\n",
        "x": 580,
        "y": 660,
        "wires": []
    },
    {
        "id": "51e629d4.685c98",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "bouclier avant",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"more_shield_front\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 580,
        "y": 720,
        "wires": [
            [
                "da528c9a.8c2ae"
            ],
            []
        ]
    },
    {
        "id": "9a20bf63.b7e97",
        "type": "exec",
        "z": "31099d34.a85072",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1590,
        "y": 720,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "ad28f5ce.eba338",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1220,
        "y": 760,
        "wires": [
            [
                "9a20bf63.b7e97"
            ]
        ]
    },
    {
        "id": "8f57883d.7f5a78",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "bouclier gauche",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"more_shield_left\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 580,
        "y": 800,
        "wires": [
            [
                "ef5fb873.0baf58"
            ],
            []
        ]
    },
    {
        "id": "b34dac69.8323e",
        "type": "exec",
        "z": "31099d34.a85072",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1590,
        "y": 800,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9b853440.f7afe8",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1220,
        "y": 840,
        "wires": [
            [
                "b34dac69.8323e"
            ]
        ]
    },
    {
        "id": "3d358761.df1978",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "bouclier droit",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"more_shield_right\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 570,
        "y": 880,
        "wires": [
            [
                "b8e1351c.1f5558"
            ],
            []
        ]
    },
    {
        "id": "acbe491a.ef2788",
        "type": "exec",
        "z": "31099d34.a85072",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1590,
        "y": 880,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "df7172de.332e",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1220,
        "y": 920,
        "wires": [
            [
                "acbe491a.ef2788"
            ]
        ]
    },
    {
        "id": "18f0c945.3a74b7",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "bouclier arrière",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"more_shield_back\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 580,
        "y": 960,
        "wires": [
            [
                "23fd3ae9.633ba6"
            ],
            []
        ]
    },
    {
        "id": "33c96202.c8ef8e",
        "type": "exec",
        "z": "31099d34.a85072",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1590,
        "y": 960,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "eb4d42e.65f43c",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1220,
        "y": 1000,
        "wires": [
            [
                "33c96202.c8ef8e"
            ]
        ]
    },
    {
        "id": "70825e9c.8f69b",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "bouclier gauche",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"full_shield_left\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 580,
        "y": 380,
        "wires": [
            [
                "c4e51aba.c37f68"
            ],
            []
        ]
    },
    {
        "id": "fa9df376.99dd3",
        "type": "loop",
        "z": "31099d34.a85072",
        "name": "15 fois",
        "kind": "fcnt",
        "count": "15",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "enum",
        "enumerationType": "msg",
        "limit": "250",
        "loopPayload": "loop-orig",
        "finalPayload": "final-orig",
        "x": 1350,
        "y": 380,
        "wires": [
            [],
            [
                "fee96d80.52497"
            ]
        ]
    },
    {
        "id": "998bf50f.8bbe28",
        "type": "exec",
        "z": "31099d34.a85072",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1590,
        "y": 380,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "670fca34.9a4bb4",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1300,
        "y": 420,
        "wires": [
            [
                "998bf50f.8bbe28"
            ]
        ]
    },
    {
        "id": "1e3b69c2.6017d6",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "bouclier droit",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"full_shield_right\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 570,
        "y": 460,
        "wires": [
            [
                "b7353850.f91358"
            ],
            []
        ]
    },
    {
        "id": "7c9dda2e.7d37d4",
        "type": "loop",
        "z": "31099d34.a85072",
        "name": "15 fois",
        "kind": "fcnt",
        "count": "15",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "enum",
        "enumerationType": "msg",
        "limit": "250",
        "loopPayload": "loop-orig",
        "finalPayload": "final-orig",
        "x": 1350,
        "y": 460,
        "wires": [
            [],
            [
                "1d607ce7.8ab663"
            ]
        ]
    },
    {
        "id": "7ec3be44.faccd",
        "type": "exec",
        "z": "31099d34.a85072",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1590,
        "y": 460,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "7c494a46.5468e4",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1300,
        "y": 500,
        "wires": [
            [
                "7ec3be44.faccd"
            ]
        ]
    },
    {
        "id": "db555bb3.e40878",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "bouclier arrière",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"full_shield_back\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 580,
        "y": 540,
        "wires": [
            [
                "c70d841.9d3f078"
            ],
            []
        ]
    },
    {
        "id": "8213ce95.98643",
        "type": "loop",
        "z": "31099d34.a85072",
        "name": "15 fois",
        "kind": "fcnt",
        "count": "15",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "enum",
        "enumerationType": "msg",
        "limit": "250",
        "loopPayload": "loop-orig",
        "finalPayload": "final-orig",
        "x": 1350,
        "y": 560,
        "wires": [
            [],
            [
                "6f761cad.18eb84"
            ]
        ]
    },
    {
        "id": "8bfb32f4.d4978",
        "type": "exec",
        "z": "31099d34.a85072",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1590,
        "y": 540,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e9022a22.5a5018",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1300,
        "y": 600,
        "wires": [
            [
                "8bfb32f4.d4978"
            ]
        ]
    },
    {
        "id": "28c06895.49c198",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "Bouclier centre",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"center_shield\")\n\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 580,
        "y": 1040,
        "wires": [
            [
                "201ebf76.e5db4"
            ],
            []
        ]
    },
    {
        "id": "3054048c.fc3e1c",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1220,
        "y": 1080,
        "wires": [
            [
                "fc6714d9.5d15e8"
            ]
        ]
    },
    {
        "id": "fc6714d9.5d15e8",
        "type": "exec",
        "z": "31099d34.a85072",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1590,
        "y": 1020,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "402bd331.c8e14c",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 720,
        "wires": [
            [
                "790913d2.69136c"
            ]
        ]
    },
    {
        "id": "790913d2.69136c",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 720,
        "wires": [
            [
                "51e629d4.685c98",
                "8f57883d.7f5a78",
                "3d358761.df1978",
                "18f0c945.3a74b7",
                "28c06895.49c198"
            ]
        ]
    },
    {
        "id": "c4e51aba.c37f68",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 380,
        "wires": [
            [
                "fa9df376.99dd3",
                "670fca34.9a4bb4",
                "fee96d80.52497"
            ]
        ]
    },
    {
        "id": "b7353850.f91358",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 460,
        "wires": [
            [
                "7c9dda2e.7d37d4",
                "7c494a46.5468e4",
                "1d607ce7.8ab663"
            ]
        ]
    },
    {
        "id": "c70d841.9d3f078",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 540,
        "wires": [
            [
                "8213ce95.98643",
                "e9022a22.5a5018",
                "6f761cad.18eb84"
            ]
        ]
    },
    {
        "id": "da528c9a.8c2ae",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 720,
        "wires": [
            [
                "ad28f5ce.eba338",
                "44393dba.b57c44"
            ]
        ]
    },
    {
        "id": "ef5fb873.0baf58",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 800,
        "wires": [
            [
                "1a872c72.275c84",
                "9b853440.f7afe8"
            ]
        ]
    },
    {
        "id": "b8e1351c.1f5558",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 880,
        "wires": [
            [
                "df7172de.332e",
                "4ae7606d.b21f3"
            ]
        ]
    },
    {
        "id": "23fd3ae9.633ba6",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 960,
        "wires": [
            [
                "eb4d42e.65f43c",
                "e54eb56a.7853e8"
            ]
        ]
    },
    {
        "id": "201ebf76.e5db4",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 1040,
        "wires": [
            [
                "3054048c.fc3e1c",
                "d5163374.7a2bc"
            ]
        ]
    },
    {
        "id": "f4cec5ea.e11688",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "keybinding_auto v_shield_raise_level_forward",
        "func": "let keybinding=global.get('v_shield_raise_level_forward');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1120,
        "y": 300,
        "wires": [
            [
                "aa8fb620.6fa348",
                "87b5555c.0be858"
            ]
        ]
    },
    {
        "id": "fee96d80.52497",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "keybinding_auto v_shield_raise_level_left",
        "func": "let keybinding=global.get('v_shield_raise_level_left');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1140,
        "y": 380,
        "wires": [
            [
                "998bf50f.8bbe28",
                "fa9df376.99dd3"
            ]
        ]
    },
    {
        "id": "1d607ce7.8ab663",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "keybinding_auto v_shield_raise_level_right",
        "func": "let keybinding=global.get('v_shield_raise_level_right');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1130,
        "y": 460,
        "wires": [
            [
                "7c9dda2e.7d37d4",
                "7ec3be44.faccd"
            ]
        ]
    },
    {
        "id": "6f761cad.18eb84",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "keybinding_auto v_shield_raise_level_back",
        "func": "let keybinding=global.get('v_shield_raise_level_back');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1130,
        "y": 560,
        "wires": [
            [
                "8bfb32f4.d4978",
                "8213ce95.98643"
            ]
        ]
    },
    {
        "id": "44393dba.b57c44",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "keybinding_auto v_shield_raise_level_forward",
        "func": "let keybinding=global.get('v_shield_raise_level_forward');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1240,
        "y": 720,
        "wires": [
            [
                "9a20bf63.b7e97"
            ]
        ]
    },
    {
        "id": "1a872c72.275c84",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "keybinding_auto v_shield_raise_level_left",
        "func": "let keybinding=global.get('v_shield_raise_level_left');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1220,
        "y": 800,
        "wires": [
            [
                "b34dac69.8323e"
            ]
        ]
    },
    {
        "id": "4ae7606d.b21f3",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "keybinding_auto v_shield_raise_level_right",
        "func": "let keybinding=global.get('v_shield_raise_level_right');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1230,
        "y": 880,
        "wires": [
            [
                "acbe491a.ef2788"
            ]
        ]
    },
    {
        "id": "e54eb56a.7853e8",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "keybinding_auto v_shield_raise_level_back",
        "func": "let keybinding=global.get('v_shield_raise_level_back');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1230,
        "y": 960,
        "wires": [
            [
                "33c96202.c8ef8e"
            ]
        ]
    },
    {
        "id": "d5163374.7a2bc",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "keybinding_auto v_shield_reset_level",
        "func": "let keybinding=global.get('v_shield_reset_level');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1210,
        "y": 1040,
        "wires": [
            [
                "fc6714d9.5d15e8"
            ]
        ]
    },
    {
        "id": "9c04acd0.82b74",
        "type": "inject",
        "z": "31099d34.a85072",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 80,
        "wires": [
            [
                "5cdef501.43209c"
            ]
        ]
    },
    {
        "id": "5cdef501.43209c",
        "type": "file in",
        "z": "31099d34.a85072",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "9eeef93.5fbd808"
            ]
        ]
    },
    {
        "id": "9eeef93.5fbd808",
        "type": "json",
        "z": "31099d34.a85072",
        "name": "from json",
        "pretty": false,
        "x": 440,
        "y": 80,
        "wires": [
            [
                "4055862b.8b16b8"
            ]
        ]
    },
    {
        "id": "4055862b.8b16b8",
        "type": "function",
        "z": "31099d34.a85072",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"05_Boucliers\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 80,
        "wires": [
            [
                "3ef280ef.54a8b"
            ]
        ]
    },
    {
        "id": "3ef280ef.54a8b",
        "type": "json",
        "z": "31099d34.a85072",
        "name": "to json",
        "pretty": true,
        "x": 710,
        "y": 80,
        "wires": [
            [
                "6f8f3422.e08c3c"
            ]
        ]
    },
    {
        "id": "6f8f3422.e08c3c",
        "type": "file",
        "z": "31099d34.a85072",
        "name": "05_Boucliers.json",
        "filename": "./../viseo-bot-project/data/flow/master/05_Boucliers.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 870,
        "y": 80,
        "wires": []
    },
    {
        "id": "ab5a0b8.85c40f8",
        "type": "comment",
        "z": "31099d34.a85072",
        "name": "sauvegarde du flow pour exportation ou modeur",
        "info": "",
        "x": 220,
        "y": 40,
        "wires": []
    },
    {
        "id": "b4303cb4.dd078",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search close_gear sounds",
        "path": "./../sounds/close_gear/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 430,
        "y": 800,
        "wires": [
            [
                "b8584970.d1df08"
            ]
        ]
    },
    {
        "id": "b8584970.d1df08",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"close_gear\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 800,
        "wires": [
            [
                "7fb3e2e8.0dd3ac"
            ]
        ]
    },
    {
        "id": "7fb3e2e8.0dd3ac",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search open_gear sounds",
        "path": "./../sounds/open_gear/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 710,
        "y": 820,
        "wires": [
            [
                "44e67306.d6907c"
            ]
        ]
    },
    {
        "id": "44e67306.d6907c",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"open_gear\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 820,
        "wires": [
            [
                "33a2ec12.bb1da4"
            ]
        ]
    },
    {
        "id": "33a2ec12.bb1da4",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search base sounds",
        "path": "./../sounds/base/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 420,
        "y": 840,
        "wires": [
            [
                "5b5e0c58.d9f3b4"
            ]
        ]
    },
    {
        "id": "5b5e0c58.d9f3b4",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"base\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 840,
        "wires": [
            [
                "c4721559.5910d8"
            ]
        ]
    },
    {
        "id": "c4721559.5910d8",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search lum_on sounds",
        "path": "./../sounds/lum_on/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 700,
        "y": 860,
        "wires": [
            [
                "96d25414.653308"
            ]
        ]
    },
    {
        "id": "96d25414.653308",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"lum_on\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 860,
        "wires": [
            [
                "6c2eea9.be4a314"
            ]
        ]
    },
    {
        "id": "6c2eea9.be4a314",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search lum_off sounds",
        "path": "./../sounds/lum_off/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 420,
        "y": 880,
        "wires": [
            [
                "6cda07fa.291088"
            ]
        ]
    },
    {
        "id": "6cda07fa.291088",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"lum_off\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 880,
        "wires": [
            [
                "19edbee8.d0d781"
            ]
        ]
    },
    {
        "id": "19edbee8.d0d781",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search online sounds",
        "path": "./../sounds/online/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 700,
        "y": 900,
        "wires": [
            [
                "d7580345.07a98"
            ]
        ]
    },
    {
        "id": "d7580345.07a98",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"online\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 900,
        "wires": [
            [
                "2e570bc2.974b04"
            ]
        ]
    },
    {
        "id": "2e570bc2.974b04",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search ready_to_fly sounds",
        "path": "./../sounds/ready_to_fly/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 440,
        "y": 920,
        "wires": [
            [
                "824dc6f7.031828"
            ]
        ]
    },
    {
        "id": "824dc6f7.031828",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"ready_to_fly\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 920,
        "wires": [
            [
                "e4c70691.d67408"
            ]
        ]
    },
    {
        "id": "e4c70691.d67408",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search starmap_on sounds",
        "path": "./../sounds/starmap_on/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 720,
        "y": 940,
        "wires": [
            [
                "56a2ba60.f9f034"
            ]
        ]
    },
    {
        "id": "56a2ba60.f9f034",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"starmap_on\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 940,
        "wires": [
            [
                "510453c7.7267cc"
            ]
        ]
    },
    {
        "id": "510453c7.7267cc",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search starmap_off sounds",
        "path": "./../sounds/starmap_off/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 440,
        "y": 960,
        "wires": [
            [
                "8a48471c.5312a8"
            ]
        ]
    },
    {
        "id": "8a48471c.5312a8",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"starmap_off\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 960,
        "wires": [
            [
                "853cbcbd.5c4f"
            ]
        ]
    },
    {
        "id": "853cbcbd.5c4f",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search active_scan_on sounds",
        "path": "./../sounds/active_scan_on/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 730,
        "y": 980,
        "wires": [
            [
                "1495cc38.adca44"
            ]
        ]
    },
    {
        "id": "1495cc38.adca44",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"active_scan_on\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 980,
        "wires": [
            [
                "f62dbf2.cfe9b4"
            ]
        ]
    },
    {
        "id": "db81a294.75b3f",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search door_close sounds",
        "path": "./../sounds/door_close/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 710,
        "y": 1020,
        "wires": [
            [
                "e59e9055.2f94"
            ]
        ]
    },
    {
        "id": "e59e9055.2f94",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"door_close\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 1020,
        "wires": [
            [
                "f46b4194.f46d8"
            ]
        ]
    },
    {
        "id": "f46b4194.f46d8",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search door_open sounds",
        "path": "./../sounds/door_open/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 430,
        "y": 1040,
        "wires": [
            [
                "de56059f.696328"
            ]
        ]
    },
    {
        "id": "de56059f.696328",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"door_open\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 1040,
        "wires": [
            [
                "cdc6e9d0.29aae8"
            ]
        ]
    },
    {
        "id": "cdc6e9d0.29aae8",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search engine_on sounds",
        "path": "./../sounds/engine_on/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 710,
        "y": 1060,
        "wires": [
            [
                "16d6360b.76d10a"
            ]
        ]
    },
    {
        "id": "16d6360b.76d10a",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"engine_on\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 1060,
        "wires": [
            [
                "2b110de0.d86e42"
            ]
        ]
    },
    {
        "id": "2b110de0.d86e42",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search engine_off sounds",
        "path": "./../sounds/door_open/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 430,
        "y": 1080,
        "wires": [
            [
                "1dfde841.579c98"
            ]
        ]
    },
    {
        "id": "1dfde841.579c98",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"engine_off\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 1080,
        "wires": [
            [
                "f25c328.851aed"
            ]
        ]
    },
    {
        "id": "f25c328.851aed",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search generator_on sounds",
        "path": "./../sounds/gen_on/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 720,
        "y": 1100,
        "wires": [
            [
                "ece236c5.bf0ce8"
            ]
        ]
    },
    {
        "id": "ece236c5.bf0ce8",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"gen_on\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 1100,
        "wires": [
            [
                "2f791b9a.4dc624"
            ]
        ]
    },
    {
        "id": "2f791b9a.4dc624",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search generator_off sounds",
        "path": "./../sounds/gen_off/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 440,
        "y": 1120,
        "wires": [
            [
                "79a92174.eb32b"
            ]
        ]
    },
    {
        "id": "79a92174.eb32b",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"gen_off\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 1120,
        "wires": [
            [
                "c5fee126.97e29"
            ]
        ]
    },
    {
        "id": "c5fee126.97e29",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search quantum_on sounds",
        "path": "./../sounds/quantum_on/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 720,
        "y": 1140,
        "wires": [
            [
                "32b40d1e.947292"
            ]
        ]
    },
    {
        "id": "32b40d1e.947292",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"quantum_on\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 1140,
        "wires": [
            [
                "541d5147.5b705"
            ]
        ]
    },
    {
        "id": "541d5147.5b705",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search quantum_off sounds",
        "path": "./../sounds/quantum_off/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 440,
        "y": 1160,
        "wires": [
            [
                "646f5606.2802d8"
            ]
        ]
    },
    {
        "id": "646f5606.2802d8",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"quantum_off\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 1160,
        "wires": [
            [
                "628192a6.8499ec"
            ]
        ]
    },
    {
        "id": "628192a6.8499ec",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search quantum_jump sounds",
        "path": "./../sounds/quantum_jump/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 730,
        "y": 1180,
        "wires": [
            [
                "52bbf2a9.57aecc"
            ]
        ]
    },
    {
        "id": "52bbf2a9.57aecc",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"quantum_jump\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 1180,
        "wires": [
            [
                "d3c7ffc8.27478"
            ]
        ]
    },
    {
        "id": "d3c7ffc8.27478",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search commun_swan",
        "path": "./../sounds/commun_swan/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 420,
        "y": 1200,
        "wires": [
            [
                "6d1ef9d9.584978"
            ]
        ]
    },
    {
        "id": "6d1ef9d9.584978",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"commun_swan\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 1200,
        "wires": [
            [
                "72a1ef99.7ecbf"
            ]
        ]
    },
    {
        "id": "72a1ef99.7ecbf",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search mining_in sounds",
        "path": "./../sounds/mining_in/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 710,
        "y": 1220,
        "wires": [
            [
                "231c067a.2323ea"
            ]
        ]
    },
    {
        "id": "231c067a.2323ea",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"mining_in\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 1220,
        "wires": [
            [
                "dac1a517.1e0698"
            ]
        ]
    },
    {
        "id": "dac1a517.1e0698",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search mining_in",
        "path": "./../sounds/mining_out/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 410,
        "y": 1240,
        "wires": [
            [
                "62f53d36.eecfc4"
            ]
        ]
    },
    {
        "id": "62f53d36.eecfc4",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"mining_out\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 1240,
        "wires": [
            [
                "64ccedba.8b8644"
            ]
        ]
    },
    {
        "id": "64ccedba.8b8644",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search mining_switch sounds",
        "path": "./../sounds/mining_switch/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 720,
        "y": 1260,
        "wires": [
            [
                "daed27b9.cefb38"
            ]
        ]
    },
    {
        "id": "daed27b9.cefb38",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"mining_switch\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 1260,
        "wires": [
            [
                "478965f4.0a583c"
            ]
        ]
    },
    {
        "id": "478965f4.0a583c",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search exit",
        "path": "./../sounds/exit/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 390,
        "y": 1280,
        "wires": [
            [
                "e60e1ef6.ee161"
            ]
        ]
    },
    {
        "id": "e60e1ef6.ee161",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"exit\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 1280,
        "wires": [
            [
                "260cf50f.f1b0ea"
            ]
        ]
    },
    {
        "id": "260cf50f.f1b0ea",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search VTOL_close sounds",
        "path": "./../sounds/VTOL_close/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 720,
        "y": 1300,
        "wires": [
            [
                "dd736188.29883"
            ]
        ]
    },
    {
        "id": "3f7ce5ff.bd5f2a",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search VTOL_open",
        "path": "./../sounds/VTOL_open/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 410,
        "y": 1320,
        "wires": [
            [
                "72c89b22.1c1424"
            ]
        ]
    },
    {
        "id": "dd736188.29883",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"VTOL_close\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 1300,
        "wires": [
            [
                "3f7ce5ff.bd5f2a"
            ]
        ]
    },
    {
        "id": "72c89b22.1c1424",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"VTOL_open\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 1320,
        "wires": [
            [
                "39d90319.149fec"
            ]
        ]
    },
    {
        "id": "39d90319.149fec",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search mod_minage",
        "path": "./../sounds/mod_minage/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 700,
        "y": 1340,
        "wires": [
            [
                "35517497.b6d6cc"
            ]
        ]
    },
    {
        "id": "35517497.b6d6cc",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"mod_minage\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 1340,
        "wires": [
            [
                "732c06ff.d5c268"
            ]
        ]
    },
    {
        "id": "732c06ff.d5c268",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search mod_defensif sounds",
        "path": "./../sounds/mod_defensif/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 440,
        "y": 1360,
        "wires": [
            [
                "7819207d.50c94"
            ]
        ]
    },
    {
        "id": "7819207d.50c94",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"mod_defensif\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 1360,
        "wires": [
            [
                "6a4e40c3.8c794"
            ]
        ]
    },
    {
        "id": "6a4e40c3.8c794",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search mod_navigation",
        "path": "./../sounds/mod_navigation/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 710,
        "y": 1380,
        "wires": [
            [
                "43ad90a4.b244c"
            ]
        ]
    },
    {
        "id": "43ad90a4.b244c",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"mod_navigation\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 1380,
        "wires": [
            [
                "161d4c80.e6f4a4"
            ]
        ]
    },
    {
        "id": "161d4c80.e6f4a4",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search mod_offensif sounds",
        "path": "./../sounds/mod_offensif/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 440,
        "y": 1400,
        "wires": [
            [
                "fcf06b5e.8a5128"
            ]
        ]
    },
    {
        "id": "fcf06b5e.8a5128",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"mod_offensif\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 1400,
        "wires": [
            [
                "9ff0e7ca.9baf38"
            ]
        ]
    },
    {
        "id": "9ff0e7ca.9baf38",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search clear_take_off",
        "path": "./../sounds/clear_take_off/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 700,
        "y": 1420,
        "wires": [
            [
                "3cbf1215.2b2a7e"
            ]
        ]
    },
    {
        "id": "3cbf1215.2b2a7e",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"clear_take_off\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 1420,
        "wires": [
            [
                "b23f48.fa8420b8"
            ]
        ]
    },
    {
        "id": "b23f48.fa8420b8",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search clear_landing sounds",
        "path": "./../sounds/clear_landing/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 440,
        "y": 1440,
        "wires": [
            [
                "3b044e0e.d7f662"
            ]
        ]
    },
    {
        "id": "3b044e0e.d7f662",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"clear_landing\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 1440,
        "wires": [
            [
                "84270af8.8ea7c8"
            ]
        ]
    },
    {
        "id": "f62dbf2.cfe9b4",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search active_scan_off sounds",
        "path": "./../sounds/active_scan_off/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 450,
        "y": 1000,
        "wires": [
            [
                "617b55ef.28c9ec"
            ]
        ]
    },
    {
        "id": "617b55ef.28c9ec",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"active_scan_off\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 1000,
        "wires": [
            [
                "db81a294.75b3f"
            ]
        ]
    },
    {
        "id": "368cddf3.700782",
        "type": "comment",
        "z": "dc4e7734.5f3478",
        "name": "gestion banque sonore",
        "info": "\n\n",
        "x": 180,
        "y": 800,
        "wires": []
    },
    {
        "id": "b225ade0.694fa",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search phase_chil sounds",
        "path": "./../sounds/phase_chil/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 430,
        "y": 1480,
        "wires": [
            [
                "cf35d723.df57d8"
            ]
        ]
    },
    {
        "id": "cf35d723.df57d8",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"phase_chil\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 1480,
        "wires": [
            [
                "2555cff.87dba3"
            ]
        ]
    },
    {
        "id": "2555cff.87dba3",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search phase_combatsounds",
        "path": "./../sounds/phase_combat/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 720,
        "y": 1500,
        "wires": [
            [
                "226bc3de.f3f19c"
            ]
        ]
    },
    {
        "id": "226bc3de.f3f19c",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"phase_combat\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 1500,
        "wires": [
            [
                "74df4caa.4ea7e4"
            ]
        ]
    },
    {
        "id": "74df4caa.4ea7e4",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search phase_décollage sounds",
        "path": "./../sounds/phase_décollage/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 450,
        "y": 1520,
        "wires": [
            [
                "4db6ca5.dab5b34"
            ]
        ]
    },
    {
        "id": "4db6ca5.dab5b34",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"phase_décollage\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 1520,
        "wires": [
            [
                "8fdf3dac.2f05"
            ]
        ]
    },
    {
        "id": "84270af8.8ea7c8",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search phase_aterrisage sounds",
        "path": "./../sounds/phase_aterrisage/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 730,
        "y": 1460,
        "wires": [
            [
                "54f02fc.35439d"
            ]
        ]
    },
    {
        "id": "54f02fc.35439d",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"phase_aterrisage\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 1460,
        "wires": [
            [
                "b225ade0.694fa"
            ]
        ]
    },
    {
        "id": "42116dc8.6dd864",
        "type": "inject",
        "z": "dc4e7734.5f3478",
        "name": "scan sounds db",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 120,
        "y": 1000,
        "wires": [
            [
                "b4303cb4.dd078"
            ]
        ]
    },
    {
        "id": "d92d1490.082518",
        "type": "start-up-trigger",
        "z": "dc4e7734.5f3478",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "cceb969.20a1b68"
            ]
        ]
    },
    {
        "id": "d6a227f.2af1dd8",
        "type": "trigger",
        "z": "dc4e7734.5f3478",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 180,
        "y": 2560,
        "wires": [
            [
                "2f4d28c2.31a038"
            ]
        ]
    },
    {
        "id": "cef2b1ca.48526",
        "type": "exec",
        "z": "dc4e7734.5f3478",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1290,
        "y": 2560,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "ba01c11.02f3b4",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "sound_effect bip",
        "func": "let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n\nmsg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 2560,
        "wires": [
            [
                "cef2b1ca.48526"
            ]
        ]
    },
    {
        "id": "2f4d28c2.31a038",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 2560,
        "wires": [
            [
                "c80db1ea.dffbc"
            ]
        ]
    },
    {
        "id": "d7fb57e6.54e738",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 2560,
        "wires": [
            [
                "ba01c11.02f3b4"
            ]
        ]
    },
    {
        "id": "c80db1ea.dffbc",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 2560,
        "wires": [
            [
                "8c86f913.4259a8"
            ]
        ]
    },
    {
        "id": "8c86f913.4259a8",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "recharge son",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"reload_sounds\")\n\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.toString()===ask.toString())\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 770,
        "y": 2560,
        "wires": [
            [
                "d7fb57e6.54e738"
            ],
            []
        ]
    },
    {
        "id": "eaba295e.216928",
        "type": "inject",
        "z": "dc4e7734.5f3478",
        "name": "léxique créator",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 220,
        "y": 1880,
        "wires": [
            [
                "fc06a603.93da68",
                "61283eef.c84d6"
            ]
        ]
    },
    {
        "id": "fc06a603.93da68",
        "type": "file",
        "z": "dc4e7734.5f3478",
        "name": "",
        "filename": "./../lexique.txt",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "delete",
        "x": 540,
        "y": 1840,
        "wires": []
    },
    {
        "id": "61283eef.c84d6",
        "type": "trigger",
        "z": "dc4e7734.5f3478",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "name": "",
        "x": 480,
        "y": 1880,
        "wires": [
            [
                "fc52ec3b.d1972"
            ]
        ]
    },
    {
        "id": "1e994308.50917d",
        "type": "file in",
        "z": "dc4e7734.5f3478",
        "name": "open_file",
        "filename": "",
        "format": "lines",
        "chunk": false,
        "sendError": true,
        "x": 1200,
        "y": 1940,
        "wires": [
            [
                "67c54831.804eb8"
            ]
        ]
    },
    {
        "id": "67c54831.804eb8",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "nettoyage",
        "func": "let line=msg.payload\nlet delete_0='<one-of>'\nlet delete_1='</one-of>'\nlet delete_2='rule id\">'\nlet delete_3='<grammar version=\"1.0\" xml:'\nlet delete_4='</grammar>'\nlet delete_5='<tag>out.action.'\nlet delete_6='</rule>'\nlet delete_7='<tag>out.action=new Object(); </tag>'\nlet delete_8=\"<item></item>\"\nlet delete_9='<rule id=';\nlet delete_10=global.get('swan_name');\n\nif(line.includes(delete_10) || line.includes(delete_9) ||line.includes(delete_8) ||line.includes(delete_7) || line.includes(delete_0) || line.includes(delete_1) || line.includes(delete_2) || line.includes(delete_3) || line.includes(delete_4) || line.includes(delete_5) || line.includes(delete_6))\n{\n}\nelse\n{\n    \n    line=line.replace('\\t', '')\n    line=line.replace('\\t', '')\n    line=line.replace('\\t', '')\n    line=line.replace('\\t', '')\n    line=line.replace('\\t', '')\n    line=line.replace('\\t', '')\n    line=line.replace('\\t', '')\n    line=line.replace('\\t', '')\n    line=line.replace('\\t', '')\n    line=line.replace('\\t', '')\n    line=line.replace('\\t', '')\n    line=line.replace('<!--', '\\n\\n<!--')\n    line=line.replace('<item>', '')\n    line=line.replace('</item>', '')\n    msg.payload=\"\\t\\t-\"+line\n    return msg \n}\n\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1320,
        "y": 1940,
        "wires": [
            [
                "867121fe.d3bbd",
                "55022bba.674eb4"
            ]
        ]
    },
    {
        "id": "867121fe.d3bbd",
        "type": "file",
        "z": "dc4e7734.5f3478",
        "name": "",
        "filename": "./../lexique.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 1450,
        "y": 1640,
        "wires": []
    },
    {
        "id": "fc52ec3b.d1972",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search xml phraseo",
        "path": "./../viseo-bot-project/data/grammar/",
        "pathType": "str",
        "filter": "*.xml",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 650,
        "y": 1880,
        "wires": [
            [
                "74504385.19e19c"
            ]
        ]
    },
    {
        "id": "1b2ff4c2.fcd85b",
        "type": "loop",
        "z": "dc4e7734.5f3478",
        "name": "parcour liste fichiers xml",
        "kind": "enum",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "payload",
        "enumerationType": "msg",
        "limit": "500",
        "loopPayload": "loop-val",
        "finalPayload": "final-last",
        "x": 1070,
        "y": 1880,
        "wires": [
            [],
            [
                "ad38f494.de06a8"
            ]
        ]
    },
    {
        "id": "ad38f494.de06a8",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "fichier en cours",
        "func": "msg.payload=global.get('swan_path')+\"\\\\viseo-bot-project\\\\data\\\\grammar\\\\\"+msg.payload\nmsg.filename=msg.payload\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1080,
        "y": 1920,
        "wires": [
            [
                "1b2ff4c2.fcd85b",
                "1e994308.50917d"
            ]
        ]
    },
    {
        "id": "74504385.19e19c",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "conv tableau",
        "func": "let file_list=msg.files;\nmsg.payload=[];\n\nfor (i=0; i<file_list.length;i++)\n{\n     msg.payload.push(file_list[i]);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 1880,
        "wires": [
            [
                "1b2ff4c2.fcd85b"
            ]
        ]
    },
    {
        "id": "7b87255a.5906fc",
        "type": "comment",
        "z": "dc4e7734.5f3478",
        "name": "Création du lexique par rapport au différent fichier existant",
        "info": "\n\n",
        "x": 270,
        "y": 1800,
        "wires": []
    },
    {
        "id": "83fa54b5.7266f8",
        "type": "comment",
        "z": "dc4e7734.5f3478",
        "name": "gestion du config.ini",
        "info": "\n\n",
        "x": 130,
        "y": 1700,
        "wires": []
    },
    {
        "id": "cc2b4307.0a7ba",
        "type": "trigger",
        "z": "dc4e7734.5f3478",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "name": "",
        "x": 160,
        "y": 2060,
        "wires": [
            [
                "5b8f2c8d.1ca6e4",
                "58ddb3b2.5ebc1c"
            ]
        ]
    },
    {
        "id": "55022bba.674eb4",
        "type": "trigger",
        "z": "dc4e7734.5f3478",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "name": "",
        "x": 1640,
        "y": 1700,
        "wires": [
            [
                "cc2b4307.0a7ba"
            ]
        ]
    },
    {
        "id": "5b8f2c8d.1ca6e4",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search xml phraseo",
        "path": "./../viseo-bot-project/data/grammar/",
        "pathType": "str",
        "filter": "*.xml",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 210,
        "y": 2160,
        "wires": [
            [
                "c10285bf.500828"
            ]
        ]
    },
    {
        "id": "effbd915.bd8268",
        "type": "loop",
        "z": "dc4e7734.5f3478",
        "name": "parcour liste fichiers xml",
        "kind": "enum",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "payload",
        "enumerationType": "msg",
        "limit": "500",
        "loopPayload": "loop-val",
        "finalPayload": "final-last",
        "x": 630,
        "y": 2160,
        "wires": [
            [],
            [
                "f171d68a.198048"
            ]
        ]
    },
    {
        "id": "f171d68a.198048",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "fichier en cours",
        "func": "msg.payload=global.get('swan_path')+\"\\\\viseo-bot-project\\\\data\\\\grammar\\\\\"+msg.payload\nmsg.filename=msg.payload\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 2220,
        "wires": [
            [
                "effbd915.bd8268",
                "12af5f0c.6c2f61"
            ]
        ]
    },
    {
        "id": "c10285bf.500828",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "conv tableau",
        "func": "let file_list=msg.files;\nmsg.payload=[];\n\nfor (i=0; i<file_list.length;i++)\n{\n     msg.payload.push(file_list[i]);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 2160,
        "wires": [
            [
                "effbd915.bd8268"
            ]
        ]
    },
    {
        "id": "12af5f0c.6c2f61",
        "type": "file in",
        "z": "dc4e7734.5f3478",
        "name": "auto",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 790,
        "y": 2220,
        "wires": [
            [
                "931d30bf.c63ef"
            ]
        ]
    },
    {
        "id": "931d30bf.c63ef",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "change name",
        "func": "if(!msg.payload.includes(\"<item>\"+global.get('swan_name')+\"</item>\"))\n{\n    msg.payload=msg.payload.replace(\"<item>SWAN</item>\",\"<item>\"+global.get('swan_name')+\"</item>\")\n    msg.payload=msg.payload.replace(\"<item>\"+global.get('last_swan_name')+\"</item>\",\"<item>\"+global.get('swan_name')+\"</item>\")\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 2220,
        "wires": [
            [
                "a8e85a53.0c01d8"
            ]
        ]
    },
    {
        "id": "a8e85a53.0c01d8",
        "type": "file",
        "z": "dc4e7734.5f3478",
        "name": "file .xml",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1200,
        "y": 2220,
        "wires": []
    },
    {
        "id": "916f2824.e0c8b8",
        "type": "trigger",
        "z": "dc4e7734.5f3478",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "name": "",
        "x": 200,
        "y": 1840,
        "wires": [
            [
                "61283eef.c84d6",
                "fc06a603.93da68"
            ]
        ]
    },
    {
        "id": "c6d4b96e.d5aee8",
        "type": "comment",
        "z": "dc4e7734.5f3478",
        "name": "Modification  des fichier dictionnaire.",
        "info": "\n\n",
        "x": 220,
        "y": 2120,
        "wires": []
    },
    {
        "id": "55a29342.78013c",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "si message",
        "func": "msg.payload=\"chargement du dictionnaire terminée\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 2020,
        "wires": [
            [
                "4429b7ce.f5b6c8"
            ]
        ]
    },
    {
        "id": "4429b7ce.f5b6c8",
        "type": "win-speak",
        "z": "dc4e7734.5f3478",
        "x": 1230,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "5a8eca96.2aa484",
        "type": "exec",
        "z": "dc4e7734.5f3478",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "30",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 650,
        "y": 2380,
        "wires": [
            [
                "fb0c87e0.7e3fc8"
            ],
            [
                "fb0c87e0.7e3fc8"
            ],
            [
                "fb0c87e0.7e3fc8"
            ]
        ]
    },
    {
        "id": "2bd0e95d.7623d6",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "sav_kb",
        "func": "msg.payload =global.get(\"swan_path\")+\"\\\\keybinding_sc\\\\copy_kb.bat \\\"\"+global.get(\"sc_path\")+\"\\\" \\\"\"+global.get(\"swan_path\")+\"\\\"\"\n//msg.payload = global.get(\"sc_path\")+global.get(\"swan_path\")\n\n\nreturn msg;\n",
        "outputs": "1",
        "noerr": 0,
        "x": 400,
        "y": 2380,
        "wires": [
            [
                "5a8eca96.2aa484",
                "4be6a932.2e1568"
            ]
        ]
    },
    {
        "id": "7d7f9b7e.aa8694",
        "type": "inject",
        "z": "dc4e7734.5f3478",
        "name": "léxique créator",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 220,
        "y": 2380,
        "wires": [
            [
                "2bd0e95d.7623d6"
            ]
        ]
    },
    {
        "id": "4be6a932.2e1568",
        "type": "debug",
        "z": "dc4e7734.5f3478",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 650,
        "y": 2440,
        "wires": []
    },
    {
        "id": "fb0c87e0.7e3fc8",
        "type": "debug",
        "z": "dc4e7734.5f3478",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 910,
        "y": 2380,
        "wires": []
    },
    {
        "id": "cceb969.20a1b68",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "Config initiale systéme",
        "func": "//instruction en attente\nglobal.set(\"SWAN_M\",[])\n//où se trouve swan\nglobal.set('swan_path','C:\\\\swan')\n\n//Où se trouve votre répertoire sc live I:\\\\Roberts Space Industries\\\\StarCitizen\\\\LIVE\\\\n\";\nglobal.set(\"sc_path\",\"I:\\\\Roberts Space Industries\\\\StarCitizen\\\\LIVE\\\\\");\n\n//où se trouve le répertoire son deswan\nglobal.set('path_sound',global.get('swan_path')+`\\\\sounds\\\\`);\n\n//quelle est le nom de swan\nglobal.set('swan_name',\"SWAN\");\n\n//quelle est le ancien nom de swan\nglobal.set('last_swan_name',\"SWAN\");\n\n//quella voix à utiliser\nglobal.set('voice',\"voice_1\");\n\n//a quelle niveau de confiance doit elle réagir\nglobal.set('confiance_gate',0.80);\n\n//volume de swan\nglobal.set('volume',0.7);\n\n//volume de swan\nglobal.set('volume2',0.5);\n\n//swan sera t'elle à l'acoute au démarrage\nglobal.set('swan_active',true);\n\n//balayage actif\nglobal.set('spy_scan',false);\n\n//swan utilise t'elle les sons (true) ou juste un bip (false)\nglobal.set('discret',false);\n\n//etat du lecteur audio\nglobal.set(\"player_status\",\"standy\")\n\n//paramétre et localisation de vlc\nglobal.set('vlc_path',`\"C:\\\\Program Files\\\\VideoLAN\\\\VLC\\\\vlc.exe\" `)\nglobal.set('vlc_para',`--gain=`+global.get('volume')+` --volume=100 --qt-start-minimized --play-and-exit --qt-notification=0 --no-repeat --no-loop `)\nglobal.set('vlc_para2',`--gain=`+global.get('volume2')+` --volume=100 --qt-start-minimized --play-and-exit --qt-notification=0 --no-repeat --no-loop `)\n//global.set('a_k_short_path',global.get('swan_path')+\"\\\\autohotkey\\\\keyboard.ahk\")\n//global.set('a_k_long_path',global.get('swan_path')+\"\\\\autohotkey\\\\keyboard_long.ahk\")\nglobal.set('a_k_send_path',global.get('swan_path')+\"\\\\autohotkey\\\\send_text.ahk\")\n//global.set('a_k_alt_left_path',global.get('swan_path')+\"\\\\autohotkey\\\\keyboard_left_alt.ahk\")\nglobal.set('a_k_auto_path',global.get('swan_path')+\"\\\\autohotkey\\\\keyboard_auto.ahk\")\nglobal.set('a_k_auto_long_path',global.get('swan_path')+\"\\\\autohotkey\\\\keyboard_auto_long.ahk\")\nglobal.set('a_k_mouse',global.get('swan_path')+\"\\\\autohotkey\\\\mouse_click.ahk\")\nglobal.set(\"jsonflow\",\"\")\n\nconsole.log(`Le nom de votre IA est   : ${ global.get(\"swan_name\")}`)\nconsole.log(`les sons sont configurés à l'adresse : ${ global.get(\"path_sound\")}`)\nconsole.log(`le seuil d'assurance de reconnaisse est à  : ${ global.get(\"confiance_gate\")}`)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 180,
        "wires": [
            [
                "62ea4faf.c5664"
            ]
        ]
    },
    {
        "id": "62ea4faf.c5664",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "Config initiale clavier",
        "func": "//train\nglobal.set('v_atc_request',``);\n\nglobal.set('v_toggle_landing_system',`{n}`);\nglobal.set('v_toggle_landing_system',`{n}`);\n\nglobal.set('v_lights',`{l}`);\nglobal.set('v_lights',`{l}`);\n\nglobal.set('v_flightready',`{r}`);\n\nglobal.set('v_starmap',`{F2}`);\n\nglobal.set('v_invoke_ping',`{TAB}`);\n\nglobal.set('v_open_all_doors',``);\nglobal.set('v_close_all_doors',``);\n\nglobal.set('v_power_set_thrusters_on',`{i}`);\nglobal.set('v_power_set_thrusters_off',`{i}`);\n\nglobal.set('v_power_set_on',`{u}`);\nglobal.set('v_power_set_off',`{u}`);\n\nglobal.set('v_toggle_quantum_mode',`{b}`);\nglobal.set('v_toggle_quantum_mode',`{b}`);\nglobal.set('v_toggle_qdrive_engagement',`{LONG}{b}`);\n\nglobal.set('open_min_tools',`{,}`);\nglobal.set('close_min_tools',`{,}`);\nglobal.set('v_jettison_volatile_cargo',`{LAlt}{j}`);\n\nglobal.set('v_toggle_mining_mode',`{right_click}`);\n\nglobal.set('exit',`{LONG}{y}`);\n\nglobal.set('v_toggle_vtol',`{k}`);\nglobal.set('v_toggle_vtol',`{k}`);\n\nglobal.set('v_capacitor_assignment_weapon_combined_increase_max',`{F5}`);\nglobal.set('v_capacitor_assignment_engine_combined_increase_max',`{F6}`);\nglobal.set('v_capacitor_assignment_shield_combined_increase_max',`{F7}`);\nglobal.set('v_capacitor_assignment_reset',`{F8}`);\n\nglobal.set('v_shield_reset_level',`{Numpad5}`);\nglobal.set('v_shield_raise_level_forward',`{Numpad8}`);\nglobal.set('v_shield_raise_level_back',`{Numpad2}`);\nglobal.set('v_shield_raise_level_left',`{Numpad4}`);\nglobal.set('v_shield_raise_level_right',`{Numpad6}`);\n\nglobal.set('v_target_cycle_in_view_reset',`{t}`);\nglobal.set('v_target_unlock_selected',`{LAlt}{t}`);\nglobal.set('v_toggle_missile_mode',`{molette_click}`);\nglobal.set('v_weapon_launch_missile',`{left_click}`);\nglobal.set('v_weapon_increase_max_missiles',`{g}`);\nglobal.set('v_ifcs_toggle_vector_decoupling', `{LAlt}{c}`)\n\nglobal.set('my_id_discord',`Flo3376#8040`);\nglobal.set('my_discord',`https://discord.gg/ZY3Gwdav`);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 180,
        "wires": [
            [
                "a6a72e4d.10aa"
            ]
        ]
    },
    {
        "id": "24f60d70.81ca92",
        "type": "trigger",
        "z": "dc4e7734.5f3478",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "name": "",
        "x": 200,
        "y": 740,
        "wires": [
            [
                "b4303cb4.dd078"
            ]
        ]
    },
    {
        "id": "d628bc6b.c2616",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "si message",
        "func": "msg.payload=\"chargement de la configuration initiale\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 140,
        "wires": [
            [
                "e1e66bc.8903898"
            ]
        ]
    },
    {
        "id": "e1e66bc.8903898",
        "type": "win-speak",
        "z": "dc4e7734.5f3478",
        "x": 1090,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "391dddc3.1db832",
        "type": "comment",
        "z": "dc4e7734.5f3478",
        "name": "Etape1-chargement config initial",
        "info": "\n\n",
        "x": 370,
        "y": 140,
        "wires": []
    },
    {
        "id": "a6a72e4d.10aa",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "sound_start_up",
        "func": "let sound=`\\\"`+global.get(\"path_sound\")+`system_swan\\\\initial_dem.mp3\\\" `;\n    msg.payload= global.get(`vlc_path`)+\"\"+global.get(`vlc_para`)+sound;\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 180,
        "wires": [
            [
                "bcb55429.635dc8",
                "a03cbc6.10d984"
            ]
        ]
    },
    {
        "id": "a03cbc6.10d984",
        "type": "exec",
        "z": "dc4e7734.5f3478",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1250,
        "y": 180,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "c1da69a6.25d7c8",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "si message",
        "func": "msg.payload=\"chargement de la base de donnée sonore\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 740,
        "wires": [
            [
                "fd46ef64.606af"
            ]
        ]
    },
    {
        "id": "fd46ef64.606af",
        "type": "win-speak",
        "z": "dc4e7734.5f3478",
        "x": 1090,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "da10b26f.7cddc",
        "type": "win-speak",
        "z": "dc4e7734.5f3478",
        "x": 650,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "23171d0c.221aa2",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "si message",
        "func": "msg.payload=\"Réécriture et chargement des fichiers de commandes terminé\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 2080,
        "wires": [
            [
                "da10b26f.7cddc"
            ]
        ]
    },
    {
        "id": "bcb55429.635dc8",
        "type": "file in",
        "z": "dc4e7734.5f3478",
        "name": "open config.ini",
        "filename": "./../config.ini",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 340,
        "y": 260,
        "wires": [
            [
                "b38514a1.7b0028"
            ]
        ]
    },
    {
        "id": "b38514a1.7b0028",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "config loader",
        "func": "data=msg.payload.split('\\n');\n\nlet data_to_load=[];\n\nfor(i=0; i< data.length; i++)\n{\n    if(!data[i].startsWith('*') && !data[i].startsWith('#'))\n    {\n        if(data[i]!==\"\"){\n           data_to_load.push(data[i]);\n        }\n        \n    }\n}\n\nfor(i=0; i< data_to_load.length; i++)\n{\n    //console.log(data_to_load[i])\n    let data=data_to_load[i].split('=');\n    global.set(data[0], data[1])\n    //quella voix à utiliser\n\n    \n   //global.set\n}\n\nglobal.set('vlc_para',`--gain=`+global.get('volume')+` --volume=200  --qt-start-minimized --play-and-exit --qt-notification=0 --no-repeat --no-loop `)\n\n\n\nglobal.set(\"SWAN_M\",[])\n\nglobal.set('a_k_send_path',global.get('swan_path')+\"\\\\autohotkey\\\\send_text.ahk\")\nglobal.set('a_k_auto_path',global.get('swan_path')+\"\\\\autohotkey\\\\keyboard_auto.ahk\")\nglobal.set('a_k_auto_long_path',global.get('swan_path')+\"\\\\autohotkey\\\\keyboard_auto_long.ahk\")\nglobal.set('a_k_mouse',global.get('swan_path')+\"\\\\autohotkey\\\\mouse_click.ahk\")\nglobal.set('path_sound',global.get('swan_path')+'\\\\sounds\\\\');\n\nif(global.get('swan_active')==='true')\n{\n    global.set('swan_active',true)\n}\nelse\n{\n     global.set('swan_active',false)\n}\n\nif(global.get('discret')==='true')\n{\n    global.set('discret',true)\n}\nelse\n{\n     global.set('discret',false)\n}\nmsg={}\nmsg.topic=true\nmsg.payload=\"config chargée\"\nreturn msg\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 260,
        "wires": [
            [
                "5b262ebd.2a2ec"
            ]
        ]
    },
    {
        "id": "dc5f5dcf.f2849",
        "type": "comment",
        "z": "dc4e7734.5f3478",
        "name": "Etape2-chargement fichier config",
        "info": "\n\n",
        "x": 350,
        "y": 220,
        "wires": []
    },
    {
        "id": "fc318d02.652bc",
        "type": "trigger",
        "z": "dc4e7734.5f3478",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "name": "",
        "x": 580,
        "y": 700,
        "wires": [
            [
                "f67e5292.f06fc"
            ]
        ]
    },
    {
        "id": "f67e5292.f06fc",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "Config creator",
        "func": "msg.payload=\"**************************************************\\n\";\nmsg.payload+=\"*         \t  config générale\\n\";\nmsg.payload+=\"**************************************************\\n\\n\";\n\n\nmsg.payload+=\"# Où se trouve Swan par defaut=C:\\\\swan\\n\";\nmsg.payload+=\"swan_path=\"+global.get(\"swan_path\")+\"\\n\\n\";\n\nmsg.payload+=\"# Où se trouve votre répertoire sc live I:\\\\Roberts Space Industries\\\\StarCitizen\\\\LIVE\\\\\\n\";\nmsg.payload+=\"sc_path=\"+global.get(\"sc_path\")+\"\\n\\n\";\n\nmsg.payload+=\"# Comment allez vous l'appeler !!!le nom doit être en majuscule et sans espace,\\n\";\nmsg.payload+=\"swan_name=\"+global.get(\"swan_name\")+\"\\n\";\nmsg.payload+=\"# Quelle voix utilisez vous (voix_1, voix_2), voix_1 ->SWAN voix_2->TROPPER par défaut voix_1\\n\";\nmsg.payload+=\"voice=\"+global.get(\"voice\")+\"\\n\\n\";\n\nmsg.payload+=\"# Si vous avez déjà modifier le nom et que vous voulez en changer de nouveau, il faut mettre le dernier nom utilisé\\n\";\nmsg.payload+=\"last_swan_name=\"+global.get(\"last_swan_name\")+\"\\n\\n\";\n\nmsg.payload+=\"# Niveau sévérité 0 à 1, plus il est faible plus elle risque de comprendre n'importe quoi,\\n\";\nmsg.payload+=\"# plus il est élevé plus vous devrez avoir une locution parfaite\\n\";\nmsg.payload+=\"# par défaut à 0.80\\n\";\nmsg.payload+=\"confiance_gate=\"+global.get(\"confiance_gate\")+\"\\n\\n\";\n\nmsg.payload+=\"# Niveau sonore 0 à 2, proche 0 inaudible, proche de 2 très très fort\\n\";\nmsg.payload+=\"# par défaut à 0.9\\n\";\nmsg.payload+=\"volume=\"+global.get(\"volume\")+\"\\n\\n\";\n\nmsg.payload+=\"# Swan vous écoutes dés le démarrage true = oui, false = non\\n\";\nmsg.payload+=\"# par défaut true\\n\";\nmsg.payload+=\"swan_active=\"+global.get(\"swan_active\")+\"\\n\\n\";\n\n\nmsg.payload+=\"# Swan utilise sa voie pour vous réponde true = oui, false = non\\n\";\nmsg.payload+=\"# par défaut true\\n\";\nmsg.payload+=\"discret=\"+global.get(\"discret\")+\"\\n\\n\";\n\nmsg.payload+=\"# Swan utilise vlc, où se trouve t'il?\\n\";\nmsg.payload+=\"# par défaut \\\"C:\\\\Program Files\\\\VideoLAN\\\\VLC\\\\vlc.exe\\\"\\n\";\nmsg.payload+=\"vlc_path=\"+global.get(\"vlc_path\")+\"\\n\\n\";\n\nmsg.payload+=\"# La définition de votre écran pour Higor le déménageur breton\\n\";\nmsg.payload+=\"# 1920x1080 ou  2560x1440 ou 7680x1440\\n\";\nmsg.payload+=\"my_discord=\"+global.get(\"display\")+\"\\n\\n\\n\";\n\nmsg.payload+=\"\\n\\n**************************************************\\n\";\nmsg.payload+=\"*         \t  message à envoyer\\n\";\nmsg.payload+=\"**************************************************\\n\\n\";\nmsg.payload+=\"# votre identifiant discord\\n\";\nmsg.payload+=\"my_id_discord=\"+global.get(\"my_id_discord\")+\"\\n\";\nmsg.payload+=\"# votre discord\\n\";\nmsg.payload+=\"my_discord=\"+global.get(\"my_discord\")+\"\\n\\n\\n\";\n\n\n\n\nmsg.payload+=\"\\n\\n**************************************************\\n\";\nmsg.payload+=\"*         \t  config clavier\\n\";\nmsg.payload+=\"**************************************************\\n\\n\";\n\nmsg.payload+=\"**************************************************\\n\";\nmsg.payload+=\"*     code clavier\\n\";\nmsg.payload+=\"*     ------------\\n\";\nmsg.payload+=\"*     !!!attention chaque touche doit être entouré de { et de }, exemple pour la touche u {u}\\n\";\nmsg.payload+=\"*     alt gauche {LAlt} exemple {LAlt}j\\n\";\nmsg.payload+=\"*     alt droit pas utilisable pour le moment\\n\";\nmsg.payload+=\"*     shift gauche {LShift} exemple {LShift}j\\n\";\nmsg.payload+=\"*     shift droit {RShift} exemple {RShift}j\\n\";\nmsg.payload+=\"*     controle gauche {RCtrl} exemple {RCtrl}j\\n\";\nmsg.payload+=\"*     Controle droit {LCtrl} exemple {LCtrl}j\\n\";\nmsg.payload+=\"*     touche fonction type F1 {F1}\\n\";\nmsg.payload+=\"*     chiffre clavier numéric 5 {NUMPAD5}\\n\";\nmsg.payload+=\"*     appuie long sur b {LONG}B (uniquement pour les touches simple pas de combinaison)\\n\";\nmsg.payload+=\"*     click droit {right_click}\\n\";\nmsg.payload+=\"*     click molette {molette_click}\\n\";\nmsg.payload+=\"*     click gauche {left_click}\\n\";\nmsg.payload+=\"**************************************************\\n\";\nmsg.payload+=\"# Demander l'atérrissage\\n\";\nmsg.payload+=\"#v_atc_request=\"+global.get(\"v_atc_request\")+\"\\n\";\n\nmsg.payload+=\"# Ouvrir le train d'atérrissage\\n\";\nmsg.payload+=\"#v_toggle_landing_system=\"+global.get(\"v_toggle_landing_system\")+\"\\n\";\nmsg.payload+=\"# Fermer le train d'atérrissage\\n\";\nmsg.payload+=\"#v_toggle_landing_system=\"+global.get(\"v_toggle_landing_system\")+\"\\n\\n\";\n\nmsg.payload+=\"# passer en découplé\\n\";\nmsg.payload+=\"#v_ifcs_toggle_vector_decoupling=\"+global.get(\"v_ifcs_toggle_vector_decoupling\")+\"\\n\";\nmsg.payload+=\"# passer en couplé\\n\";\nmsg.payload+=\"#v_ifcs_toggle_vector_decoupling=\"+global.get(\"v_ifcs_toggle_vector_decoupling\")+\"\\n\\n\";\n\n\nmsg.payload+=\"# Allumer les phares\\n\";\nmsg.payload+=\"#v_lights=\"+global.get(\"v_lights\")+\"\\n\";\nmsg.payload+=\"# Eteindre les phares\\n\";\nmsg.payload+=\"#v_lights=\"+global.get(\"v_lights\")+\"\\n\\n\";\n\nmsg.payload+=\"# Ready to fly (r)\\n\";\nmsg.payload+=\"#v_flightready=\"+global.get(\"v_flightready\")+\"\\n\\n\";\n\nmsg.payload+=\"# Afficher / fermer la starmap\\n\";\nmsg.payload+=\"#v_starmap=\"+global.get(\"v_starmap\")+\"\\n\\n\";\n\nmsg.payload+=\"# Envoyer un ping\\n\";\nmsg.payload+=\"#v_invoke_ping=\"+global.get(\"v_invoke_ping\")+\"\\n\\n\";\n\nmsg.payload+=\"# Ouvrir les portes\\n\";\nmsg.payload+=\"#v_open_all_doors=\"+global.get(\"v_open_all_doors\")+\"\\n\";\nmsg.payload+=\"# Fermer les portes\\n\";\nmsg.payload+=\"#v_close_all_doors=\"+global.get(\"v_close_all_doors\")+\"\\n\\n\";\n\nmsg.payload+=\"# Démarrer les moteurs\\n\";\nmsg.payload+=\"#v_power_set_thrusters_on=\"+global.get(\"v_power_set_thrusters_on\")+\"\\n\";\nmsg.payload+=\"# Eteindre les moteurs\\n\";\nmsg.payload+=\"#v_power_set_thrusters_off=\"+global.get(\"v_power_set_thrusters_off\")+\"\\n\\n\";\n\nmsg.payload+=\"# Démarrer les générateur\\n\";\nmsg.payload+=\"#v_power_set_on=\"+global.get(\"v_power_set_on\")+\"\\n\";\nmsg.payload+=\"# Eteindre les générateur\\n\";\nmsg.payload+=\"#v_power_set_off=\"+global.get(\"v_power_set_off\")+\"\\n\\n\";\n\nmsg.payload+=\"# Démarrer le moteur quantique\\n\";\nmsg.payload+=\"#v_toggle_quantum_mode=\"+global.get(\"v_toggle_quantum_mode\")+\"\\n\";\nmsg.payload+=\"# Eteindre le moteur quantique\\n\";\nmsg.payload+=\"#v_toggle_quantum_mode=\"+global.get(\"v_toggle_quantum_mode\")+\"\\n\";\nmsg.payload+=\"# lancer le saut quantique\\n\";\nmsg.payload+=\"#v_toggle_qdrive_engagement=\"+global.get(\"v_toggle_qdrive_engagement\")+\"\\n\\n\";\n\nmsg.payload+=\"# Ouvrir le bras de minage\\n\";\nmsg.payload+=\"#open_min_tools=\"+global.get(\"open_min_tools\")+\"\\n\";\nmsg.payload+=\"# Fermer le bras de minage\\n\";\nmsg.payload+=\"#close_min_tools=\"+global.get(\"close_min_tools\")+\"\\n\";\nmsg.payload+=\"# Changer l'outils du bras de minage\\n\";\nmsg.payload+=\"#v_toggle_mining_mode=\"+global.get(\"v_toggle_mining_mode\")+\"\\n\";\nmsg.payload+=\"# ejecter le cargo instable\\n\";\nmsg.payload+=\"#v_jettison_volatile_cargo=\"+global.get(\"v_jettison_volatile_cargo\")+\"\\n\\n\";\n\nmsg.payload+=\"# Sortir du cockpit\\n\";\nmsg.payload+=\"#exit=\"+global.get(\"exit\")+\"\\n\\n\";\n\nmsg.payload+=\"# activer VTOL\\n\";\nmsg.payload+=\"#v_toggle_vtol=\"+global.get(\"v_toggle_vtol\")+\"\\n\";\nmsg.payload+=\"# désactiver VTOL\\n\";\nmsg.payload+=\"#v_toggle_vtol=\"+global.get(\"v_toggle_vtol\")+\"\\n\\n\";\n\nmsg.payload+=\"# ajout de puissance sur le capacitor des armes\\n\";\nmsg.payload+=\"v_capacitor_assignment_weapon_increase=\"+global.get(\"v_capacitor_assignment_weapon_increase\")+\"\\n\";\nmsg.payload+=\"# ajout de puissance sur le capacitor des moteurs\\n\";\nmsg.payload+=\"v_capacitor_assignment_weapon_increase=\"+global.get(\"v_capacitor_assignment_weapon_increase\")+\"\\n\";\nmsg.payload+=\"# ajout de puissance sur le capacitor des boucliers\\n\";\nmsg.payload+=\"v_capacitor_assignment_shield_increase=\"+global.get(\"v_capacitor_assignment_shield_increase\")+\"\\n\";\nmsg.payload+=\"# capacitors équilibrés\\n\";\nmsg.payload+=\"v_capacitor_assignment_reset=\"+global.get(\"v_capacitor_assignment_reset\")+\"\\n\\n\";\n\nmsg.payload+=\"# transfert de puissance sur le bouclier avant\\n\";\nmsg.payload+=\"#v_shield_raise_level_forward=\"+global.get(\"v_shield_raise_level_forward\")+\"\\n\";\nmsg.payload+=\"# transfert de puissance sur le bouclier arrière\\n\";\nmsg.payload+=\"#v_shield_raise_level_back=\"+global.get(\"v_shield_raise_level_back\")+\"\\n\";\nmsg.payload+=\"# transfert de puissance sur le bouclier gauche\\n\";\nmsg.payload+=\"#v_shield_raise_level_left=\"+global.get(\"v_shield_raise_level_left\")+\"\\n\";\nmsg.payload+=\"# transfert de puissance sur le bouclier droit\\n\";\nmsg.payload+=\"#v_shield_raise_level_right=\"+global.get(\"v_shield_raise_level_right\")+\"\\n\";\nmsg.payload+=\"# boucliers équilibrés\\n\";\nmsg.payload+=\"#v_shield_reset_level=\"+global.get(\"v_shield_reset_level\")+\"\\n\\n\";\n\nmsg.payload+=\"# verrouillage d'une cible\\n\";\nmsg.payload+=\"#target_lock=\"+global.get('v_target_cycle_in_view_reset')+\"\\n\";\n\nmsg.payload+=\"# déverrouillage d'une cible\\n\";\nmsg.payload+=\"#target_unlock=\"+global.get('v_target_unlock_selected')+\"\\n\";\n\nmsg.payload+=\"# passage de missile à canon et inversement\\n\";\nmsg.payload+=\"#v_toggle_missile_mode=\"+global.get('v_toggle_missile_mode')+\"\\n\";\n\nmsg.payload+=\"# feux missile\\n\";\nmsg.payload+=\"#v_weapon_launch_missile=\"+global.get('v_weapon_launch_missile')+\"\\n\";\n\nmsg.payload+=\"# changement du nombre de missile (cyclique)\\n\";\nmsg.payload+=\"#v_weapon_increase_max_missiles=\"+global.get('v_weapon_increase_max_missiles')+\"\\n\\n\";\n\nreturn msg;\n//config de base\n\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 760,
        "y": 700,
        "wires": [
            [
                "e8212bc4.f5c168",
                "24f60d70.81ca92"
            ]
        ]
    },
    {
        "id": "e8212bc4.f5c168",
        "type": "file",
        "z": "dc4e7734.5f3478",
        "name": "",
        "filename": "./../config.ini",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 970,
        "y": 700,
        "wires": []
    },
    {
        "id": "d640c3da.b51fa",
        "type": "exec",
        "z": "dc4e7734.5f3478",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "30",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 530,
        "y": 340,
        "wires": [
            [],
            [],
            [
                "72953f73.a807d"
            ]
        ]
    },
    {
        "id": "5b262ebd.2a2ec",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "sav_kb",
        "func": "msg.payload =global.get(\"swan_path\")+\"\\\\keybinding_sc\\\\copy_kb.bat \\\"\"+global.get(\"sc_path\")+\"\\\" \\\"\"+global.get(\"swan_path\")+\"\\\"\"\n//msg.payload = global.get(\"sc_path\")+global.get(\"swan_path\")\n\n\nreturn msg;\n",
        "outputs": "1",
        "noerr": 0,
        "x": 320,
        "y": 340,
        "wires": [
            [
                "d640c3da.b51fa"
            ]
        ]
    },
    {
        "id": "a1a31857.074b18",
        "type": "comment",
        "z": "dc4e7734.5f3478",
        "name": "Etape3-sauvergarde du keybinding et récupération automatique des attributions claviers",
        "info": "\n\n",
        "x": 520,
        "y": 300,
        "wires": []
    },
    {
        "id": "8fd87ebc.8026d",
        "type": "xml",
        "z": "dc4e7734.5f3478",
        "name": "",
        "attr": "name",
        "chr": "star2",
        "x": 950,
        "y": 340,
        "wires": [
            [
                "31669c69.b35f74",
                "ad945257.431c8"
            ]
        ]
    },
    {
        "id": "72953f73.a807d",
        "type": "file in",
        "z": "dc4e7734.5f3478",
        "name": "open my_kb.xml",
        "filename": "./../my_kb.xml",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 760,
        "y": 340,
        "wires": [
            [
                "8fd87ebc.8026d",
                "1540ea70.dbad06"
            ]
        ]
    },
    {
        "id": "31669c69.b35f74",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "to action map",
        "func": "let extract={};\n\nfor (i=0;i<msg.payload.ActionMaps.ActionProfiles[0].actionmap.length;i++)\n{\n    for(i2=0;i2<msg.payload.ActionMaps.ActionProfiles[0].actionmap[i].action.length;i2++)\n    {\n        let action_name=msg.payload.ActionMaps.ActionProfiles[0].actionmap[i].action[i2].name.name;\n        let action_rebind=msg.payload.ActionMaps.ActionProfiles[0].actionmap[i].action[i2].rebind;\n        \n        extract[action_name]=[];\n        \n        for (i3=0;i3<action_rebind.length;i3++)\n        {\n            if((action_rebind[i3].name.input.startsWith(\"mo1_\") || action_rebind[i3].name.input.startsWith(\"kb1_\")) && !action_rebind[i3].name.input.endsWith(\"_\"))\n            {\n                let new_input=action_rebind[i3].name.input.replace(\"kb1_\",\"\");\n                new_input=new_input.replace(\"mo1_\",\"\");\n                new_input=new_input.replace(\"mouse1\",\"{left_click}\");\n                new_input=new_input.replace(\"mouse2\",\"{right_click}\");\n                new_input=new_input.replace(\"mouse3\",\"{molette_click}\");\n                \n                new_input=new_input.replace(\"space\",\"{space}\");\n                new_input=new_input.replace(\"apostrophe\",\"{ù}\");\n                new_input=new_input.replace(\"semicolon\",\"{m}\");\n                new_input=new_input.replace(\"comma\",\"{;}\");\n                new_input=new_input.replace(\"period\",\"{:}\");\n                new_input=new_input.replace(\"backslash\",\"{*}\");\n                new_input=new_input.replace(\"slash\",\"{!}\");\n                new_input=new_input.replace(\"Backspace\",\"{Backspace}\");\n                \n                /*new_input=new_input.replace(\"lalt+\",\"{LAlt}\");\n                new_input=new_input.replace(\"ralt+\",\"{RAlt}\");\n                new_input=new_input.replace(\"lctrl+\",\"{Lctrl}\");\n                new_input=new_input.replace(\"rctrl+\",\"{Rctrl}\");\n                new_input=new_input.replace(\"lshift+\",\"{LShift}\");\n                new_input=new_input.replace(\"rshift+\",\"{RShift}\");*/\n                \n                new_input=new_input.replace(\"f10\",\"{F10}\");\n                new_input=new_input.replace(\"f11\",\"{F11}\");\n                new_input=new_input.replace(\"f12\",\"{F12}\");\n                new_input=new_input.replace(\"rbracket\",\"{$}\");\n                new_input=new_input.replace(\"lbracket\",\"{^}\");\n                new_input=new_input.replace(\"f1\",\"{F1}\");\n                new_input=new_input.replace(\"f2\",\"{F2}\");\n                new_input=new_input.replace(\"f3\",\"{F3}\");\n                new_input=new_input.replace(\"f4\",\"{F4}\");\n                new_input=new_input.replace(\"f5\",\"{F5}\");\n                new_input=new_input.replace(\"f6\",\"{F6}\");\n                new_input=new_input.replace(\"f7\",\"{F8}\");\n                new_input=new_input.replace(\"f9\",\"{F9}\");\n                \n                \n                new_input=new_input.replace(\"np_1\",\"{Numpad1}\");\n                new_input=new_input.replace(\"np_2\",\"{Numpad2}\");\n                new_input=new_input.replace(\"np_3\",\"{Numpad3}\");\n                new_input=new_input.replace(\"np_4\",\"{Numpad4}\");\n                new_input=new_input.replace(\"np_5\",\"{Numpad5}\");\n                new_input=new_input.replace(\"np_6\",\"{Numpad6}\");\n                new_input=new_input.replace(\"np_7\",\"{Numpad7}\");\n                new_input=new_input.replace(\"np_8\",\"{Numpad8}\");\n                new_input=new_input.replace(\"np_9\",\"{Numpad9}\");\n                new_input=new_input.replace(\"np_0\",\"{Numpad0}\");\n              \n                if(new_input.length===1)\n                {\n                    new_input=\"{\"+new_input+\"}\"\n                }\n                else{\n                    let temp_input=new_input;\n                    let n_input=\"\"\n                    \n                    if(temp_input.includes(\"lalt+\"))\n                    {\n                        temp_input=temp_input.replace(\"lalt+\",\"\");\n                        n_input+=\"{LAlt}\";\n                        \n                    }\n                    if(temp_input.includes(\"ralt+\"))\n                    {\n                        temp_input=temp_input.replace(\"ralt+\",\"\");\n                        n_input+=\"{RAlt}\";\n                        \n                    }\n                    if(temp_input.includes(\"lctrl+\"))\n                    {\n                        temp_input=temp_input.replace(\"lctrl+\",\"\");\n                        n_input+=\"{Lctrl}\";\n                        \n                    }\n                    if(temp_input.includes(\"rctrl+\"))\n                    {\n                        temp_input=temp_input.replace(\"rctrl+\",\"\");\n                        n_input+=\"{Rctrl}\";\n                        \n                    }\n                    if(temp_input.includes(\"lshift+\"))\n                    {\n                        temp_input=temp_input.replace(\"lshift+\",\"\");\n                        n_input+=\"{LShift}\";\n                        \n                    }\n                    if(temp_input.includes(\"rshift+\"))\n                    {\n                        temp_input=temp_input.replace(\"rshift+\",\"\");\n                        n_input+=\"{RShift}\";\n                        \n                    }\n                    //if(temp_input.length===1)\n                    //{\n                        temp_input=\"{\"+temp_input+\"}\";\n                        temp_input=temp_input.replace(\"{{\",\"{\")\n                        temp_input=temp_input.replace(\"}}\",\"}\")\n                   // }\n                    \n                    console.log(\"tentative : \"+n_input+temp_input)\n                }\n                \n                \n                \n               extract[action_name].push(new_input); \n            \n                \n                if (global.get(action_name)!==undefined)\n                {\n                    //console.log(\"j'ai une attribution pour \"+action_name+\" ==>>\"+global.get(action_name)+\" souhaité \"+action_rebind[i3].name.input.replace(\"kb1_\",\"\")+\" qui devra devenir \"+new_input)\n                    global.set(action_name,new_input);\n                 }\n            }\n        }\n    }\n}\n\nObject.keys(extract).forEach(key => {\n  if(extract[key].length<1)\n    {\n       delete extract[key]; \n    }\n});\n\nconsole.log(extract)\n\nmsg.data=extract;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1140,
        "y": 340,
        "wires": [
            [
                "debf7a3d.85d1f8",
                "fc318d02.652bc"
            ]
        ]
    },
    {
        "id": "44c06adb.5bc4b4",
        "type": "inject",
        "z": "dc4e7734.5f3478",
        "name": "suivant",
        "topic": "",
        "payload": "kill",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 440,
        "wires": [
            [
                "5b262ebd.2a2ec"
            ]
        ]
    },
    {
        "id": "debf7a3d.85d1f8",
        "type": "debug",
        "z": "dc4e7734.5f3478",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1340,
        "y": 260,
        "wires": []
    },
    {
        "id": "1540ea70.dbad06",
        "type": "debug",
        "z": "dc4e7734.5f3478",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 910,
        "y": 420,
        "wires": []
    },
    {
        "id": "ad945257.431c8",
        "type": "debug",
        "z": "dc4e7734.5f3478",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 1090,
        "y": 420,
        "wires": []
    },
    {
        "id": "4a83b9f7.b4e3d8",
        "type": "inject",
        "z": "dc4e7734.5f3478",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 170,
        "y": 580,
        "wires": [
            [
                "51c84ad9.efd814"
            ]
        ]
    },
    {
        "id": "51c84ad9.efd814",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "capture config clean chargée",
        "func": "console.log(global.keys())\n\nlet purge=[\n\"tzModule\",\n\"xpathModule\",\n\"domModule\",\n\"uuidv1\",\n\"uuidv4\",\n\"uuidv5\",\n\"CONFIG\",\n\"get\",\n\"set\",\n\"close_gear_q\",\n\"close_gear_sound\",\n\"open_gear_q\",\n\"open_gear_sound\",\n\"base_q\",\n\"base_sound\",\n\"lum_on_q\",\n\"lum_on_sound\",\n\"lum_off_q\",\n\"lum_off_sound\",\n\"online_q\",\n\"online_sound\",\"starmap_on_q\",\n\"starmap_on_sound\",\n\"starmap_off_q\",\n\"starmap_off_sound\",\n\"active_scan_on_q\",\n\"active_scan_on_sound\",\n\"door_close_q\",\n\"door_close_sound\",\n\"door_open_q\",\"door_open_sound\",\n\"engine_on_q\",\"engine_on_sound\",\n\"engine_off_q\",\n\"engine_off_sound\",\n\"gen_on_q\",\n\"gen_on_sound\",\n\"gen_off_q\",\n\"gen_off_sound\",\n\"quantum_on_q\",\n\"quantum_on_sound\",\n\"quantum_off_q\",\n\"quantum_off_sound\",\n\"quantum_jump_sound\",\n\"commun_swan_q\",\n\"commun_swan_sound\",\n\"mining_in_q\",\"mining_in_sound\",\n\"mining_out_q\",\"mining_out_sound\",\n\"mining_switch_q\",\n\"mining_switch_sound\",\n\"exit_q\",\"exit_sound\",\n\"VTOL_close_q\",\n\"VTOL_close_sound\",\n\"VTOL_open_q\",\n\"VTOL_open_sound\",\n\"mod_minage_q\",\n\"mod_minage_sound\",\n\"mod_defensif_q\",\n\"mod_defensif_sound\",\n\"mod_navigation_q\",\n\"mod_navigation_sound\",\n\"mod_offensif_q\",\n\"mod_offensif_sound\",\n\"ready_to_fly_q\",\n\"ready_to_fly_sound\",\n\"quantum_jump_q\",\n\"path_sound\",\"spy_scan\",\n\"active_scan_off_q\",\n\"active_scan_off_sound\",\n\"clear_take_off_q\",\n\"clear_landing_q\",\n\"clear_landing_sound\",\n\"clear_take_off_q\",\n\"clear_take_off_sound\",\n\"phase_aterrisage_q\",\n\"phase_aterrisage_sound\",\n\"phase_chil_q\",\n\"phase_chil_sound\",\n\"phase_combat_q\",\n\"phase_combat_sound\",\n\"phase_décollage_q\",\n\"phase_décollage_sound\"\n]\n\nfor (i=0; i<global.keys().length;i++)\n{\n    \n    if(purge.includes(global.keys()[i]))\n    {\n        \n    }\n    else{\n        console.log(global.keys()[i]+\"=\"+global.get(global.keys()[i]))\n    }\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 500,
        "y": 580,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c12573b5.1bf4e",
        "type": "inject",
        "z": "dc4e7734.5f3478",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 170,
        "y": 540,
        "wires": [
            [
                "df44089f.73af58"
            ]
        ]
    },
    {
        "id": "df44089f.73af58",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "capture config full chargé",
        "func": "console.log(global.keys())\n\nlet purge=[\n\"tzModule\",\n\"xpathModule\",\n\"domModule\",\n\"uuidv1\",\n\"uuidv4\",\n\"uuidv5\",\n\"CONFIG\",\n\"get\",\n\"set\",\n\"close_gear_q\",\n\"close_gear_sound\",\n\"open_gear_q\",\n\"open_gear_sound\",\n\"base_q\",\n\"base_sound\",\n\"lum_on_q\",\n\"lum_on_sound\",\n\"lum_off_q\",\n\"lum_off_sound\",\n\"online_q\",\n\"online_sound\",\"starmap_on_q\",\n\"starmap_on_sound\",\n\"starmap_off_q\",\n\"starmap_off_sound\",\n\"active_scan_on_q\",\n\"active_scan_on_sound\",\n\"door_close_q\",\n\"door_close_sound\",\n\"door_open_q\",\"door_open_sound\",\n\"engine_on_q\",\"engine_on_sound\",\n\"engine_off_q\",\n\"engine_off_sound\",\n\"gen_on_q\",\n\"gen_on_sound\",\n\"gen_off_q\",\n\"gen_off_sound\",\n\"quantum_on_q\",\n\"quantum_on_sound\",\n\"quantum_off_q\",\n\"quantum_off_sound\",\n\"quantum_jump_sound\",\n\"commun_swan_q\",\n\"commun_swan_sound\",\n\"mining_in_q\",\"mining_in_sound\",\n\"mining_out_q\",\"mining_out_sound\",\n\"mining_switch_q\",\n\"mining_switch_sound\",\n\"exit_q\",\"exit_sound\",\n\"VTOL_close_q\",\n\"VTOL_close_sound\",\n\"VTOL_open_q\",\n\"VTOL_open_sound\",\n\"mod_minage_q\",\n\"mod_minage_sound\",\n\"mod_defensif_q\",\n\"mod_defensif_sound\",\n\"mod_navigation_q\",\n\"mod_navigation_sound\",\n\"mod_offensif_q\",\n\"mod_offensif_sound\",\n\"ready_to_fly_q\",\n\"ready_to_fly_sound\",\n\"quantum_jump_q\",\n\"path_sound\",\"spy_scan\"\n]\n\nfor (i=0; i<global.keys().length;i++)\n{\n    \n    if(purge.includes(global.keys()[i]))\n    {\n        \n    }\n    else{\n        console.log(global.keys()[i]+\"=\"+global.get(global.keys()[i]))\n    }\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 490,
        "y": 540,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "aed19597.ce6c88",
        "type": "win-speak",
        "z": "dc4e7734.5f3478",
        "x": 1350,
        "y": 2300,
        "wires": [
            []
        ]
    },
    {
        "id": "d1a2ae4d.2226",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "si message",
        "func": "msg.payload=\"Démarrage terminé\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 2300,
        "wires": [
            [
                "aed19597.ce6c88"
            ]
        ]
    },
    {
        "id": "1fcff61b.b2652a",
        "type": "trigger",
        "z": "dc4e7734.5f3478",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "4",
        "extend": false,
        "units": "s",
        "reset": "",
        "name": "",
        "x": 980,
        "y": 2300,
        "wires": [
            [
                "d1a2ae4d.2226"
            ]
        ]
    },
    {
        "id": "27ee8e28.40ef72",
        "type": "inject",
        "z": "dc4e7734.5f3478",
        "name": "suivant",
        "topic": "",
        "payload": "kill",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 570,
        "y": 440,
        "wires": [
            [
                "72953f73.a807d"
            ]
        ]
    },
    {
        "id": "58ddb3b2.5ebc1c",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "sound_start_up",
        "func": "let sound=`\\\"`+global.get(\"path_sound\")+`system_swan\\\\second_dem.mp3\\\" `;\n    msg.payload= global.get(`vlc_path`)+\" \"+global.get(`vlc_para`)+sound;\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 2440,
        "wires": [
            [
                "480d0b13.737ba4"
            ]
        ]
    },
    {
        "id": "480d0b13.737ba4",
        "type": "exec",
        "z": "dc4e7734.5f3478",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1390,
        "y": 2440,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "120313f2.946ddc",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search vol_couplé sounds",
        "path": "./../sounds/phase_décollage/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 430,
        "y": 1560,
        "wires": [
            [
                "dac1688e.5f4ec8"
            ]
        ]
    },
    {
        "id": "8fdf3dac.2f05",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search vol_découplé sounds",
        "path": "./../sounds/vol_découplé/",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 720,
        "y": 1540,
        "wires": [
            [
                "8ef04fb8.4d7"
            ]
        ]
    },
    {
        "id": "dac1688e.5f4ec8",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"vol_couplé\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 1560,
        "wires": [
            [
                "916f2824.e0c8b8"
            ]
        ]
    },
    {
        "id": "8ef04fb8.4d7",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "set number directory",
        "func": "let thematique=\"vol_découplé\";\nglobal.set(thematique+\"_q\",msg.files.length);\nlet sounds_check=[]\n\nfor (i=0;i<msg.files.length;i++)\n{\n    if(msg.files[i].startsWith(global.get(\"voice\")))\n    {\n        sounds_check.push(msg.files[i])\n    }\n    \n}\nglobal.set(thematique+\"_sound\",sounds_check)\nmsg={};msg.start=\"Started\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 1540,
        "wires": [
            [
                "120313f2.946ddc"
            ]
        ]
    },
    {
        "id": "e127a19a.a9f2b",
        "type": "inject",
        "z": "dc4e7734.5f3478",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 80,
        "wires": [
            [
                "5dc0b54c.83702c"
            ]
        ]
    },
    {
        "id": "5dc0b54c.83702c",
        "type": "file in",
        "z": "dc4e7734.5f3478",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "ab7da42f.8a5f88"
            ]
        ]
    },
    {
        "id": "ab7da42f.8a5f88",
        "type": "json",
        "z": "dc4e7734.5f3478",
        "name": "from json",
        "pretty": false,
        "x": 440,
        "y": 80,
        "wires": [
            [
                "dd622c57.e12a5"
            ]
        ]
    },
    {
        "id": "dd622c57.e12a5",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"00_initialisation\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 80,
        "wires": [
            [
                "7ceb4e16.6d0f5"
            ]
        ]
    },
    {
        "id": "7ceb4e16.6d0f5",
        "type": "json",
        "z": "dc4e7734.5f3478",
        "name": "to json",
        "pretty": true,
        "x": 710,
        "y": 80,
        "wires": [
            [
                "bbc10634.d4a848"
            ]
        ]
    },
    {
        "id": "bbc10634.d4a848",
        "type": "file",
        "z": "dc4e7734.5f3478",
        "name": "00_initialisation.json",
        "filename": "./../viseo-bot-project/data/flow/master/00_initialisation.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 880,
        "y": 80,
        "wires": []
    },
    {
        "id": "c6ed6403.c7b1c8",
        "type": "comment",
        "z": "dc4e7734.5f3478",
        "name": "sauvegarde du flow pour exportation ou modeur",
        "info": "",
        "x": 220,
        "y": 40,
        "wires": []
    },
    {
        "id": "bf315ed9.d7f6a",
        "type": "inject",
        "z": "dc4e7734.5f3478",
        "name": "FLOW CREATOR",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 2680,
        "wires": [
            [
                "68416de.ebdbc94"
            ]
        ]
    },
    {
        "id": "68416de.ebdbc94",
        "type": "fs-ops-dir",
        "z": "dc4e7734.5f3478",
        "name": "search xml phraseo",
        "path": "./../viseo-bot-project/data/flow/master/",
        "pathType": "str",
        "filter": "*.json",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 350,
        "y": 2680,
        "wires": [
            [
                "abd85a25.2ec598"
            ]
        ]
    },
    {
        "id": "abd85a25.2ec598",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "conv tableau",
        "func": "let file_list=msg.files;\nmsg.payload=[];\n\nfor (i=0; i<file_list.length;i++)\n{\n     msg.payload.push(file_list[i]);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 2680,
        "wires": [
            [
                "dd8af41.fb91c08",
                "5c1191f4.c65d9"
            ]
        ]
    },
    {
        "id": "dd8af41.fb91c08",
        "type": "loop",
        "z": "dc4e7734.5f3478",
        "name": "parcour liste fichiers xml",
        "kind": "enum",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "payload",
        "enumerationType": "msg",
        "limit": "500",
        "loopPayload": "loop-val",
        "finalPayload": "final-last",
        "x": 730,
        "y": 2840,
        "wires": [
            [
                "aafdd7e2.cf4b08"
            ],
            [
                "5c1191f4.c65d9"
            ]
        ]
    },
    {
        "id": "5c1191f4.c65d9",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "fichier en cours",
        "func": "msg.payload=global.get('swan_path')+\"\\\\viseo-bot-project\\\\data\\\\flow\\\\master\\\\\"+msg.payload\nmsg.filename=msg.payload\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 2680,
        "wires": [
            [
                "dd8af41.fb91c08",
                "ee56777f.506bf8"
            ]
        ]
    },
    {
        "id": "ee56777f.506bf8",
        "type": "file in",
        "z": "dc4e7734.5f3478",
        "name": "auto",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 1130,
        "y": 2680,
        "wires": [
            [
                "33670303.0e121c"
            ]
        ]
    },
    {
        "id": "33670303.0e121c",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "to memory json",
        "func": "let data=global.get(\"jsonflow\")\n\ndata+=msg.payload\nglobal.set(\"jsonflow\",data)\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1320,
        "y": 2680,
        "wires": [
            []
        ]
    },
    {
        "id": "68a7dd6b.c4e724",
        "type": "debug",
        "z": "dc4e7734.5f3478",
        "name": "",
        "active": true,
        "console": "true",
        "complete": "payload",
        "x": 1160,
        "y": 2760,
        "wires": []
    },
    {
        "id": "aafdd7e2.cf4b08",
        "type": "function",
        "z": "dc4e7734.5f3478",
        "name": "",
        "func": "msg.payload=global.get(\"jsonflow\")\n\n\n\nvar patt = new RegExp(/\\]\\[/g);\n  msg.payload = msg.payload.replace(patt, \",\");\n  \n  \n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 2720,
        "wires": [
            [
                "68a7dd6b.c4e724",
                "591dd137.3657a"
            ]
        ]
    },
    {
        "id": "591dd137.3657a",
        "type": "file",
        "z": "dc4e7734.5f3478",
        "name": "",
        "filename": "./../viseo-bot-project/data/flow/flows.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1240,
        "y": 2720,
        "wires": []
    },
    {
        "id": "767f2fe6.a0c",
        "type": "comment",
        "z": "312c81eb.6f5b7e",
        "name": "Scénario mod navigation",
        "info": "\n\n",
        "x": 150,
        "y": 200,
        "wires": []
    },
    {
        "id": "5a45b632.8e7a68",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "Mod naviagation",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\n\nsearch.push(\"switch_to_navigation\")\n\t\t\t\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.includes(ask))\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 560,
        "y": 240,
        "wires": [
            [
                "3bbbd013.36edf"
            ],
            []
        ]
    },
    {
        "id": "e33ef19e.25bd9",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "Mod défensif",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"switch_to_defensif\")\n\t\t\t\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.includes(ask))\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 550,
        "y": 380,
        "wires": [
            [
                "8093d9cd.a16548"
            ],
            []
        ]
    },
    {
        "id": "b102f835.589838",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "Mod minage",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"switch_to_minage\")\n\t\t\t\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.includes(ask))\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 550,
        "y": 860,
        "wires": [
            [
                "84d01a09.15cab8"
            ],
            []
        ]
    },
    {
        "id": "b9d74481.20cbf8",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "Mod offensif",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\n\nsearch.push(\"switch_to_offensif\")\n\t\t\t\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.includes(ask))\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 550,
        "y": 620,
        "wires": [
            [
                "ecee7.1ed3b11a"
            ],
            []
        ]
    },
    {
        "id": "8613002.60b0b",
        "type": "exec",
        "z": "312c81eb.6f5b7e",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1750,
        "y": 240,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "8b69976a.e0fb98",
        "type": "loop",
        "z": "312c81eb.6f5b7e",
        "name": "15 fois",
        "kind": "fcnt",
        "count": "15",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "enum",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-orig",
        "finalPayload": "final-orig",
        "x": 1590,
        "y": 900,
        "wires": [
            [],
            [
                "22485ea.00904a2"
            ]
        ]
    },
    {
        "id": "e2d38e42.a1903",
        "type": "exec",
        "z": "312c81eb.6f5b7e",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1870,
        "y": 880,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "50d5a70d.5b9458",
        "type": "loop",
        "z": "312c81eb.6f5b7e",
        "name": "2 fois",
        "kind": "fcnt",
        "count": "2",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "enum",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-orig",
        "finalPayload": "final-orig",
        "x": 1650,
        "y": 420,
        "wires": [
            [],
            [
                "db2b275a.bac028"
            ]
        ]
    },
    {
        "id": "45cab13f.d48e8",
        "type": "exec",
        "z": "312c81eb.6f5b7e",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1870,
        "y": 440,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "36053846.fe4498",
        "type": "loop",
        "z": "312c81eb.6f5b7e",
        "name": "2 fois",
        "kind": "fcnt",
        "count": "2",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "enum",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-orig",
        "finalPayload": "final-orig",
        "x": 1650,
        "y": 380,
        "wires": [
            [],
            [
                "3d076cb3.6624a4"
            ]
        ]
    },
    {
        "id": "f4db1034.0c13f",
        "type": "exec",
        "z": "312c81eb.6f5b7e",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1870,
        "y": 680,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "2f8a8783.cb61d8",
        "type": "trigger",
        "z": "312c81eb.6f5b7e",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "750",
        "extend": false,
        "units": "ms",
        "reset": "reset",
        "name": "",
        "x": 940,
        "y": 380,
        "wires": [
            [
                "50d5a70d.5b9458",
                "36053846.fe4498",
                "f5604256.1f851"
            ]
        ]
    },
    {
        "id": "53a66314.3c3fec",
        "type": "trigger",
        "z": "312c81eb.6f5b7e",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "750",
        "extend": false,
        "units": "ms",
        "reset": "reset",
        "name": "",
        "x": 960,
        "y": 620,
        "wires": [
            [
                "52bae7b2.7b5418",
                "c8e546ef.7a2318"
            ]
        ]
    },
    {
        "id": "bf80b433.dc7c88",
        "type": "trigger",
        "z": "312c81eb.6f5b7e",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "750",
        "extend": false,
        "units": "ms",
        "reset": "reset",
        "name": "",
        "x": 960,
        "y": 900,
        "wires": [
            [
                "8b69976a.e0fb98",
                "1b70770d.01ec69"
            ]
        ]
    },
    {
        "id": "3434e62e.f8d6ba",
        "type": "start-up-trigger",
        "z": "312c81eb.6f5b7e",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "cefdc385.508af"
            ]
        ]
    },
    {
        "id": "cefdc385.508af",
        "type": "trigger",
        "z": "312c81eb.6f5b7e",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 340,
        "y": 140,
        "wires": [
            [
                "fc7f5e0d.6f8e8",
                "d1dc7ae1.7f7738",
                "dd0932f3.628f9",
                "1e93760c.60ad7a",
                "6fd980ca.b7bad",
                "b38887b7.4583d8",
                "fc2ae014.4b3"
            ]
        ]
    },
    {
        "id": "fc7f5e0d.6f8e8",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 180,
        "y": 240,
        "wires": [
            [
                "7da13496.dadc6c"
            ]
        ]
    },
    {
        "id": "3bbbd013.36edf",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 240,
        "wires": [
            [
                "74074624.c46ad8",
                "a7663816.e32e28",
                "51f34dba.f17124"
            ]
        ]
    },
    {
        "id": "7da13496.dadc6c",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 240,
        "wires": [
            [
                "5a45b632.8e7a68"
            ]
        ]
    },
    {
        "id": "8093d9cd.a16548",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 380,
        "wires": [
            [
                "2f8a8783.cb61d8",
                "36dee0cf.9372b",
                "aede72ad.b421d"
            ]
        ]
    },
    {
        "id": "ecee7.1ed3b11a",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 620,
        "wires": [
            [
                "1b0cce9e.a80d61",
                "53a66314.3c3fec",
                "e6ea2073.118eb",
                "88005e17.12f75"
            ]
        ]
    },
    {
        "id": "84d01a09.15cab8",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 860,
        "wires": [
            [
                "bf80b433.dc7c88",
                "ea63eb8f.794278",
                "62979dee.2d2e94",
                "5c9cc285.ee0f7c"
            ]
        ]
    },
    {
        "id": "36dee0cf.9372b",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "ng_sfx mod_defensif",
        "func": "let sound_effect=[];\nlet track_id='mod_defensif';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1380,
        "y": 540,
        "wires": [
            [
                "45cab13f.d48e8"
            ]
        ]
    },
    {
        "id": "1b0cce9e.a80d61",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "ng_sfx mod_offensif",
        "func": "let sound_effect=[];\nlet track_id='mod_offensif';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 780,
        "wires": [
            [
                "f4db1034.0c13f"
            ]
        ]
    },
    {
        "id": "ea63eb8f.794278",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "ng_sfx mod_minage",
        "func": "let sound_effect=[];\nlet track_id='mod_minage';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1380,
        "y": 860,
        "wires": [
            [
                "e2d38e42.a1903"
            ]
        ]
    },
    {
        "id": "74074624.c46ad8",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "ng_sfx mod_navigation",
        "func": "let sound_effect=[];\nlet track_id='mod_navigation';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1310,
        "y": 240,
        "wires": [
            [
                "8613002.60b0b"
            ]
        ]
    },
    {
        "id": "d1dc7ae1.7f7738",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 180,
        "y": 380,
        "wires": [
            [
                "20e4aff1.a9904"
            ]
        ]
    },
    {
        "id": "20e4aff1.a9904",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 380,
        "wires": [
            [
                "e33ef19e.25bd9"
            ]
        ]
    },
    {
        "id": "dd0932f3.628f9",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 180,
        "y": 620,
        "wires": [
            [
                "a39399b0.aa6f58"
            ]
        ]
    },
    {
        "id": "a39399b0.aa6f58",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 620,
        "wires": [
            [
                "b9d74481.20cbf8"
            ]
        ]
    },
    {
        "id": "1e93760c.60ad7a",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 180,
        "y": 860,
        "wires": [
            [
                "f0f5c63b.5ac2b8"
            ]
        ]
    },
    {
        "id": "f0f5c63b.5ac2b8",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 860,
        "wires": [
            [
                "b102f835.589838"
            ]
        ]
    },
    {
        "id": "1b70770d.01ec69",
        "type": "trigger",
        "z": "312c81eb.6f5b7e",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "reset",
        "name": "",
        "x": 1100,
        "y": 940,
        "wires": [
            [
                "42dd5271.324a8c"
            ]
        ]
    },
    {
        "id": "a7663816.e32e28",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_shield_reset_level",
        "func": "let keybinding=global.get('v_shield_reset_level');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1350,
        "y": 280,
        "wires": [
            [
                "8613002.60b0b"
            ]
        ]
    },
    {
        "id": "51f34dba.f17124",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_capacitor_assignment_reset",
        "func": "let keybinding=global.get('v_capacitor_assignment_reset');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1380,
        "y": 320,
        "wires": [
            [
                "8613002.60b0b"
            ]
        ]
    },
    {
        "id": "f5604256.1f851",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_shield_reset_level",
        "func": "let keybinding=global.get('v_shield_reset_level');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1370,
        "y": 460,
        "wires": [
            [
                "45cab13f.d48e8"
            ]
        ]
    },
    {
        "id": "aede72ad.b421d",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_capacitor_assignment_reset",
        "func": "let keybinding=global.get('v_capacitor_assignment_reset');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1380,
        "y": 500,
        "wires": [
            [
                "45cab13f.d48e8"
            ]
        ]
    },
    {
        "id": "3d076cb3.6624a4",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_capacitor_assignment_weapon_combined_increase_max",
        "func": "let keybinding=global.get('v_capacitor_assignment_weapon_combined_increase_max');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1330,
        "y": 380,
        "wires": [
            [
                "36053846.fe4498",
                "45cab13f.d48e8"
            ]
        ]
    },
    {
        "id": "db2b275a.bac028",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_capacitor_assignment_shield_combined_increase_max",
        "func": "let keybinding=global.get('v_capacitor_assignment_shield_combined_increase_max');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1330,
        "y": 420,
        "wires": [
            [
                "50d5a70d.5b9458",
                "45cab13f.d48e8"
            ]
        ]
    },
    {
        "id": "88005e17.12f75",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_capacitor_assignment_reset",
        "func": "let keybinding=global.get('v_capacitor_assignment_reset');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1360,
        "y": 700,
        "wires": [
            [
                "f4db1034.0c13f"
            ]
        ]
    },
    {
        "id": "e6ea2073.118eb",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_shield_reset_level",
        "func": "let keybinding=global.get('v_shield_reset_level');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1350,
        "y": 740,
        "wires": [
            [
                "f4db1034.0c13f"
            ]
        ]
    },
    {
        "id": "52bae7b2.7b5418",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_capacitor_assignment_weapon_combined_increase_max",
        "func": "let keybinding=global.get('v_capacitor_assignment_weapon_combined_increase_max');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1350,
        "y": 620,
        "wires": [
            [
                "f4db1034.0c13f"
            ]
        ]
    },
    {
        "id": "c8e546ef.7a2318",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_capacitor_assignment_shield_combined_increase_max",
        "func": "let keybinding=global.get('v_capacitor_assignment_shield_combined_increase_max');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1350,
        "y": 660,
        "wires": [
            [
                "f4db1034.0c13f"
            ]
        ]
    },
    {
        "id": "62979dee.2d2e94",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_shield_reset_level",
        "func": "let keybinding=global.get('v_shield_reset_level');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1390,
        "y": 980,
        "wires": [
            [
                "e2d38e42.a1903"
            ]
        ]
    },
    {
        "id": "5c9cc285.ee0f7c",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_capacitor_assignment_reset",
        "func": "let keybinding=global.get('v_capacitor_assignment_reset');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1380,
        "y": 1020,
        "wires": [
            [
                "e2d38e42.a1903"
            ]
        ]
    },
    {
        "id": "42dd5271.324a8c",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto open_min_tools",
        "func": "let keybinding=global.get('open_min_tools');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1380,
        "y": 940,
        "wires": [
            [
                "e2d38e42.a1903"
            ]
        ]
    },
    {
        "id": "22485ea.00904a2",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_shield_raise_level_forward",
        "func": "let keybinding=global.get('v_shield_raise_level_forward');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1360,
        "y": 900,
        "wires": [
            [
                "8b69976a.e0fb98",
                "e2d38e42.a1903"
            ]
        ]
    },
    {
        "id": "1298eb53.96cad5",
        "type": "comment",
        "z": "312c81eb.6f5b7e",
        "name": "Scénario mod défensif",
        "info": "\n\n",
        "x": 140,
        "y": 340,
        "wires": []
    },
    {
        "id": "8208389d.a2c9c8",
        "type": "comment",
        "z": "312c81eb.6f5b7e",
        "name": "Scénario mod attaque / offensif",
        "info": "\n\n",
        "x": 170,
        "y": 580,
        "wires": []
    },
    {
        "id": "64200498.b5208c",
        "type": "comment",
        "z": "312c81eb.6f5b7e",
        "name": "Scénario mod minage",
        "info": "\n\n",
        "x": 140,
        "y": 820,
        "wires": []
    },
    {
        "id": "fb81047.b4efbf8",
        "type": "comment",
        "z": "312c81eb.6f5b7e",
        "name": "Scénario coupure d'urgence",
        "info": "\n\n",
        "x": 160,
        "y": 1040,
        "wires": []
    },
    {
        "id": "d777f583.866298",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "Coupure d'urgence",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"emergency_stop\")\n\t\t\t\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.includes(ask))\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 550,
        "y": 1080,
        "wires": [
            [
                "b5c04f58.ada86"
            ],
            []
        ]
    },
    {
        "id": "6fd980ca.b7bad",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 1080,
        "wires": [
            [
                "366c3f1e.4dbff"
            ]
        ]
    },
    {
        "id": "366c3f1e.4dbff",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 1080,
        "wires": [
            [
                "d777f583.866298"
            ]
        ]
    },
    {
        "id": "b5c04f58.ada86",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 1080,
        "wires": [
            [
                "21765aa9.8ff476",
                "665c0bd4.286da4",
                "66e605b7.b981bc"
            ]
        ]
    },
    {
        "id": "665c0bd4.286da4",
        "type": "trigger",
        "z": "312c81eb.6f5b7e",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "reset",
        "name": "",
        "x": 1000,
        "y": 1160,
        "wires": [
            [
                "9a12917a.5b9db",
                "d821760c.f9fa08"
            ]
        ]
    },
    {
        "id": "21765aa9.8ff476",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_power_set_off",
        "func": "let keybinding=global.get('v_power_set_off');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1400,
        "y": 1120,
        "wires": [
            [
                "5b826cb6.76c544"
            ]
        ]
    },
    {
        "id": "9a12917a.5b9db",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_power_set_on",
        "func": "let keybinding=global.get('v_power_set_on');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1400,
        "y": 1160,
        "wires": [
            [
                "5b826cb6.76c544"
            ]
        ]
    },
    {
        "id": "f2776993.1eea38",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_toggle_quantum_mode",
        "func": "let keybinding=global.get('v_toggle_quantum_mode');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1430,
        "y": 1200,
        "wires": [
            [
                "5b826cb6.76c544"
            ]
        ]
    },
    {
        "id": "d821760c.f9fa08",
        "type": "trigger",
        "z": "312c81eb.6f5b7e",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "reset",
        "name": "",
        "x": 1160,
        "y": 1200,
        "wires": [
            [
                "f2776993.1eea38"
            ]
        ]
    },
    {
        "id": "5b826cb6.76c544",
        "type": "exec",
        "z": "312c81eb.6f5b7e",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1750,
        "y": 1120,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "66e605b7.b981bc",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "ng_sfx commun_swan",
        "func": "let sound_effect=[];\nlet track_id='commun_swan';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1400,
        "y": 1080,
        "wires": [
            [
                "5b826cb6.76c544"
            ]
        ]
    },
    {
        "id": "d4b050da.5661a",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "décollage en urgence",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"emergency_take_off\")\n\t\t\t\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.includes(ask))\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 560,
        "y": 1260,
        "wires": [
            [
                "9cd26162.82297"
            ],
            []
        ]
    },
    {
        "id": "b38887b7.4583d8",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 1260,
        "wires": [
            [
                "9e558df3.3c7cc"
            ]
        ]
    },
    {
        "id": "9e558df3.3c7cc",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 1260,
        "wires": [
            [
                "d4b050da.5661a"
            ]
        ]
    },
    {
        "id": "9cd26162.82297",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 1260,
        "wires": [
            [
                "eb30819.5b18c8",
                "a26943aa.78ee9",
                "a9818f99.a3c91",
                "a7406685.b81b58"
            ]
        ]
    },
    {
        "id": "eb30819.5b18c8",
        "type": "trigger",
        "z": "312c81eb.6f5b7e",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "reset",
        "name": "",
        "x": 940,
        "y": 1340,
        "wires": [
            [
                "b7b1fd.0f602e",
                "fd4e4c06.e473a"
            ]
        ]
    },
    {
        "id": "b7b1fd.0f602e",
        "type": "trigger",
        "z": "312c81eb.6f5b7e",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "reset",
        "name": "",
        "x": 1080,
        "y": 1380,
        "wires": [
            [
                "437a3a7a.f1d134"
            ]
        ]
    },
    {
        "id": "a3005422.aca1b8",
        "type": "exec",
        "z": "312c81eb.6f5b7e",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1750,
        "y": 1300,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "38118b72.bdcec4",
        "type": "comment",
        "z": "312c81eb.6f5b7e",
        "name": "Scénario décollage en urgence",
        "info": "\n\n",
        "x": 170,
        "y": 1220,
        "wires": []
    },
    {
        "id": "fd4e4c06.e473a",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_power_set_on",
        "func": "let keybinding=global.get('v_power_set_on');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1400,
        "y": 1340,
        "wires": [
            [
                "a3005422.aca1b8"
            ]
        ]
    },
    {
        "id": "a26943aa.78ee9",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_atc_request",
        "func": "let keybinding=global.get('v_atc_request');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1390,
        "y": 1300,
        "wires": [
            [
                "a3005422.aca1b8"
            ]
        ]
    },
    {
        "id": "437a3a7a.f1d134",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_lights",
        "func": "let keybinding=global.get('v_lights');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1390,
        "y": 1380,
        "wires": [
            [
                "a3005422.aca1b8"
            ]
        ]
    },
    {
        "id": "60c1ac92.8a65e4",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "préparatif aterrissage",
        "func": "let accept={}\nlet reject={}\nlet search=[]\n\nsearch.push(\"landing_seq\")\n\t\t\t\nlet find=false\n\nif (msg.topic===true){\n    search.forEach((ask) => {\n        if(find===false)\n        {\n            if(msg.action.includes(ask))\n            {\n                console.log(\"jai une correspondance avec : \"+ ask)\n                find=true\n            }\n        }\n    });\n    \n    if(find===true)\n    {\n        search=[]\n        accept.topic=true;\n    }\n    else\n    {\n        reject.payload=msg.payload;\n        reject.topic=true;\n    }\n    return [accept,reject]\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 540,
        "y": 1520,
        "wires": [
            [
                "15cf1156.ae2bdf"
            ],
            []
        ]
    },
    {
        "id": "fc2ae014.4b3",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "search in mem",
        "func": "let last_memory=global.get(\"SWAN_M\")\n\n//console.log(global.get(\"SWAN_M\"))\nlet instruction=last_memory[0]\nmsg=instruction\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 140,
        "y": 1520,
        "wires": [
            [
                "430453c0.9b9e8c"
            ]
        ]
    },
    {
        "id": "430453c0.9b9e8c",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "sommeil / attente",
        "func": "if (global.get('swan_active')===true){\n    return msg;\n       \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 1520,
        "wires": [
            [
                "60c1ac92.8a65e4"
            ]
        ]
    },
    {
        "id": "15cf1156.ae2bdf",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "use memory",
        "func": "if(msg.topic===true)\n{\n    let last_memory=global.get(\"SWAN_M\")\n    let memory=[]\n    \n    //console.log(global.get(\"SWAN_M\"))\n    let instruction=last_memory[0]\n    msg=instruction\n    \n    for (i=0; i<last_memory.length;i++)\n    {\n        //console.log(last_memory[i])\n        memory.push(last_memory[i])\n    }\n    \n    \n    //let memory=global.get(\"SWAN_M\")\n    //console.log(\"memory avant :\")\n    //console.log(memory)\n    //console.log(\"nb avant: \"+memory.length)\n    \n    memory = memory.slice(1);\n    global.set(\"SWAN_M\",memory)\n    //console.log(\"memory aprés :\")\n    //console.log(memory)\n    //console.log(\"nb aprés : \"+memory.length)\n    \n    //memory=global.get(\"SWAN_M\")\n    msg={}\n    msg.topic=true\n    msg.payload=memory\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 1520,
        "wires": [
            [
                "d93b4520.071dd8",
                "39a4d7f3.551c98",
                "d1af4dcd.74396"
            ]
        ]
    },
    {
        "id": "d93b4520.071dd8",
        "type": "trigger",
        "z": "312c81eb.6f5b7e",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "4",
        "extend": false,
        "units": "s",
        "reset": "reset",
        "name": "",
        "x": 920,
        "y": 1600,
        "wires": [
            [
                "a6d58ad4.9c9c18",
                "e5dc1e73.ec31d"
            ]
        ]
    },
    {
        "id": "a6d58ad4.9c9c18",
        "type": "trigger",
        "z": "312c81eb.6f5b7e",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "reset",
        "name": "",
        "x": 1040,
        "y": 1640,
        "wires": [
            [
                "6dc9c69a.d01eb8",
                "f19b36f1.58fcf8"
            ]
        ]
    },
    {
        "id": "56535054.24ed3",
        "type": "exec",
        "z": "312c81eb.6f5b7e",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "exec_cmd",
        "x": 1750,
        "y": 1520,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e8ef6430.ea9e58",
        "type": "comment",
        "z": "312c81eb.6f5b7e",
        "name": "Scénario préparatif atterrissage",
        "info": "\n\n",
        "x": 150,
        "y": 1480,
        "wires": []
    },
    {
        "id": "39a4d7f3.551c98",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_atc_request",
        "func": "let keybinding=global.get('v_atc_request');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1390,
        "y": 1560,
        "wires": [
            [
                "56535054.24ed3"
            ]
        ]
    },
    {
        "id": "6dc9c69a.d01eb8",
        "type": "trigger",
        "z": "312c81eb.6f5b7e",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "reset",
        "name": "",
        "x": 1160,
        "y": 1680,
        "wires": [
            [
                "774bfc5d.8c9164"
            ]
        ]
    },
    {
        "id": "e5dc1e73.ec31d",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_toggle_landing_system",
        "func": "let keybinding=global.get('v_toggle_landing_system');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1410,
        "y": 1600,
        "wires": [
            [
                "56535054.24ed3"
            ]
        ]
    },
    {
        "id": "f19b36f1.58fcf8",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_shield_reset_level",
        "func": "let keybinding=global.get('v_shield_reset_level');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1410,
        "y": 1640,
        "wires": [
            [
                "56535054.24ed3"
            ]
        ]
    },
    {
        "id": "774bfc5d.8c9164",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "keybinding_auto v_capacitor_assignment_reset",
        "func": "let keybinding=global.get('v_capacitor_assignment_reset');\nconsole.log(keybinding);\nlet before=\"\";\nlet after=\"\";\nlet para_1=\"\";\nlet para_2=\"\";\nlet exec=global.get(\"a_k_auto_path\");\nlet exec_long=global.get(\"a_k_auto_long_path\");\nlet exec_mouse=global.get(\"a_k_mouse\");\n//let sound=`\\\"`+global.get(\"a_k_auto_path\")+`bip\\\\bip_0.mp4\\\"`;\nif (keybinding.includes(\"{right_click}\") || keybinding.includes(\"{molette_click}\") || keybinding.includes(\"{left_click}\"))\n{\n    keybinding=keybinding.replace(\"{right_click}\", \"right\")\n    keybinding=keybinding.replace(\"{molette_click}\", \"middle\")\n    keybinding=keybinding.replace(\"{left_click}\", \"left\")\n    \n    msg.payload=exec_mouse+\" \\\"\"+keybinding+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse if(keybinding.includes(\"{LONG}\"))\n{\n    keybinding=keybinding.replace('{LONG}','');\n    if(keybinding.includes('{LAlt}'))\n    {\n        para_1+=\"{LAlt down}\";\n        para_2+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        para_1+=\"{RAlt down}\";\n        para_2+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        para_1+=\"{LShift down}\";\n        para_2+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        para_1+=\"{RShift down}\";\n        para_2+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        para_1+=\"{RCtrl down}\";\n        para_2+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        para_1+=\"{LCtrl down}\";\n        para_2+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    let n=keybinding.lastIndexOf(\"}\");\n    \n    let down=keybinding.substring(0,n)+\" down \"+keybinding.substring(n);\n    let up=keybinding.substring(0,n)+\" up \"+keybinding.substring(n);\n   // var str2 = str.substring(0,n)+\" again \"+str.substring(n);\n    //console.log(str2); // Hello planet earth, you are a great  again planet. \n    \n    \n    msg.payload=exec_long+\"  \\\"\"+para_1+up+\"\\\" \\\"\"+para_2+down+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    return msg;\n}\nelse //if(keybinding.includes('{LONG}') && !keybinding.includes(\"{right_click}\") && !keybinding.includes(\"{molette_click}\") && !keybinding.includes(\"{left_click}\"))\n{\n    if(keybinding.includes('{LAlt}'))\n    {\n        before+=\"{LAlt down}\";\n        after+=\"{LAlt up}\";\n        keybinding=keybinding.replace('{LAlt}','');\n    }\n    if(keybinding.includes('{RAlt}'))\n    {\n        before+=\"{RAlt down}\";\n        after+=\"{RAlt up}\";\n        keybinding=keybinding.replace('{RAlt}','');\n    }\n    if(keybinding.includes('{LShift}'))\n    {\n        before+=\"{LShift down}\";\n        after+=\"{LShift up}\";\n        keybinding=keybinding.replace('{LShift}','');\n    }\n    if(keybinding.includes('{RShift}'))\n    {\n        before+=\"{RShift down}\";\n        after+=\"{RShift up}\";\n        keybinding=keybinding.replace('{RShift}','');\n    }\n    if(keybinding.includes('{RCtrl}'))\n    {\n        before+=\"{RCtrl down}\";\n        after+=\"{RCtrl up}\";\n        keybinding=keybinding.replace('{RCtrl}','');\n    }\n    if(keybinding.includes('{LCtrl}'))\n    {\n        before+=\"{LCtrl down}\";\n        after+=\"{LCtrl up}\";\n        keybinding=keybinding.replace('{LCtrl}','');\n    }\n    \n    msg.payload=exec+\" \\\"\"+before+keybinding+after+\"\\\"\";\n    console.log(\"j'envoie : \");\n    console.log( msg.payload);\n    console.log(\"fin!\");\n    \n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1420,
        "y": 1680,
        "wires": [
            [
                "56535054.24ed3"
            ]
        ]
    },
    {
        "id": "a9818f99.a3c91",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "ng_sfx clear_take_off",
        "func": "let sound_effect=[];\nlet track_id='clear_take_off';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1400,
        "y": 1260,
        "wires": [
            [
                "a3005422.aca1b8"
            ]
        ]
    },
    {
        "id": "d1af4dcd.74396",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "ng_sfx clear_landing",
        "func": "let sound_effect=[];\nlet track_id='clear_landing';\nlet number_tracks=global.get(track_id+\"_q\");\n\n\nsound_effect=global.get(track_id+\"_sound\")\n\nconsole.log(\"taille de la banque\")\nconsole.log(sound_effect.length)\nconsole.log(sound_effect)\n\nif(global.get('discret')===true || sound_effect.length===0)\n{\n    let sound=`\\\"`+global.get(\"path_sound\")+`bip\\\\bip_0.mp4\\\"`;\n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+sound+'.mp4';\n}\nelse\n{\n    let random=Math.floor(Math.random() * sound_effect.length)\n    let sound=sound_effect[random];\n    \n    msg.payload= global.get(`vlc_path`)+global.get(`vlc_para`)+`\\\"`+global.get(\"path_sound\")+track_id+\"\\\\\"+sound;\n    console.log( msg.payload)\n}\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "x": 1400,
        "y": 1520,
        "wires": [
            [
                "56535054.24ed3"
            ]
        ]
    },
    {
        "id": "a7406685.b81b58",
        "type": "trigger",
        "z": "312c81eb.6f5b7e",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "3",
        "extend": false,
        "units": "s",
        "reset": "reset",
        "name": "",
        "x": 940,
        "y": 1420,
        "wires": [
            [
                "22d7a4b1.9b06ac",
                "b4448091.af695"
            ]
        ]
    },
    {
        "id": "9d24139d.9d4a7",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "commande simulée go_them_take_off",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'go_them_take_off';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\n\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1390,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "22d7a4b1.9b06ac",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "commande simulée stop_player",
        "func": "data={}\ndata.topic= true;\ndata.payload= 'commande simulée';\ndata.action= 'stop_player';\ndata.confiance= '0.99';\ndata.time= Date.now();\ndata.attemp=0\n\n\n\n\nglobal.get(\"SWAN_M\").push(data)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1390,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "b4448091.af695",
        "type": "trigger",
        "z": "312c81eb.6f5b7e",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "250",
        "extend": false,
        "units": "ms",
        "reset": "reset",
        "name": "",
        "x": 1120,
        "y": 1420,
        "wires": [
            [
                "9d24139d.9d4a7"
            ]
        ]
    },
    {
        "id": "d4392ad9.f32518",
        "type": "inject",
        "z": "312c81eb.6f5b7e",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 60,
        "wires": [
            [
                "8a13258.aab6dd8"
            ]
        ]
    },
    {
        "id": "8a13258.aab6dd8",
        "type": "file in",
        "z": "312c81eb.6f5b7e",
        "name": "auto",
        "filename": "./../viseo-bot-project/data/flows.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 310,
        "y": 60,
        "wires": [
            [
                "1b823bb.3ef2cc4"
            ]
        ]
    },
    {
        "id": "1b823bb.3ef2cc4",
        "type": "json",
        "z": "312c81eb.6f5b7e",
        "name": "from json",
        "pretty": false,
        "x": 440,
        "y": 60,
        "wires": [
            [
                "198bf022.0c3e9"
            ]
        ]
    },
    {
        "id": "198bf022.0c3e9",
        "type": "function",
        "z": "312c81eb.6f5b7e",
        "name": "targeting",
        "func": "let id_scan=\"\";data=msg.payload\n\nfor(i=0;i<data.length;i++)\n{\n    if(data[i].hasOwnProperty(\"type\"))\n    {\n       if (data[i].label===\"12_Scénario\")\n        {\n            id_scan=data[i].id;\n        }\n    }\n}\n\nmsg.payload=[];\n\nfor(i=0;i<data.length;i++)\n{\n    if (data[i].z===id_scan || data[i].id===id_scan)\n        {\n            msg.payload.push(data[i])\n        }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 60,
        "wires": [
            [
                "5854f081.76091"
            ]
        ]
    },
    {
        "id": "5854f081.76091",
        "type": "json",
        "z": "312c81eb.6f5b7e",
        "name": "to json",
        "pretty": true,
        "x": 710,
        "y": 60,
        "wires": [
            [
                "4a3e6218.78462c"
            ]
        ]
    },
    {
        "id": "4a3e6218.78462c",
        "type": "file",
        "z": "312c81eb.6f5b7e",
        "name": "12_Scénario",
        "filename": "./../viseo-bot-project/data/flow/master/12_Scénario.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 850,
        "y": 60,
        "wires": []
    },
    {
        "id": "5767968a.c2b2d8",
        "type": "comment",
        "z": "312c81eb.6f5b7e",
        "name": "sauvegarde du flow pour exportation ou modeur",
        "info": "",
        "x": 220,
        "y": 20,
        "wires": []
    },
    {
        "id": "bf7c84a2.40a7b8",
        "type": "comment",
        "z": "f07cdeb.340a32",
        "name": "VTOL",
        "info": "\n\n",
        "x": 110,
        "y": 600,
        "wires": []
    },
    {
        "id": "98b2fe78.dc77f",
        "type": "function",
        "z": "e23f34c2.ea7468",
        "name": "gg",
        "func": "msg.payload = \"tata: \"+node.name\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 620,
        "wires": [
            [
                "db1479ae.57fc48"
            ]
        ]
    },
    {
        "id": "db1479ae.57fc48",
        "type": "debug",
        "z": "e23f34c2.ea7468",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 770,
        "y": 620,
        "wires": []
    },
    {
        "id": "a2a16a55.d6e468",
        "type": "inject",
        "z": "e23f34c2.ea7468",
        "name": "exportation du flow",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 350,
        "y": 600,
        "wires": [
            [
                "98b2fe78.dc77f"
            ]
        ]
    }
]